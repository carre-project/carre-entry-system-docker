function sidebarDirective(){return{templateUrl:"app/components/sidebar/sidebar.html",restrict:"E",replace:!0,scope:{},controllerAs:"sidebar",controller:["$rootScope","$scope","$state",function($rootScope,$scope,$state){function show_carreElementsMenu(state){return carreElementsMenu.indexOf(state.substring(0,state.lastIndexOf(".")))>=0}var carreElementsMenu=[];angular.forEach(angular.element("#carreElements > ul.nav.nav-second-level > li > a"),function(el){carreElementsMenu.push(angular.element(el).attr("ui-sref-active-if"))}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams,error){$scope.carreElements=show_carreElementsMenu(toState.name)}),$scope.carreElements=show_carreElementsMenu($state.current.name),$scope.slideWidth=window.innerWidth>730?.4*window.innerWidth:.9*window.innerWidth,$(window).resize(function(){$scope.showAbout&&($scope.slideWidth=window.innerWidth>730?.4*window.innerWidth:.9*window.innerWidth,$scope.slideWidth=window.innerWidth>730?.4*window.innerWidth:.9*window.innerWidth,$scope.$apply(function(){$scope.showAbout=!1}),$scope.$apply(function(){$scope.showAbout=!0}))})}]}}!function(){"use strict";angular.module("CarreEntrySystem",["ngAnimate","ngCookies","angular-loading-bar","ngTouch","ngSanitize","ngMessages","ui.router","ui.bootstrap","toastr","cgBusy","ui.grid","ui.grid.cellNav","ui.grid.edit","ui.grid.selection","ui.grid.resizeColumns","ui.grid.pinning","ui.grid.moveColumns","ui.grid.exporter","ui.grid.grouping","ui.grid.pagination","ui.grid.autoResize","ui.select","pageslide-directive","toggle-switch","chart.js","oitozero.ngSweetAlert","permission","angular-intro","rzModule"])}(),function(){"use strict";function risk_factorsSingleController(content,Risk_factors,uiGridGroupingConstants,$scope,uiGridConstants,$state){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}function loadRiskEvidences(id){vm.gridLoading=Risk_factors.risk_evidences(id).then(function(res){res.data?(vm.mygrid.data=res.data,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_evidences.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})):(vm.mygrid.columnDefs=[],vm.mygrid.data=[])})}var vm=$scope;if(vm.id=$state.params.id,$state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view",loadRiskEvidences(vm.id);else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("risk_factor:save",returnBack),$scope.$on("risk_factor:cancel",returnBack);var visibleGridColumns=["has_risk_factor","has_observable_condition_text","has_risk_evidence_ratio_value"];vm.mygrid=content["default"]}risk_factorsSingleController.$inject=["content","Risk_factors","uiGridGroupingConstants","$scope","uiGridConstants","$state"],angular.module("CarreEntrySystem").controller("risk_factorsSingleController",risk_factorsSingleController)}(),angular.module("CarreEntrySystem").directive("riskFactorForm",function(){return{templateUrl:"app/pages/risk_factors/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$scope","Observables","Bioportal","Risk_elements","Risk_factors","Auth","toastr",function($scope,Observables,Bioportal,Risk_elements,Risk_factors,Auth,toastr){$scope.model=$scope.model||{},Risk_elements.get().then(function(res){$scope.risk_elements=res.data.map(function(rl){return{value:rl.id,label:rl.has_risk_element_name_label}})}),$scope.types=[{label:"is an issue in",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_factor_association_type_is_an_issue_in"},{label:"causes",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_factor_association_type_causes"},{label:"reduces",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_factor_association_type_reduces"},{label:"elevates",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_factor_association_type_elevates"}],$scope.saveModel=function(){Risk_factors.save($scope.model,$scope.risk_factor).then(function(res){$scope.$emit("risk_factor:save"),toastr.success("<b> Risk factor</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Risk factor saved</h4>")})},$scope.cancelForm=function(){$scope.$emit("risk_factor:cancel")},$scope.model.id?$scope.risk_factor={source:$scope.model.has_risk_factor_source[0],target:$scope.model.has_risk_factor_target[0],type:$scope.model.has_risk_factor_association_type[0]}:$scope.risk_factor={source:"",target:"",type:""}}]}}),function(){"use strict";function risk_evidencesSingleController($state,$scope,CARRE){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}var vm=$scope;if(vm.id=$state.params.id,vm.pubmedId=$state.params.pubmedId,$state.is("main.risk_evidences.createWithId"))vm.pubmedId?CARRE.search("citation",vm.pubmedId).then(function(res){vm.create=!0,res.data=res.data||[],res.data.length>0?(vm.current={pubmedId:vm.pubmedId,citation:res.data[0].id},vm.mode="create"):(vm.current={pubmedId:vm.pubmedId},vm.mode="create")}):$state.go("main.risk_evidences.create",{},{reload:!0});else if($state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view";else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("risk_evidence:save",returnBack),$scope.$on("risk_evidence:cancel",returnBack)}risk_evidencesSingleController.$inject=["$state","$scope","CARRE"],angular.module("CarreEntrySystem").controller("risk_evidencesSingleController",risk_evidencesSingleController)}(),angular.module("CarreEntrySystem").directive("riskEvidenceForm",function(){return{templateUrl:"app/pages/risk_evidences/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$rootScope","$scope","$state","$stateParams","Citations","Observables","Bioportal","Risk_factors","Risk_evidences","toastr","$timeout","Measurement_types","$q",function($rootScope,$scope,$state,$stateParams,Citations,Observables,Bioportal,Risk_factors,Risk_evidences,toastr,$timeout,Measurement_types,$q){function loadPubmed(){$scope.showPubmed=!1,$timeout(function(){$scope.showPubmed=!0,updateSelectedCitation()},200)}function updateSelectedCitation(){$timeout(function(){$scope.risk_evidence.evidence_source=$scope.CIbyPMID($scope.citations,$scope.risk_evidence.pubmedId)},0)}function computed(group){if(!$scope.observables)return"";if(!group)return"";for(var str="(",i=0;i<group.rules.length;i++)i>0&&(str+=" <b>"+group.operator+"</b> "),str+=group.rules[i].group?computed(group.rules[i].group):getObservableName(group.rules[i].field)+" "+group.rules[i].condition+" "+group.rules[i].data;return str+")"}function computedRaw(group){if(!$scope.observables)return"";if(!group)return"";for(var str="(",i=0;i<group.rules.length;i++)i>0&&(str+=" "+group.operator+" "),str+=group.rules[i].group?computed(group.rules[i].group):group.rules[i].field+" "+group.rules[i].condition+" "+group.rules[i].data;return str+")"}function getObservableName(id){if(!id)return"";if($scope.observables){var result=$scope.observables.filter(function(ob){return ob.value===id});return result.length>0?"<a href='/observables/"+id+"'>"+result[0].label+"</a>":""}}function removeOuterParenthesis(str){return str.substr(1,str.length-2)}function cleanseCondition(obj){obj.condition?(delete obj.hiddenData,delete obj.datatype,delete obj.unit_label,delete obj.dataoptions,delete obj.unit):obj.group.rules&&obj.group.rules.forEach(function(condition){cleanseCondition(condition)})}$scope.copyModel={},angular.copy($scope.model,$scope.copyModel),$scope.showLeEditor=!1,$scope.model=$scope.model||{},$scope.bioportalAutocompleteResults=[],$scope.$on("citation:save",function(res){$scope.showAddCitation=!1,Citations.get().then(function(res){$scope.citations=res.data.map(function(obj){var label=[];return obj.has_citation_summary_label&&(label=obj.has_citation_summary_label.split(".")),{value:obj.id||"",pubmed:obj.has_citation_pubmed_identifier[0]||"",title:label[1].replace("; ","")||"",authors:label[0]||"",date:label[2]||""}}),updateSelectedCitation()})}),$scope.model.id?($scope.risk_evidence={observables:[],ratio_type:$scope.model.has_risk_evidence_ratio_type?$scope.model.has_risk_evidence_ratio_type[0]:"",ratio_value:$scope.model.has_risk_evidence_ratio_value?parseFloat($scope.model.has_risk_evidence_ratio_value[0]):0,confidence_interval_min:$scope.model.has_confidence_interval_min?parseFloat($scope.model.has_confidence_interval_min[0]):0,confidence_interval_max:$scope.model.has_confidence_interval_max?parseFloat($scope.model.has_confidence_interval_max[0]):0,risk_factor:$scope.model.has_risk_factor[0],pubmedId:$scope.model.has_risk_evidence_source_label,evidence_source:$scope.model.has_risk_evidence_source[0],condition:$scope.model.has_observable_condition,condition_json:angular.fromJson($scope.model.has_observable_condition_json[0]),condition_text:"",adjusted_for:[]},$scope.filter=$scope.risk_evidence.condition_json||{group:{operator:"AND",rules:[]}}):($scope.filter={group:{operator:"AND",rules:[]}},$scope.risk_evidence={observables:[],pubmedId:$scope.model.pubmedId||"",evidence_source:$scope.model.citation||"",risk_factor:"",condition_text:"",adjusted_for:[]}),$scope.adjusted_for=[],$q.all([Observables.get(),Measurement_types.get()]).then(function(res){var selected=[];$scope.observables=res[0].data.map(function(obj){var result={value:obj.id_label,id:obj.id,label:obj.has_observable_name_label,metype_label:obj.has_observable_measurement_type_label,metype_id:obj.has_observable_measurement_type[0]};return $scope.model.id&&$scope.model.has_risk_evidence_observable.indexOf(obj.id)>=0&&selected.push(obj.id),result}),$scope.risk_evidence.observables=selected,$scope.output=removeOuterParenthesis(computed($scope.filter.group)),$scope.metypes=res[1].data,$scope.showLeEditor=!0}),Risk_evidences.adjusted_for().then(function(res){$scope.adjusted_for=res,$scope.model.is_adjusted_for instanceof Array&&($scope.risk_evidence.adjusted_for=$scope.model.is_adjusted_for[0].split(",").map(function(str){return str.trim().toLocaleLowerCase()}))}),Risk_factors.get().then(function(res){$scope.risk_factors=res.data.map(function(obj){return{value:obj.id,label:obj.has_risk_factor_source_label+" ["+obj.has_risk_factor_association_type_label+"] "+obj.has_risk_factor_target_label}})}),Citations.get().then(function(res){$scope.citations=res.data.map(function(obj){var label=[];return obj.has_citation_summary_label&&(label=obj.has_citation_summary_label.split(".")),{value:obj.id||"",pubmed:obj.has_citation_pubmed_identifier[0]||"",title:label[1].replace("; ","")||"",authors:label[0]||"",date:label[2]||""}}),updateSelectedCitation()}),$scope.ratiotypes=[{label:"Hazard ratio",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_evidence_ratio_type_hazard_ratio"},{label:"Odds ratio",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_evidence_ratio_type_odds_ratio"},{label:"Relative risk",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_evidence_ratio_type_relative_risk"}],$scope.saveModel=function(){$scope.risk_evidence.condition_text=$scope.output.replace(/<\/?[a-z][a-z0-9]*[^>]*>/gi,"").replace(/&nbsp;/gi," ").replace(/&amp;/gi,"&").replace(/&quot;/gi,'"').replace(/&lt;/gi,"<").replace(/&gt;/gi,">");var condition_clean={};angular.copy($scope.filter,condition_clean),cleanseCondition(condition_clean),$scope.risk_evidence.condition_json=angular.toJson(condition_clean).toString().replace(/"/g,'\\"'),Risk_evidences.save($scope.model,$scope.risk_evidence).then(function(res){$scope.$emit("risk_evidence:save"),toastr.success("<b>"+$scope.risk_evidence.pubmedId+"</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Risk evidence saved</h4>")})},$scope.cancelForm=function(){$scope.$emit("risk_evidence:cancel")},$scope.loadPubmed=loadPubmed,$scope.viewPubmed=function(item,model){$scope.risk_evidence.pubmedId=item.pubmed,loadPubmed()},$scope.CIbyPMID=function(citations,pmid){return citations&&pmid?citations.filter(function(ci){return ci.pubmed===pmid}).map(function(ci){return ci.value})[0]:null},$scope.$watch("filter",function(newValue){$scope.risk_evidence.condition_json=newValue,$scope.output=removeOuterParenthesis(computed(newValue.group,0,{})),$scope.risk_evidence.condition=removeOuterParenthesis(computedRaw(newValue.group,0,{}))},!0),loadPubmed()}]}}),function(){"use strict";function risk_elementsSingleController($scope,$state){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}var vm=$scope;if(vm.id=$state.params.id,$state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view";else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("risk_element:save",returnBack),$scope.$on("risk_element:cancel",returnBack)}risk_elementsSingleController.$inject=["$scope","$state"],angular.module("CarreEntrySystem").controller("risk_elementsSingleController",risk_elementsSingleController)}(),angular.module("CarreEntrySystem").directive("riskElementForm",function(){return{templateUrl:"app/pages/risk_elements/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$scope","Observables","Bioportal","Risk_elements","Auth","toastr",function($scope,Observables,Bioportal,Risk_elements,Auth,toastr){$scope.model=$scope.model||{},$scope.bioportalAutocompleteResults=[],Observables.get().then(function(res){var selected=[];$scope.observables=res.data.map(function(ob){var obj={value:ob.id,label:ob.has_observable_name_label};return $scope.model.id&&$scope.model.has_risk_element_observable&&$scope.model.has_risk_element_observable.indexOf(ob.id)>=0&&selected.push(obj.value),obj}),$scope.risk_element.observables=selected}),Risk_elements.get().then(function(res){var selected=[];$scope.risk_elements=res.data.map(function(rl){var obj={value:rl.id,label:rl.has_risk_element_name_label};return $scope.model.id&&$scope.model.includes_risk_element&&$scope.model.includes_risk_element.indexOf(rl.id)>=0&&selected.push(obj.value),obj}),$scope.risk_element.risk_elements=selected}),$scope.types=[{label:"behavioural",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_behavioural"},{label:"biomedical",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_biomedical"},{label:"demographic",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_demographic"},{label:"intervention",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_intervention"},{label:"genetic",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_genetic"},{label:"environmental",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#risk_element_type_environmental"}],$scope.bioportalAutocomplete=function(term){return!(term.length<2)&&($scope.loadingElementIdentifier=!0,void Bioportal.fetch(term).then(function(res){$scope.bioportalAutocompleteResults=res,$scope.loadingElementIdentifier=!1}))},$scope.saveModel=function(){Risk_elements.save($scope.model,$scope.risk_element).then(function(res){$scope.$emit("risk_element:save"),toastr.success("<b>"+$scope.risk_element.name+"</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Risk element saved</h4>")})},$scope.cancelForm=function(){$scope.$emit("risk_element:cancel")},$scope.model.id?($scope.risk_element={observables:[],risk_elements:[],type:$scope.model.has_risk_element_type[0],name:$scope.model.has_risk_element_name_label,identifier:$scope.model.has_risk_element_identifier_label,modifiable_status:$scope.model.has_risk_element_modifiable_status_label},$scope.bioportalAutocomplete($scope.risk_element.identifier)):$scope.risk_element={observables:[],risk_elements:[],type:"",name:"",identifier:"",modifiable_status:""}}]}}),function(){"use strict";function observablesSingleController($scope,$state){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}var vm=$scope;if(vm.id=$state.params.id,$state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view";else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("observable:save",returnBack),$scope.$on("observable:cancel",returnBack)}observablesSingleController.$inject=["$scope","$state"],angular.module("CarreEntrySystem").controller("observablesSingleController",observablesSingleController)}(),angular.module("CarreEntrySystem").directive("observableForm",function(){return{templateUrl:"app/pages/observables/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$scope","Observables","Bioportal","Measurement_types","Auth","toastr","CONFIG",function($scope,Observables,Bioportal,Measurement_types,Auth,toastr,CONFIG){$scope.model=$scope.model||{},Measurement_types.get().then(function(res){$scope.measurement_types=res.data.map(function(obj){return{value:obj.id,label:obj.has_measurement_type_name_label}})}),$scope.bioportalAutocompleteResults=[],$scope.bioportalAutocomplete=function(term){if(term.length<2)return!1;$scope.loadingElementIdentifier=!0;var options={ontologies:"CMO"};Bioportal.fetch(term,options,"no cui").then(function(res){$scope.bioportalAutocompleteResults=res,$scope.loadingElementIdentifier=!1})},$scope.transformIndentifier=function(str){var formatted=str.replace(/ /g,"_").replace(/[^\w\s]/gi,"").toUpperCase();$scope.observable.identifier=formatted.length>0?"http://carre.kmi.open.ac.uk/external_observable_type/CMO_"+formatted:"_:blankNode"},$scope.transformPredicate=function(str){var formatted=str.toLowerCase();$scope.observable.predicate=formatted.length>0?"http://carre.kmi.open.ac.uk/ontology/sensors.owl#has_"+formatted:"_:blankNode"},$scope.types=[{label:"Personal",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#observable_type_personal"},{label:"Clinical",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#observable_type_clinical"},{label:"Other",value:"http://carre.kmi.open.ac.uk/ontology/risk.owl#observable_type_other"}],$scope.SensorPredicates=CONFIG.SENSOR_PREDICATES,$scope.saveModel=function(){Observables.save($scope.model,$scope.observable).then(function(res){$scope.$emit("observable:save"),toastr.success("<b>"+$scope.observable.name+"</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Observable saved</h4>")})},$scope.cancelForm=function(){$scope.$emit("observable:cancel")},$scope.model.id?($scope.observable={name:$scope.model.has_observable_name[0],type:$scope.model.has_observable_type[0],measurement_type:$scope.model.has_observable_measurement_type[0],identifier:$scope.model.has_external_type?$scope.model.has_external_type[0]:"",predicate:$scope.model.has_external_predicate?$scope.model.has_external_predicate[0]:""},$scope.customPredicate=$scope.model.has_external_predicate?$scope.model.has_external_predicate_label.split("has_")[1]:"",$scope.bioportalAutocomplete($scope.observable.identifier)):$scope.observable={name:"",type:"",measurement_type:"",identifier:"",predicate:""}}]}}),function(){"use strict";function medical_expertsSingleController(toastr,CONFIG,content,Bioportal,Medical_experts,CARRE,SweetAlert,$stateParams,$timeout,Pubmed,$state,$scope){function getMedical_expert(id){Medical_experts.get([id]).then(function(res){res.data?(vm.current=res.data[0],Bioportal.fetch(vm.current.has_medical_specialty_identifier_label,{ontologies:"MESH,SNOMEDCT"}).then(function(res){vm.current.has_medical_specialty_label=res[0].label||"",vm.current.has_medical_specialty_link=res[0].link||""}),Medical_experts.countFor(vm.current.has_graph_uri[0]).then(function(res){res.data.forEach(function(obj){var pos=labels_lo.indexOf(obj.type.value.split("#")[1]+"s");vm.counterchart_data[0][pos]=Number(obj.authored.value),vm.counterchart_data[1][pos]=Number(obj.reviewed.value)})})):$state.go("main.medical_experts.list")},function(err){$state.go("main.medical_experts.list")})}var vm=this,labels=["Risk Factors","Risk Evidences","Risk Elements","Observables","Citations"],labels_lo=labels.map(function(str){return str.toLowerCase().replace(" ","_")});vm.colors=CONFIG.COLORS,vm.counterchart_options={},vm.counterchart_labels=labels,vm.counterchart_series=["Entered","Reviewed"],vm.counterchart_data=[[0,0,0,0,0],[0,0,0,0,0]],vm.id=$stateParams.id,vm.current={},vm.id&&getMedical_expert(vm.id)}medical_expertsSingleController.$inject=["toastr","CONFIG","content","Bioportal","Medical_experts","CARRE","SweetAlert","$stateParams","$timeout","Pubmed","$state","$scope"],angular.module("CarreEntrySystem").controller("medical_expertsSingleController",medical_expertsSingleController)}(),function(){"use strict";function measurement_typesSingleController($state,$scope){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}var vm=$scope;if(vm.id=$state.params.id,$state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view";else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("measurement_type:save",returnBack),$scope.$on("measurement_type:cancel",returnBack)}measurement_typesSingleController.$inject=["$state","$scope"],angular.module("CarreEntrySystem").controller("measurement_typesSingleController",measurement_typesSingleController)}(),angular.module("CarreEntrySystem").directive("measurementTypeForm",function(){return{templateUrl:"app/pages/measurement_types/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$scope","Measurement_types","toastr","Bioportal",function($scope,Measurement_types,toastr,Bioportal){$scope.model=$scope.model||{},$scope.datatypes=["float","enum","integer","boolean"],$scope.bioportalAutocompleteResults=[],$scope.bioportalAutocomplete=function(term){if(term.length<2)return!1;$scope.loadingElementIdentifier=!0;var options={ontologies:"UO"};Bioportal.fetch(term,options,"no cui").then(function(res){$scope.bioportalAutocompleteResults=res,$scope.loadingElementIdentifier=!1})},$scope.transformItem=function(str){var formatted=str.replace(/ /g,"_").replace(/[^\w\s]/gi,"").toUpperCase();$scope.measurement_type.identifier="http://carre.kmi.open.ac.uk/external_measurement_unit/UO_"+formatted},$scope.saveModel=function(){"enum"===$scope.measurement_type.datatype||"boolean"===$scope.measurement_type.datatype?$scope.measurement_type.has_enumeration_values=$scope.measurement_type.values.join(";"):$scope.measurement_type.has_enumeration_values="",delete $scope.measurement_type.values,Measurement_types.save($scope.model,$scope.measurement_type).then(function(res){$scope.$emit("measurement_type:save"),toastr.success("<b>"+$scope.measurement_type.name+"</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Measurement type saved</h4>")})},$scope.cancelForm=function(){$scope.$emit("measurement_type:cancel")},$scope.model.id?($scope.measurement_type={name:$scope.model.has_measurement_type_name_label,unit:$scope.model.has_label_label||"",datatype:$scope.model.has_datatype_label,identifier:$scope.model.has_external_unit?$scope.model.has_external_unit[0]:""},"enum"!==$scope.model.has_datatype_label&&"boolean"!==$scope.model.has_datatype_label||($scope.measurement_type.values=$scope.model.has_enumeration_values_label.split(";")),$scope.bioportalAutocomplete($scope.measurement_type.identifier)):$scope.measurement_type={name:"",unit:"",datatype:"",values:[],identifier:""}}]}}),function(){"use strict";function citationsSingleController($stateParams,$state,CARRE,$scope){function returnBack(){vm.id?$state.go("^.view",{id:vm.id}):$state.go("^.list")}var vm=$scope;if(vm.id=$state.params.id,$state.is("main.citations.createWithId"))$stateParams.pubmedId?CARRE.search("citation",$stateParams.pubmedId).then(function(res){vm.create=!0,res.data=res.data||[],res.data.length>0?$state.go("main.citations.edit",{id:res.data[0].id_label},{reload:!0}):(vm.current={pubmedId:$stateParams.pubmedId},vm.mode="create")}):$state.go("main.citations.create",{},{reload:!0});else if($state.includes("**.create"))vm.mode="create";else if(vm.id)if($state.includes("**.view"))vm.mode="view";else{if(!$state.includes("**.edit"))return void $state.go("404_error");vm.mode="edit"}$scope.$on("citation:save",returnBack),$scope.$on("citation:cancel",returnBack)}citationsSingleController.$inject=["$stateParams","$state","CARRE","$scope"],angular.module("CarreEntrySystem").controller("citationsSingleController",citationsSingleController)}(),angular.module("CarreEntrySystem").directive("citationForm",function(){return{templateUrl:"app/pages/citations/form_component/form.html",restrict:"E",replace:!0,scope:{model:"="},controller:["$scope","Citations","Pubmed","toastr","$timeout","CONFIG",function($scope,Citations,Pubmed,toastr,$timeout,CONFIG){$scope.model=$scope.model||{},$scope.pubmedAutocompleteResults=[],$scope.noPubmed=$scope.model.noPubmed,$scope.types=[],Citations.types().then(function(res){$scope.types=res}),$scope.selectPubmed=function(item,model){var summary=null;item.title&&(summary=item.authorString+"; "+item.title+" "+item.journalTitle+" "+item.pubYear+";"+item.journalVolume+"("+item.issue+"):"+item.pageInfo+". doi:"+item.doi||"0000"),$scope.citation.pubmedId=item.pmid||$scope.citation.pubmedId,$scope.citation.summary=JSON.stringify(summary||$scope.citation.summary).slice(1,-1),$scope.loadPubmed()},$scope.loadPubmed=function(){$scope.showPubmed=!1,$timeout(function(){$scope.showPubmed=!0},200)},$scope.searchPubmed=function(term){return!(term.length<2)&&($scope.loadingElementIdentifier=!0,void Pubmed.search(term).then(function(res){$scope.pubmedAutocompleteResultsCount=res.count,$scope.pubmedAutocompleteResults=res.result.map(function(obj){return obj.title=obj.title||"",obj.authorString=obj.authorString||"",obj.source=obj.source||"",obj.pubYear=obj.pubYear||"",obj.pmid=obj.pmid||obj.id,obj}),$scope.loadingElementIdentifier=!1,$scope.selectPubmed($scope.pubmedAutocompleteResults[0]||{})}))},$scope.saveModel=function(){$scope.citation.type=$scope.citation.studyType[0],delete $scope.citation.studyType,Citations.save($scope.model,$scope.citation).then(function(res){res&&($scope.$emit("citation:save"),toastr.success("<b>Citation with PMID:"+$scope.citation.pubmedId+"</b>"+($scope.model.id?" has been updated":" has been created"),"<h4>Citations saved</h4>"))},function(err){})},$scope.cancelForm=function(){$scope.$emit("citation:cancel")},$scope.model.id?($scope.citation={type:$scope.model.has_citation_source_type_label||"",level:parseInt($scope.model.has_citation_source_level_label)||1,summary:$scope.model.has_citation_summary_label||"",pubmedId:$scope.model.has_citation_pubmed_identifier_label||""},$scope.searchPubmed($scope.citation.pubmedId),$scope.citation.studyType=[$scope.citation.type]):($scope.citation={type:"",level:1,summary:"",pubmedId:$scope.model.pubmedId||""},$scope.citation.pubmedId&&$scope.searchPubmed($scope.citation.pubmedId))}]}}),angular.module("CarreEntrySystem").directive("sidebarSearch",function(){return{templateUrl:"app/components/sidebar/sidebar-search/sidebar-search.html",restrict:"E",replace:!0,scope:{},controller:["$scope",function($scope){$scope.selectedMenu="home"}]}}),angular.module("CarreEntrySystem").directive("headerNotification",["$rootScope","$timeout","$state","$location",function($rootScope,$timeout,$state,$location){return{templateUrl:"app/components/header/header-notification/header-notification.html",restrict:"E",replace:!0,link:function(scope,elem,attr){function setPath(){return $location.absUrl().replace("/edit","")}scope.pathname=setPath(),$rootScope.$on("$stateChangeSuccess",function(){scope.pathname=setPath()})}}}]),angular.module("CarreEntrySystem").service("Risk_factors",["$http","CARRE","CONFIG","QUERY",function($http,CARRE,CONFIG,QUERY){function getRisk_factors(ArrayOfIDs,raw){return CARRE.instances("risk_factor",ArrayOfIDs)}function saveRisk_factor(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.source.length>0&&(newObj.has_risk_factor_source={pre:"risk",value:newElem.source,type:"node"}),newElem.target.length>0&&(newObj.has_risk_factor_target={pre:"risk",value:newElem.target.toString(),type:"node"}),newElem.type.length>0&&(newObj.has_risk_factor_association_type={pre:"risk",value:newElem.type.toString(),type:"node"}),CARRE.invalidateCache("risk_factor_all"),CARRE.invalidateCache("risk_evidence_all"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"risk_factor","RF",user),CARRE.query(insertQuery,"no prefix"))}function getRisk_evidencesFromRisk_Factor(ArrayOfIDs){ArrayOfIDs=ArrayOfIDs?ArrayOfIDs instanceof Array?ArrayOfIDs:[ArrayOfIDs]:[];var listQuery="SELECT * FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { \n             ?subject a risk:risk_evidence; ?predicate ?object. \n             ?subject risk:has_risk_factor ?filter. \n             VALUES (?filter) { "+ArrayOfIDs.map(function(id){return"("+id.split("_")[0]+":"+id+")"}).join(" ")+" } \n              OPTIONAL {    \n               ?object a risk:citation. \n               ?object risk:has_citation_pubmed_identifier ?has_citation_pubmed_identifier  \n              } \n              OPTIONAL {    \n               ?object a risk:observable. \n               ?object risk:has_observable_name ?has_observable_name  \n               FILTER(lang(?has_observable_name)='"+CONFIG.LANG+"') \n              } \n              OPTIONAL {    \n               ?object a risk:risk_element. \n               ?object risk:has_risk_element_name ?has_risk_element_name  \n               FILTER(lang(?has_risk_element_name)='"+CONFIG.LANG+"') \n              } \n              OPTIONAL {    \n               ?object a risk:measurement_type. \n               ?object risk:has_measurement_type_name ?has_measurement_type_name  \n               FILTER(lang(?has_measurement_type_name)='"+CONFIG.LANG+"') \n              } \n              OPTIONAL {    \n               ?object a risk:risk_factor.  \n               ?object risk:has_risk_factor_association_type ?has_risk_factor_association_type. \n               ?object risk:has_risk_factor_source ?has_risk_factor_source. \n               ?object risk:has_risk_factor_target ?has_risk_factor_target. \n               ?has_risk_factor_source risk:has_risk_element_name ?has_source_risk_element_name.  \n               ?has_risk_factor_target risk:has_risk_element_name ?has_target_risk_element_name.  \n               FILTER(lang(?has_source_risk_element_name)='"+CONFIG.LANG+"') \n               FILTER(lang(?has_target_risk_element_name)='"+CONFIG.LANG+"') \n              } \n";return listQuery+=" }",CARRE.selectQuery(listQuery)}return this.exports={get:getRisk_factors,save:saveRisk_factor,risk_evidences:getRisk_evidencesFromRisk_Factor},this.exports}]),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.risk_factors",{"abstract":!0,templateUrl:"app/pages/risk_factors/main.html",url:"/risk_factors"}).state("main.risk_factors.list",{controller:"risk_factorsController",controllerAs:"risk_factors",templateUrl:"app/pages/risk_factors/list.html",url:""}).state("main.risk_factors.create",{templateUrl:"app/pages/risk_factors/single/single.html",controller:"risk_factorsSingleController",controllerAs:"risk_factor",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_factors.edit",{templateUrl:"app/pages/risk_factors/single/single.html",
controller:"risk_factorsSingleController",controllerAs:"risk_factor",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_factors.view",{controller:"risk_factorsSingleController",templateUrl:"app/pages/risk_factors/single/single.html",controllerAs:"risk_factor",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function risk_factorsController(toastr,VisibleFields,Risk_factors,currentUser,CONFIG,$stateParams,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content){var vm=this,visibleGridColumns=VisibleFields("risk_factor","list"),risk_factors=[];vm.gridLoading=Risk_factors.get().then(function(res){risk_factors=res.data,vm.mygrid.data=risk_factors,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_factors.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_factors.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}risk_factorsController.$inject=["toastr","VisibleFields","Risk_factors","currentUser","CONFIG","$stateParams","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content"],angular.module("CarreEntrySystem").controller("risk_factorsController",risk_factorsController)}(),angular.module("CarreEntrySystem").service("Risk_evidences",["$http","CARRE","CONFIG","QUERY",function($http,CARRE,CONFIG,QUERY){function getRisk_evidenceAdjusted_for(){var query="PREFIX risk: <http://carre.kmi.open.ac.uk/ontology/risk.owl#> \n              SELECT ?adjusted_for FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { ?subject a risk:risk_evidence; risk:is_adjusted_for ?adjusted_for}";return CARRE.query(query,"no prefix").then(function(res){var types=[];return res.data instanceof Array&&res.data.forEach(function(obj){var arr=obj.adjusted_for.value.split(",");arr.forEach(function(elem){elem=elem.trim().toLocaleLowerCase(),elem.length>0&&types.indexOf(elem)===-1&&types.push(elem)})}),types})}function getRisk_evidences(ArrayOfIDs){return CARRE.instances("risk_evidence",ArrayOfIDs)}function saveRisk_evidence(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.observables.length>0&&(newObj.has_risk_evidence_observable={pre:"risk",value:newElem.observables,type:"node"}),newElem.ratio_type.length>0&&(newObj.has_risk_evidence_ratio_type={pre:"risk",value:newElem.ratio_type.toString(),type:"node"}),newElem.ratio_value&&(newObj.has_risk_evidence_ratio_value={pre:"risk",value:newElem.ratio_value,type:"decimal"}),newElem.confidence_interval_min&&(newObj.has_confidence_interval_min={pre:"risk",value:newElem.confidence_interval_min,type:"decimal"}),newElem.confidence_interval_max&&(newObj.has_confidence_interval_max={pre:"risk",value:newElem.confidence_interval_max,type:"decimal"}),newElem.risk_factor.length>0&&(newObj.has_risk_factor={pre:"risk",value:newElem.risk_factor,type:"node"}),newElem.evidence_source.length>0&&(newObj.has_risk_evidence_source={pre:"risk",value:newElem.evidence_source.toString(),type:"node"}),newElem.adjusted_for.length>0&&(newObj.is_adjusted_for={pre:"risk",value:newElem.adjusted_for.join(","),type:"string"}),newElem.condition.length>0&&(newObj.has_observable_condition={pre:"risk",value:newElem.condition.toString(),type:"string"},newObj.has_observable_condition_json={pre:"risk",value:newElem.condition_json.toString(),type:"string"},newObj.has_observable_condition_text={pre:"risk",value:newElem.condition_text.toString(),type:"string"}),CARRE.invalidateCache("risk_factor_all"),CARRE.invalidateCache("risk_evidence_all"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"risk_evidence","RV",user),CARRE.query(insertQuery,"no prefix"))}return this.exports={get:getRisk_evidences,adjusted_for:getRisk_evidenceAdjusted_for,save:saveRisk_evidence},this.exports}]),function(){"use strict";function risk_evidencesController(toastr,currentUser,VisibleFields,Risk_evidences,CONFIG,$stateParams,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content){var vm=this,visibleGridColumns=VisibleFields("risk_evidence","list"),risk_evidences=[];vm.gridLoading=Risk_evidences.get().then(function(res){risk_evidences=res.data,vm.mygrid.data=risk_evidences,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_evidences.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_evidences.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}risk_evidencesController.$inject=["toastr","currentUser","VisibleFields","Risk_evidences","CONFIG","$stateParams","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content"],angular.module("CarreEntrySystem").controller("risk_evidencesController",risk_evidencesController)}(),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.risk_evidences",{"abstract":!0,templateUrl:"app/pages/risk_evidences/main.html",url:"/risk_evidences"}).state("main.risk_evidences.list",{controller:"risk_evidencesController",controllerAs:"risk_evidences",templateUrl:"app/pages/risk_evidences/list.html",url:""}).state("main.risk_evidences.createWithId",{templateUrl:"app/pages/risk_evidences/single/single.html",controller:"risk_evidencesSingleController",controllerAs:"risk_evidence",url:"/create/:pubmedId",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_evidences.create",{templateUrl:"app/pages/risk_evidences/single/single.html",controller:"risk_evidencesSingleController",controllerAs:"risk_evidence",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_evidences.edit",{templateUrl:"app/pages/risk_evidences/single/single.html",controller:"risk_evidencesSingleController",controllerAs:"risk_evidence",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_evidences.view",{controller:"risk_evidencesSingleController",templateUrl:"app/pages/risk_evidences/single/single.html",controllerAs:"risk_evidence",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),angular.module("CarreEntrySystem").service("Risk_elements",["$http","CARRE","CONFIG","QUERY","RdfFormatter",function($http,CARRE,CONFIG,QUERY,RdfFormatter){function getRisk_elements(ArrayOfIDs){return CARRE.instances("risk_element",ArrayOfIDs)}function saveRisk_element(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.name.length>0&&(newObj.has_risk_element_name={pre:"risk",value:newElem.name.toString(),type:"lang"}),newElem.identifier.length>0&&(newObj.has_risk_element_identifier={pre:"risk",value:"http://umls.nlm.nih.gov/sab/mth/cui/"+newElem.identifier.toString(),type:"node"}),newElem.type.length>0&&(newObj.has_risk_element_type={pre:"risk",value:newElem.type.toString(),type:"node"}),newElem.modifiable_status&&(newObj.has_risk_element_modifiable_status={pre:"risk",value:newElem.modifiable_status.toString(),type:"string"}),newElem.observables.length>0&&(newObj.has_risk_element_observable={pre:"risk",value:newElem.observables,type:"node"}),newElem.risk_elements.length>0&&(newObj.includes_risk_element={pre:"risk",value:newElem.risk_elements,type:"node"}),CARRE.invalidateCache("risk"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"risk_element","RL",user),CARRE.query(insertQuery,"no prefix"))}function RiskElementAssociations(id){var FilterString="",cache_key="",filters=[];id?(id instanceof Array||(id=[id]),id.forEach(function(sid,index){var prefix="";sid.indexOf("http")===-1?(cache_key=cache_key+"_"+sid,prefix=sid.split("_")[0],sid=prefix+":"+sid):(cache_key=cache_key+"_"+sid.substring(sid.lastIndexOf("/")+1),sid="<"+sid+">"),sid.indexOf("RL")>=0?filters.push("?has_risk_factor_source="+sid+"||?has_risk_factor_target="+sid):sid.indexOf("RF")>=0&&filters.push("?subject="+sid)}),FilterString="FILTER ("+filters.join("||")+")",cache_key="risk_associations_for"+cache_key):cache_key="risk_associations_for_all";var query="SELECT * FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" \n            WHERE { \n            ?subject a risk:risk_factor; ?predicate ?object. \n             ?subject risk:has_risk_factor_association_type ?has_risk_factor_association_type. \n             ?subject risk:has_risk_factor_source ?has_risk_factor_source. \n             ?subject risk:has_risk_factor_target ?has_risk_factor_target. \n            OPTIONAL {    \n             ?object a risk:risk_element. \n             ?object risk:has_risk_element_name ?has_risk_element_name  \n               FILTER(lang(?has_risk_element_name)='"+CONFIG.LANG+"') \n            } "+FilterString+" }";return CARRE.selectQuery(query,null,CONFIG.USECACHE?cache_key:null).then(function(res){var graphData={nodes:[],edges:[]},tmp_nodes=[];return res.data.forEach(function(rf){var source={label:rf.has_risk_factor_source_label,id:rf.has_risk_factor_source[0],value:1},target={label:rf.has_risk_factor_target_label,id:rf.has_risk_factor_target[0],value:1},relation={label:rf.has_risk_factor_association_type_label,id:rf.id},source_index=tmp_nodes.indexOf(source.id);source_index===-1?(tmp_nodes.push(source.id),graphData.nodes.push(source)):graphData.nodes[source_index].value++;var target_index=tmp_nodes.indexOf(target.id);target_index===-1?(tmp_nodes.push(target.id),graphData.nodes.push(target)):graphData.nodes[target_index].value++,graphData.edges.push({id:relation.id,from:source.id,label:relation.label,to:target.id})}),graphData})}return this.exports={get:getRisk_elements,save:saveRisk_element,associations:RiskElementAssociations},this.exports}]),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.risk_elements",{"abstract":!0,templateUrl:"app/pages/risk_elements/main.html",controller:"risk_elementsController",controllerAs:"risk_elements",url:"/risk_elements"}).state("main.risk_elements.list",{templateUrl:"app/pages/risk_elements/list.html",controller:"risk_elementsController",controllerAs:"risk_elements",url:""}).state("main.risk_elements.create",{templateUrl:"app/pages/risk_elements/single/single.html",controller:"risk_elementsSingleController",controllerAs:"risk_element",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.risk_elements.view",{templateUrl:"app/pages/risk_elements/single/single.html",controller:"risk_elementsSingleController",controllerAs:"risk_element",url:"/:id"}).state("main.risk_elements.edit",{templateUrl:"app/pages/risk_elements/single/single.html",controller:"risk_elementsSingleController",controllerAs:"risk_element",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function risk_elementsController(toastr,currentUser,Risk_elements,$stateParams,CONFIG,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content,VisibleFields){var vm=this,visibleGridColumns=VisibleFields("risk_element","list"),risk_elements=[];vm.gridLoading=Risk_elements.get().then(function(res){risk_elements=res.data,vm.mygrid.data=risk_elements,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_elements.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.risk_elements.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}risk_elementsController.$inject=["toastr","currentUser","Risk_elements","$stateParams","CONFIG","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content","VisibleFields"],angular.module("CarreEntrySystem").controller("risk_elementsController",risk_elementsController)}(),angular.module("CarreEntrySystem").service("Observables",["$http","CARRE","CONFIG","QUERY",function($http,CARRE,CONFIG,QUERY){function getObservables(ArrayOfIDs){return CARRE.instances("observable",ArrayOfIDs)}function saveObservable(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.name.length>0&&(newObj.has_observable_name={pre:"risk",value:newElem.name.toString(),type:"lang"}),newElem.type.length>0&&(newObj.has_observable_type={pre:"risk",value:newElem.type.toString(),type:"node"}),newElem.measurement_type.length>0&&(newObj.has_observable_measurement_type={pre:"risk",value:newElem.measurement_type.toString(),type:"node"}),newElem.identifier.length>0&&(newObj.has_external_type={pre:"risk",value:newElem.identifier.toString(),type:"node"}),newElem.predicate.length>0&&(newObj.has_external_predicate={pre:"risk",value:newElem.predicate.toString(),type:"node"}),CARRE.invalidateCache("observable_all"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"observable","OB",user),CARRE.query(insertQuery,"no prefix"))}return this.exports={get:getObservables,save:saveObservable},this.exports}]),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.observables",{"abstract":!0,templateUrl:"app/pages/observables/main.html",url:"/observables"}).state("main.observables.list",{controller:"observablesController",controllerAs:"observables",templateUrl:"app/pages/observables/list.html",url:""}).state("main.observables.create",{templateUrl:"app/pages/observables/single/single.html",controller:"observablesSingleController",controllerAs:"observable",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.observables.edit",{templateUrl:"app/pages/observables/single/single.html",controller:"observablesSingleController",controllerAs:"observable",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.observables.view",{controller:"observablesSingleController",templateUrl:"app/pages/observables/single/single.html",controllerAs:"observable",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function observablesController(toastr,currentUser,Observables,CONFIG,$stateParams,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content,VisibleFields){var vm=this,visibleGridColumns=VisibleFields("observable","list"),observables=[];vm.gridLoading=Observables.get().then(function(res){observables=res.data,vm.mygrid.data=observables,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.observables.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.observables.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}observablesController.$inject=["toastr","currentUser","Observables","CONFIG","$stateParams","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content","VisibleFields"],angular.module("CarreEntrySystem").controller("observablesController",observablesController)}(),function(){"use strict";angular.module("CarreEntrySystem").service("Medical_experts",["$http","CARRE","CONFIG","$q",function($http,CARRE,CONFIG,$q){function getMedical_experts(ArrayOfIDs){return ArrayOfIDs?CARRE.instances("medical_expert",ArrayOfIDs):CONFIG.medical_experts.cache?$q(function(resolve,reject){resolve(CONFIG.medical_experts.cache),reject()}):CARRE.instances("medical_expert",ArrayOfIDs).then(function(res){return CONFIG.medical_experts.cache=res,res})}function countAllInstancesFor(medicalExpert){var query="SELECT ?type (COUNT(?item_authored) AS ?authored) (COUNT(?item_reviewed) AS ?reviewed) \n    FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { \n    {?item_authored risk:has_author ?user; a ?type } UNION {?item_reviewed risk:has_reviewer ?user; a ?type} \n    ";return query+=medicalExpert?"FILTER ( ?user=<"+medicalExpert+">) }":"}",CARRE.query(query)}function saveMedicalExpertProfile(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.name.length>0&&(newObj.has_risk_element_name={pre:"risk",value:newElem.name.toString(),type:"string"}),newElem.identifier.length>0&&(newObj.has_risk_element_identifier={pre:"risk",value:"http://umls.nlm.nih.gov/sab/mth/cui/"+newElem.identifier.toString(),type:"node"}),newElem.type.length>0&&(newObj.has_risk_element_type={pre:"risk",value:newElem.type.toString(),type:"node"}),newElem.modifiable_status.length>0&&(newObj.has_risk_element_modifiable_status={pre:"risk",value:newElem.modifiable_status.toString(),type:"string"}),newElem.observables.length>0&&(newObj.has_risk_element_observable={pre:"risk",value:newElem.observables,type:"node"}),newElem.risk_elements.length>0&&(newObj.includes_risk_element={pre:"risk",value:newElem.risk_elements,type:"node"}),CARRE.invalidateCache("risk"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"risk_element","RL",user),CARRE.query(insertQuery,"no prefix"))}return this.exports={get:getMedical_experts,countFor:countAllInstancesFor,saveProfile:saveMedicalExpertProfile},CONFIG.medical_experts=CONFIG.medical_experts||{},this.exports}])}(),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.medical_experts",{"abstract":!0,templateUrl:"app/pages/medical_experts/main.html",url:"/medical_experts"}).state("main.medical_experts.list",{controller:"medical_expertsController",controllerAs:"medical_experts",templateUrl:"app/pages/medical_experts/list.html",url:""}).state("main.medical_experts.view",{controller:"medical_expertsSingleController",templateUrl:"app/pages/medical_experts/single/view.html",controllerAs:"medical_expert",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function medical_expertsController(Bioportal,toastr,Medical_experts,CONFIG,$stateParams,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content){var vm=this;vm.gridLoading=Medical_experts.get().then(function(res){vm.users=res.data,vm.res=res})}medical_expertsController.$inject=["Bioportal","toastr","Medical_experts","CONFIG","$stateParams","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content"],angular.module("CarreEntrySystem").controller("medical_expertsController",medical_expertsController)}(),angular.module("CarreEntrySystem").service("Measurement_types",["$http","CARRE","CONFIG","QUERY",function($http,CARRE,CONFIG,QUERY){function getMeasurement_types(ArrayOfIDs){return CARRE.instances("measurement_type",ArrayOfIDs)}function saveMeasurement_type(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var updateQuery="",insertQuery="",newObj={};return newElem.name.length>0&&(newObj.has_measurement_type_name={pre:"risk",value:newElem.name.toString(),type:"lang"}),newElem.unit.length>0&&(newObj.has_label={pre:"risk",value:newElem.unit.toString(),type:"string"}),newElem.datatype.length>0&&(newObj.has_datatype={pre:"risk",value:newElem.datatype.toString(),type:"string"}),newElem.has_enumeration_values.length>0&&(newObj.has_enumeration_values={pre:"risk",value:newElem.has_enumeration_values.toString(),type:"string"}),newElem.identifier.length>0&&(newObj.has_external_unit={pre:"risk",value:newElem.identifier.toString(),type:"node"}),CARRE.invalidateCache("measurement_type_all"),CARRE.invalidateCache("count_all"),oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"measurement_type","ME",user),CARRE.query(insertQuery,"no prefix"))}return this.exports={get:getMeasurement_types,save:saveMeasurement_type},this.exports}]),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.measurement_types",{"abstract":!0,templateUrl:"app/pages/measurement_types/main.html",url:"/measurement_types"}).state("main.measurement_types.list",{controller:"measurement_typesController",controllerAs:"measurement_types",templateUrl:"app/pages/measurement_types/list.html",url:""}).state("main.measurement_types.create",{templateUrl:"app/pages/measurement_types/single/single.html",controller:"measurement_typesSingleController",controllerAs:"measurement_type",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.measurement_types.edit",{templateUrl:"app/pages/measurement_types/single/single.html",controller:"measurement_typesSingleController",controllerAs:"measurement_type",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.measurement_types.view",{controller:"measurement_typesSingleController",templateUrl:"app/pages/measurement_types/single/single.html",controllerAs:"measurement_type",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function measurement_typesController(toastr,currentUser,Measurement_types,CONFIG,$stateParams,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content,VisibleFields){var vm=this,visibleGridColumns=VisibleFields("measurement_type","list"),measurement_types=[];vm.gridLoading=Measurement_types.get().then(function(res){measurement_types=res.data,vm.mygrid.data=measurement_types,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.measurement_types.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button></div>',width:60}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.measurement_types.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button></div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}measurement_typesController.$inject=["toastr","currentUser","Measurement_types","CONFIG","$stateParams","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content","VisibleFields"],angular.module("CarreEntrySystem").controller("measurement_typesController",measurement_typesController)}(),angular.module("CarreEntrySystem").service("GRAPH",["CONFIG","CARRE","RdfFormatter",function(CONFIG,CARRE,RdfFormatter){function FindIndex(arr,val,prop,propVal){prop=prop||"id",propVal&&(val=val[propVal]);for(var i=0;i<arr.length;i++)if(val===arr[i][prop])return i;return-1}function ratioMinMax(evidences){if(!evidences||0===evidences.length)return"";var arr=evidences.map(function(rv){return isNaN(rv.rv_ratio_value)?1:parseFloat(rv.rv_ratio_value)}).sort();return": "+(1===arr.length?arr[0]:arr[0]+"..."+arr[arr.length-1])}function ratioType(val){return val.substring(val.lastIndexOf("risk_evidence_ratio_type_")+25).replace("_"," ")}function getNetworkData(idFilter,edgeType){edgeType=edgeType||"risk_evidence";var FilterString="",cache_key="",filters=[];idFilter?(idFilter instanceof Array||(idFilter=[idFilter]),idFilter.forEach(function(sid,index){var prefix="";sid.indexOf("http")===-1?(cache_key=cache_key+"_"+sid,prefix=sid.split("_")[0],sid=prefix+":"+sid):(cache_key=cache_key+"_"+sid.substring(sid.lastIndexOf("/")+1),sid="<"+sid+">"),sid.indexOf("RL")>=0?filters.push("?has_risk_factor_source="+sid+"||?has_risk_factor_target="+sid):sid.indexOf("RF")>=0?filters.push("?risk_factor="+sid):sid.indexOf("RV")>=0?filters.push("?has_risk_evidence="+sid):sid.indexOf("OB")>=0&&filters.push("?has_risk_evidence_observable="+sid)}),FilterString="FILTER ("+filters.join("||")+")",cache_key="risk_associations_for"+cache_key):cache_key="risk_associations_for_all";var query="SELECT * FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" \n            WHERE { \n            ?risk_factor a risk:risk_factor. \n            ?risk_factor risk:has_risk_factor_association_type ?has_risk_factor_association_type. \n            ?risk_factor risk:has_risk_factor_source ?has_risk_factor_source. \n            ?risk_factor risk:has_risk_factor_target ?has_risk_factor_target. \n            ?has_risk_factor_source risk:has_risk_element_name ?has_risk_source_element_name. \n            ?has_risk_factor_target risk:has_risk_element_name ?has_risk_target_element_name. \n            ?has_risk_evidence a risk:risk_evidence; \n            risk:has_risk_factor ?risk_factor; \n            risk:has_risk_evidence_ratio_value ?has_risk_evidence_ratio_value; \n            risk:has_risk_evidence_ratio_type ?has_risk_evidence_ratio_type; \n            risk:has_observable_condition_text ?has_observable_condition_text; \n            risk:has_risk_evidence_observable ?has_risk_evidence_observable. \n            ?has_risk_evidence_observable risk:has_observable_name ?has_risk_evidence_observable_name. \n            # language filters \n            FILTER(lang(?has_risk_source_element_name)='"+CONFIG.LANG+"') \n            FILTER(lang(?has_risk_target_element_name)='"+CONFIG.LANG+"') \n            FILTER(lang(?has_risk_evidence_observable_name)='"+CONFIG.LANG+"') \n            "+FilterString+" }";return CARRE.selectQuery(query,"raw",CONFIG.USECACHE?cache_key:null).then(function(res){var formattedData=res.data.reduce(function(init,cur){var val=init.valueProp,rf_index=cur.risk_factor[val].substring(cur.risk_factor[val].lastIndexOf("/")+1),rf={rf_id:cur.risk_factor[val],rf_type:cur.has_risk_factor_association_type[val],rf_source_id:cur.has_risk_factor_source[val],rf_source_label:cur.has_risk_source_element_name[val],rf_target_id:cur.has_risk_factor_target[val],rf_target_label:cur.has_risk_target_element_name[val],rf_evidences:[]},rv_index=rf_index+"_"+cur.has_risk_evidence[val].substring(cur.has_risk_evidence[val].lastIndexOf("/")+1),rv={rv_id:cur.has_risk_evidence[val],rv_observable_condition:cur.has_observable_condition_text[val],rv_ratio_value:cur.has_risk_evidence_ratio_value[val],rv_ratio_type:cur.has_risk_evidence_ratio_type[val],rv_observables:[]},ob={ob_id:cur.has_risk_evidence_observable[val],ob_label:cur.has_risk_evidence_observable_name[val]},rf_pos=init.index[rf_index],rv_pos=init.index[rv_index];return rf_pos||0===rf_pos?rv_pos||0===rv_pos?init.data[rf_pos].rf_evidences[rv_pos].rv_observables.push(ob):(rv.rv_observables.push(ob),init.data[rf_pos].rf_evidences.push(rv),init.index[rv_index]=init.data[rf_pos].rf_evidences.indexOf(rv)):(rv.rv_observables.push(ob),rf.rf_evidences.push(rv),init.data.push(rf),init.index[rv_index]=0,init.index[rf_index]=init.data.indexOf(rf)),init},{data:[],index:{},valueProp:"value"}),graphData={nodes:[],edges:[]},tmp_nodes=[];return formattedData.data.forEach(function(rf){var source={label:rf.rf_source_label,id:rf.rf_source_id,connections:0},target={label:rf.rf_target_label,id:rf.rf_target_id,connections:0},relation={label:RdfFormatter.translate(rf.rf_type),id:rf.rf_id,evidences:rf.rf_evidences},source_index=tmp_nodes.indexOf(source.id);source_index===-1?(tmp_nodes.push(source.id),graphData.nodes.push(source)):graphData.nodes[source_index].connections++;var target_index=tmp_nodes.indexOf(target.id);target_index===-1?(tmp_nodes.push(target.id),graphData.nodes.push(target)):graphData.nodes[target_index].connections++,"risk_factor"===edgeType?graphData.edges.push({id:relation.id,source:source.id,target:target.id,from:source.id,label:relation.label,to:target.id,evidences:relation.evidences}):relation.evidences.forEach(function(rv){var ratio=isNaN(rv.rv_ratio_value)?1:parseFloat(rv.rv_ratio_value);graphData.edges.push({risk_factor:relation.id,id:rv.rv_id,source:source.id,target:target.id,from:source.id,label:relation.label,to:target.id,ratio:ratio,ratio_type:rv.rv_ratio_type,observables:rv.rv_observables})})}),graphData})}return this.exports={network:getNetworkData,FindIndex:FindIndex,ratioMinMax:ratioMinMax,ratioType:ratioType},this.exports}]),function(){"use strict";function routerConfig($stateProvider){
$stateProvider.state("main.explore",{controller:"ExploreController",controllerAs:"explore",url:"/explore",templateUrl:"app/pages/explore/index.html"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function ExploreController($rootScope,$timeout,toastr,CARRE,$location,CONFIG,$scope,Email,Risk_elements,$state,$http,GRAPH,Risk_factors){function addItem(item){vm.risk_elements_selected.push(item),$timeout(function(){$scope.refreshColors()},50)}var vm=this;vm.minConnections=0,vm.ready=!0,vm.risk_elements_selected=[],vm.graph_type=$location.search().graphtype||"sankey",vm.setNewId=function(){vm.ready=!1,$timeout(function(){vm.id=vm.risk_elements_selected,vm.ready=!0},100)},vm.examples=[{label:"Connections between diabetes,hypertension and colorectal cancer",data:["http://carre.kmi.open.ac.uk/risk_elements/RL_29","http://carre.kmi.open.ac.uk/risk_elements/RL_19","http://carre.kmi.open.ac.uk/risk_elements/RL_14"]},{label:"How do obesity, diabetes and depression relate with each other?",data:["http://carre.kmi.open.ac.uk/risk_elements/RL_38","http://carre.kmi.open.ac.uk/risk_elements/RL_19","http://carre.kmi.open.ac.uk/risk_elements/RL_18"]},{label:"a complex one",data:["http://carre.kmi.open.ac.uk/risk_elements/RL_19","http://carre.kmi.open.ac.uk/risk_elements/RL_33","http://carre.kmi.open.ac.uk/risk_elements/RL_36","http://carre.kmi.open.ac.uk/risk_elements/RL_38","http://carre.kmi.open.ac.uk/risk_elements/RL_25"]},{label:"too complex to read",data:["http://carre.kmi.open.ac.uk/risk_elements/RL_19","http://carre.kmi.open.ac.uk/risk_elements/RL_33","http://carre.kmi.open.ac.uk/risk_elements/RL_36","http://carre.kmi.open.ac.uk/risk_elements/RL_38","http://carre.kmi.open.ac.uk/risk_elements/RL_25","http://carre.kmi.open.ac.uk/risk_elements/RL_7","http://carre.kmi.open.ac.uk/risk_elements/RL_10","http://carre.kmi.open.ac.uk/risk_elements/RL_11","http://carre.kmi.open.ac.uk/risk_elements/RL_18","http://carre.kmi.open.ac.uk/risk_elements/RL_22","http://carre.kmi.open.ac.uk/risk_elements/RL_9","http://carre.kmi.open.ac.uk/risk_elements/RL_29","http://carre.kmi.open.ac.uk/risk_elements/RL_16","http://carre.kmi.open.ac.uk/risk_elements/RL_31","http://carre.kmi.open.ac.uk/risk_elements/RL_40"]}],vm.recommendPopoverUrl="recommendExampleTemplate.html",vm.recommendExample=function(label,items){var data={label:label,data:vm.risk_elements_selected};Email.example(data)},$scope.refreshColors=function(){var elems=angular.element(".ui-select-match-item");angular.forEach(elems,function(el,index){angular.element(el).css("background",CONFIG.COLORS[index])})},$scope.runExample=function(exampleItems){var timeInterval=500;vm.risk_elements_selected=[],exampleItems.forEach(function(url,index,arr){$timeout(function(){addItem(url)},index*timeInterval)}),$timeout(function(){vm.setNewId()},exampleItems.length*timeInterval)},Risk_elements.get().then(function(res){vm.risk_elements=res.data.map(function(rl){var obj={value:rl.id,label:rl.has_risk_element_name_label};return obj})}),$location.search().elements&&$location.search().elementstype&&(vm.risk_elements_selected=$location.search().elements.split(",").map(function(elem){return"http://carre.kmi.open.ac.uk/"+$location.search().elementstype+"/"+elem}),vm.setNewId())}ExploreController.$inject=["$rootScope","$timeout","toastr","CARRE","$location","CONFIG","$scope","Email","Risk_elements","$state","$http","GRAPH","Risk_factors"],angular.module("CarreEntrySystem").controller("ExploreController",ExploreController)}(),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.dashboard",{controller:"DashboardController",controllerAs:"dashboard",url:"/",templateUrl:"app/pages/dashboard/index.html"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function DashboardController($rootScope,$timeout,toastr,CARRE,$location,CONFIG,$scope,Email){var vm=this;vm.countAllInit=0,vm.countAll=0,vm.colors=CONFIG.COLORS,vm.counterchart_labels=["Risk Factors","Risk Evidences","Risk Elements","Observables","Citations"],vm.counterchart_data=[],vm.counterchart_data[0]=[0,0,0,0,0],$scope.$on("create",function(event,chart){chart&&chart.datasets&&chart.datasets[0]&&chart.datasets[0].bars.length>0?chart.datasets[0].bars.map(function(obj,index){return obj.fillColor=vm.colors[index],obj.strokeColor="#FFF",obj}):(Email.bug({title:"chart datasets not exist",data:chart.datasets[0]}),$timeout(function(){chart.datasets[0].bars.map(function(obj,index){return obj.fillColor=vm.colors[index],obj.strokeColor="#FFF",obj})},200))}),CARRE.countAll().then(function(res){var r=res.data[0];vm.citations={total:Number(r.citations.value)},vm.measurement_types={total:Number(r.measurement_types.value)},vm.observables={total:Number(r.observables.value),noreviews:Number(r.observables_unreviewed.value)},vm.risk_elements={total:Number(r.risk_elements.value),noreviews:Number(r.risk_elements_unreviewed.value)},vm.risk_evidences={total:Number(r.risk_evidences.value),noreviews:Number(r.risk_evidences_unreviewed.value)},vm.risk_factors={total:Number(r.risk_factors.value),noreviews:Number(r.risk_factors_unreviewed.value)},vm.counterchart_data[0][0]=vm.risk_factors.total,vm.counterchart_data[0][1]=vm.risk_evidences.total,vm.counterchart_data[0][2]=vm.risk_elements.total,vm.counterchart_data[0][3]=vm.observables.total,vm.counterchart_data[0][4]=vm.citations.total,vm.countAll=vm.citations.total+vm.risk_elements.total+vm.risk_factors.total+vm.risk_evidences.total+vm.observables.total+vm.measurement_types.total,vm.counterdonut_data=[vm.risk_factors.total,vm.risk_evidences.total,vm.risk_elements.total,vm.observables.total,vm.citations.total],vm.counterdonut_labels=vm.counterchart_labels,vm.counterdonut_options={}})}DashboardController.$inject=["$rootScope","$timeout","toastr","CARRE","$location","CONFIG","$scope","Email"],angular.module("CarreEntrySystem").controller("DashboardController",DashboardController)}(),angular.module("CarreEntrySystem").service("Citations",["$http","CARRE","CONFIG","QUERY",function($http,CARRE,CONFIG,QUERY){function getCitations(ArrayOfIDs){return CARRE.instances("citation",ArrayOfIDs)}function getCitationTypes(){var query="PREFIX risk: <http://carre.kmi.open.ac.uk/ontology/risk.owl#> \n              SELECT ?citationType FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { ?subject a risk:citation; risk:has_citation_source_type ?citationType}";return CARRE.query(query,"no prefix").then(function(res){var types=[];return res.data instanceof Array&&res.data.forEach(function(obj){var type=obj.citationType.value;type.length>0&&types.indexOf(type)===-1&&types.push(type)}),types})}function saveCitation(oldElem,newElem,user){user=user||CONFIG.currentUser.graphName;var newObj=mapper(newElem);CARRE.invalidateCache("citation_all"),CARRE.invalidateCache("count_all");var updateQuery="",insertQuery="";return oldElem.id?(updateQuery=QUERY.update(oldElem,newObj),CARRE.query(updateQuery,"no prefix")):(insertQuery=QUERY.insert(newObj,"citation","CI",user),CARRE.query(insertQuery,"no prefix"))}function mapper(obj){return{has_citation_source_type:{pre:"risk",value:obj.type.toString(),type:"string"},has_citation_source_level:{pre:"risk",value:obj.level.toString(),type:"integer"},has_citation_summary:{pre:"risk",value:obj.summary.toString(),type:"string"},has_citation_pubmed_identifier:{pre:"risk",value:obj.pubmedId.toString(),type:"string"}}}return this.exports={types:getCitationTypes,get:getCitations,save:saveCitation},this.exports}]),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main.citations",{"abstract":!0,templateUrl:"app/pages/citations/main.html",url:"/citations"}).state("main.citations.list",{controller:"citationsController",controllerAs:"citations",templateUrl:"app/pages/citations/list.html",url:""}).state("main.citations.createWithId",{templateUrl:"app/pages/citations/single/single.html",controller:"citationsSingleController",controllerAs:"citation",url:"/create/:pubmedId",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.citations.create",{templateUrl:"app/pages/citations/single/single.html",controller:"citationsSingleController",controllerAs:"citation",url:"/create",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.citations.edit",{templateUrl:"app/pages/citations/single/single.html",controller:"citationsSingleController",controllerAs:"citation",url:"/:id/edit",data:{permissions:{only:["authenticated_user"],redirectTo:function(rejectedPromise){window.location.replace(window.location.href.replace("/edit","").replace("/create",""))}}}}).state("main.citations.view",{controller:"citationsSingleController",templateUrl:"app/pages/citations/single/single.html",controllerAs:"citation",url:"/:id"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";function citationsController(toastr,Citations,currentUser,$stateParams,CONFIG,uiGridGroupingConstants,$timeout,Pubmed,uiGridConstants,$state,content,VisibleFields){var vm=this,visibleGridColumns=VisibleFields("citation","list"),citations=[];vm.gridLoading=Citations.get().then(function(res){citations=res.data,vm.mygrid.data=citations,vm.res=res,vm.mygrid.columnDefs=[],vm.mygrid.columnDefs.push({field:"View",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.citations.view({id:row.entity.id_label})"><i class="fa fa-eye"></i></button> </div>',width:70}),currentUser.username&&vm.mygrid.columnDefs.push({field:"Edit",enableFiltering:!1,enableColumnMenu:!1,cellTemplate:'<div class="ui-grid-cell-contents"><button type="button" class="btn btn-xs btn-primary" ui-sref="main.citations.edit({id:row.entity.id_label})"><i class="fa fa-edit"></i></button> </div>',width:60}),content.fields(res.fields,visibleGridColumns).forEach(function(obj){vm.mygrid.columnDefs.push(obj)}),vm.mygrid.columnDefs.push({field:"id_label",displayName:"ID",visible:!1})}),vm.mygrid=content["default"]}citationsController.$inject=["toastr","Citations","currentUser","$stateParams","CONFIG","uiGridGroupingConstants","$timeout","Pubmed","uiGridConstants","$state","content","VisibleFields"],angular.module("CarreEntrySystem").controller("citationsController",citationsController)}(),angular.module("CarreEntrySystem").directive("carreViewPubmed",["CONFIG",function(CONFIG){return{templateUrl:"app/components/view-pubmed/view-pubmed.html",restrict:"E",replace:!0,scope:{id:"@"},controller:["$scope","Pubmed",function($scope,Pubmed){$scope.loading=Pubmed.fetch($scope.id).then(function(res){$scope.pubmedArticle=res.data})}]}}]),angular.module("CarreEntrySystem").directive("stats",function(){return{templateUrl:"app/components/stats/stats.html",restrict:"E",replace:!0,scope:{model:"=",comments:"@",number:"@",name:"@",title:"@",color:"@",details:"@",type:"@","goto":"@"}}}),angular.module("CarreEntrySystem").directive("sidebar",sidebarDirective),angular.module("CarreEntrySystem").directive("carreLinker",["CONFIG",function(CONFIG){return{templateUrl:"app/components/linker/linker.html",restrict:"E",replace:!0,scope:{property:"@",model:"="},controller:["$scope","CONFIG","Medical_experts",function($scope,CONFIG,Medical_experts){$scope.show="label",$scope.items=[];var label_arr=[],avoidExpressions=["has_observable_condition"],arr=$scope.model[$scope.property];$scope.label=$scope.model[$scope.property+"_label"],"has_author"===$scope.property||"has_reviewer"===$scope.property?Medical_experts.get().then(function(res){var USERS={};res.data.forEach(function(user){USERS[user.has_graph_uri_label]=user}),label_arr=$scope.model[$scope.property+"_label_arr"],$scope.show="links",label_arr.forEach(function(username){var user=USERS[username];$scope.items.push({link:("PROD"===CONFIG.ENV?"":"#/")+"medical_experts/"+user.id_label,label:user.has_firstname_label+" "+user.has_lastname_label})})}):"has_observable_condition"===$scope.property?($scope.show="condition",$scope.model.has_risk_evidence_observable.forEach(function(obj,index){var id=obj.substr(obj.lastIndexOf("/")+1),link=("PROD"===CONFIG.ENV?"":"#/")+"observables/"+id,label=$scope.model.has_risk_evidence_observable_label_arr[index],atag="<a href="+link+">"+label+"</a>";$scope.label=$scope.label.replace(new RegExp(id,"g"),atag).replace(new RegExp(">=","g"),"&ge;").replace(new RegExp("<=","g"),"&le;")})):"has_external_type"===$scope.property||"has_external_unit"===$scope.property||"has_external_predicate"===$scope.property?($scope.show="external_link",$scope.external_link="<a target='_blank' href='"+$scope.model[$scope.property]+"'>"+$scope.model[$scope.property+"_label"]+"</a>"):arr instanceof Array&&avoidExpressions.indexOf($scope.property)===-1&&(label_arr=$scope.model[$scope.property+"_label_arr"],arr.forEach(function(str,index){var id=str.substr(str.lastIndexOf("/")+1),cat=id.substr(0,2),type=!1;switch(cat){case"CI":type="citations/";break;case"OB":type="observables/";break;case"ME":type="measurement_types/";break;case"RF":type="risk_factors/";break;case"RL":type="risk_elements/";break;case"RV":type="risk_evidences/"}type&&($scope.show="links",$scope.items.push({link:("PROD"===CONFIG.ENV?"":"#/")+type+id,label:label_arr[index]}))}))}]}}]),angular.module("CarreEntrySystem").directive("leEditor",["$compile","$timeout","$q",function($compile,$timeout,$q){return{restrict:"E",scope:{group:"=",observables:"=",metypes:"="},templateUrl:"app/components/le_editor/le_editor.html",compile:function(element,attrs){var content,directive;return content=element.contents().remove(),function(scope,element,attrs){scope.operators=[{name:"AND"},{name:"OR"}],scope.field={},scope.conditions=[{name:"=",value:"=",types:"integer,float,enum,boolean"},{name:"<",value:"<",types:"integer,float"},{name:"≤",value:"<=",types:"integer,float"},{name:">",value:">",types:"integer,float"},{name:"≥",value:">=",types:"integer,float"}],scope.getMeasurementType=function(item,model,rule){rule.hiddenData=!0,$timeout(function(){var me_id="";if(item)me_id=item.metype_id,me_id=me_id.substring(me_id.indexOf("ME_"));else{for(var i=0;i<scope.observables.length;i++)if(scope.observables[i].value===model){me_id=scope.observables[i].metype_id;break}me_id=me_id.substring(me_id.indexOf("ME_"))}for(var i=0;i<scope.metypes.length;i++)if(scope.metypes[i].id_label===me_id){rule.datatype=scope.metypes[i].has_datatype_label,rule.unit=scope.metypes[i].has_label_label,rule.unit_label=scope.metypes[i].has_measurement_type_name_label,scope.metypes[i].has_enumeration_values_label&&(rule.dataoptions=scope.metypes[i].has_enumeration_values_label.split(";").map(function(obj){return{value:obj,name:obj}}));break}$timeout(function(){rule.hiddenData=!rule.hiddenData},400)},500)},scope.addCondition=function(){scope.group.rules.push({condition:"=",field:{selected:{label:""}},data:""})},scope.removeCondition=function(index){scope.group.rules.splice(index,1)},scope.addGroup=function(){scope.group.rules.push({group:{operator:"AND",rules:[]}})},scope.removeGroup=function(){"group"in scope.$parent&&scope.$parent.group.rules.splice(scope.$parent.$index,1)},directive||(directive=$compile(content)),element.append(directive(scope,function($compile){return $compile}))}}}}]),angular.module("CarreEntrySystem").directive("carreHeader",function(){return{templateUrl:"app/components/header/header.html",restrict:"E",replace:!0,controllerAs:"header",controller:["$scope","$rootScope","$window",function($scope,$rootScope,$window){$scope.toggleNavbar=function(){$("div.navbar-collapse").hasClass("collapse")?$("div.navbar-collapse").removeClass("collapse"):$("div.navbar-collapse").addClass("collapse")},$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){fromState!==toState&&$("div.navbar-collapse").addClass("collapse")})}]}}),angular.module("CarreEntrySystem").directive("carreGraphSankeyRisk",function(){return{templateUrl:"app/components/graph-sankey/template.html",restrict:"E",scope:{limitNewConnections:"@",height:"@",riskid:"="},controller:["$scope","$timeout","toastr","CARRE","$location","CONFIG","GRAPH","content","$q",function($scope,$timeout,toastr,CARRE,$location,CONFIG,GRAPH,content,$q){function ratioFilterFn(a){return!vm.showRiskEvidences||a.ratio>=vm.ratioFilter.min&&a.ratio<=vm.ratioFilter.max}function clickNode(obj,i){clearSelection(),d3.select(this).select("rect").classed("selected",!d3.select(this).classed("selected")),selectElement(obj,"node"),d3.event.stopPropagation()}function clickLink(obj,i){clearSelection(),d3.select(this).classed("selected",!d3.select(this).classed("selected")),selectElement(obj,"link"),d3.event.stopPropagation()}function clearSelection(){$timeout(function(){vm.selectedId=null},0),d3.select("#"+vm.containerId+" svg").selectAll(".link").classed("selected",!1),d3.select("#"+vm.containerId+" svg").selectAll(".node").select("rect").classed("selected",!1)}function selectElement(obj,type){var id=obj?obj.id:null;id&&(id.indexOf("/")!==-1&&(id=id.substr(id.lastIndexOf("/")+1)),$timeout(function(){vm.selectedId=id,vm.selectedItem={type:type,obj:obj}},0),vm.showDetails&&vm.alwaysOnDetails&&($timeout(function(){vm.showDetails=!1},0),$timeout(function(){vm.showDetails=!0},100)))}function idLabel(id){return id.substr(id.lastIndexOf("/")+1)}function chartCss(attr){var elem=document.getElementById(vm.containerId);return elem?Number(getComputedStyle(elem,null).getPropertyValue(attr).replace("px","")):null}var vm=$scope;vm.loading=!1,vm.containerId="sankey",vm.limitNewConnections=$scope.limitNewConnections||30,vm.minConnections=6,vm.height=vm.height||600,vm.customHeight=0,vm.alwaysOnDetails=!0,vm.showRiskEvidences=!1,vm.onlyCore=!1,vm.ratioFilter={min:0,max:50},$scope.$watch("ratioFilter.min",function(n,o){n&&o&&n!==o&&vm.renderSankey()}),$scope.$watch("ratioFilter.max",function(n,o){n&&o&&n!==o&&vm.renderSankey()}),$(window).resize(function(){vm.renderSankey()}),vm.addSize=function(){return!(vm.customHeight>=800)&&(vm.customHeight+=100,void $timeout(function(){vm.renderSankey()}))},vm.removeSize=function(){return!(vm.customHeight<=-300)&&(vm.customHeight-=100,void $timeout(function(){vm.renderSankey()}))},vm.init=function(id){id=id||vm.riskid,vm.loading=GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){vm.nodesArr=id?data.nodes.map(function(obj,index){var obj_pos=-1;return id instanceof Array?obj_pos=id[0].indexOf("RL_")>=0?id.indexOf(obj.id):index:id[0].indexOf("RL_")>=0?id.substring(id.lastIndexOf("/")+1)===obj.id.substring(obj.id.lastIndexOf("/")+1)?0:-1:obj_pos=index,obj_pos>=0&&(obj.color=CONFIG.COLORS[obj_pos]),obj}):data.nodes.filter(function(obj){return obj.connections>vm.minConnections}),vm.edgesArr=data.edges.filter(function(edge){for(var from=!1,to=!1,i=0,len=vm.nodesArr.length;i<len;i++)vm.nodesArr[i].id===edge.from&&(from=!0),vm.nodesArr[i].id===edge.to&&(to=!0);return from&&to}),$timeout(function(){vm.renderSankey()},0)})},vm.init(vm.riskid),vm.goToSelected=function(){var label,elem=vm.selectedItem.obj||{},id=elem.id.substring(elem.id.lastIndexOf("/")+1),type=vm.selectedItem.type;if("node"===type)label=elem.label;else{if("link"!==type)return!1;label=elem.source.label+" "+elem.label+" "+elem.target.label}content.goTo(id,label)},vm.addNodeRelations=function(){var id=vm.selectedId;vm.loading=GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){var limit=vm.limitNewConnections,nodes={};data.nodes.forEach(function(node){nodes[node.id]=node}),data.edges.forEach(function(edge){GRAPH.FindIndex(vm.edgesArr,edge.id)===-1&&limit>0&&(GRAPH.FindIndex(vm.nodesArr,edge.from)===-1&&vm.nodesArr.push(nodes[edge.from]),GRAPH.FindIndex(vm.nodesArr,edge.to)===-1&&vm.nodesArr.push(nodes[edge.to]),vm.edgesArr.push(edge),limit--)}),$timeout(function(){vm.renderSankey()},0)})},vm.deleteSelected=function(d){if(!vm.selectedItem||"node"!==vm.selectedItem.type)return!1;var elem=vm.selectedItem.obj||{};elem.sourceLinks.forEach(function(link){vm.edgesArr.splice(GRAPH.FindIndex(vm.edgesArr,link.id),1)}),elem.targetLinks.forEach(function(link){vm.edgesArr.splice(GRAPH.FindIndex(vm.edgesArr,link.id),1)}),vm.nodesArr=vm.nodesArr.filter(function(node){return GRAPH.FindIndex(vm.edgesArr,node.id,"from")+GRAPH.FindIndex(vm.edgesArr,node.id,"to")>=-1}),d&&d3.event.preventDefault(),$timeout(function(){vm.renderSankey()},0)},vm.renderSankey=function(){function dragmove(d){d3.select(this).attr("transform","translate("+d.x+","+(d.y=Math.max(0,Math.min(height-d.dy,d3.event.y)))+")"),link.attr("d",path)}var node_index={},graph={};graph.nodes=vm.nodesArr.map(function(obj,index){return node_index[obj.id]={index:index,value:obj.value},obj.name=obj.label,obj}),graph.links=vm.edgesArr.map(function(obj){return vm.showRiskEvidences&&(obj.ratio_type=GRAPH.ratioType(obj.ratio_type)),obj.value=Number(obj.ratio)||1,obj.source=node_index[obj.from].index,obj.target=node_index[obj.to].index,obj});var calculated_height=vm.customHeight+250*Math.log(graph.links.length),margin={top:10,right:10,bottom:10,left:10},width=chartCss("width")-margin.left-margin.right,height=(calculated_height>vm.height?calculated_height:vm.height)-margin.top-margin.bottom,viewBox="0 0 "+(angular.element(window).width()+40)+" "+(height+20);d3.format(",.0f"),d3.scale.category20b();angular.element("#"+vm.containerId+" svg").remove();var svg=d3.select("#"+vm.containerId).append("svg").attr("xmlns","http://www.w3.org/2000/svg").attr("xmlns:xlink","http://www.w3.org/1999/xlink").attr("width","100%").attr("height","100%").attr("viewBox",viewBox).append("g").attr("transform","translate("+margin.left+","+margin.top+")"),sankey=d3.sankey().nodeWidth(20).nodePadding(12).size([width,height]),path=sankey.link();sankey.nodes(graph.nodes).links(graph.links).layout(32);var link=svg.append("g").selectAll(".link").data(graph.links.filter(ratioFilterFn)).enter().append("path").attr("id",function(d,i){return idLabel(d.id)}).attr("class","link").attr("d",path).style("stroke",function(d,i){return vm.riskid?d.source.color||"#aaaaaa":CONFIG.COLORS[node_index[d.source.id].index]}).style("stroke-width",function(d){return Math.max(2,d.dy)-1}).sort(function(a,b){return b.dy-a.dy});link.append("title").text(function(d){return d.source.name+" --> "+d.target.name+(vm.showRiskEvidences?", "+d.ratio_type+" = "+d.ratio:", "+d.evidences.length+" evidence(s) "+GRAPH.ratioMinMax(d.evidences))});var node=svg.append("g").selectAll(".node").data(graph.nodes).enter().append("g").attr("class","node").attr("transform",function(d){return"translate("+d.x+","+d.y+")"}).call(d3.behavior.drag().origin(function(d){return d}).on("dragstart",function(){this.parentNode.appendChild(this)}).on("dragend",function(){sankey.relayout()}).on("drag",dragmove));node.append("rect").attr("height",function(d){return d.dy}).attr("width",sankey.nodeWidth()).style("stroke",function(d,i){return vm.riskid?d.color||"#aaaaaa":CONFIG.COLORS[i]}).style("fill",function(d,i){return vm.riskid?d.color||"#aaaaaa":CONFIG.COLORS[i]}).attr("data-title",function(d){return d.name}),node.append("text").attr("x",-6).attr("y",function(d){return d.dy/2}).attr("dy","0.50em").attr("text-anchor","end").attr("transform",null).text(function(d){return d.name.charAt(0).toUpperCase()+d.name.slice(1)}).filter(function(d){return d.x<width/2}).attr("x",6+sankey.nodeWidth()).attr("text-anchor","start"),node.on("mousedown",clickNode),link.on("mousedown",clickLink),node.on("dblclick",vm.addNodeRelations),link.on("dblclick",vm.goToSelected),node.on("contextmenu",vm.deleteSelected)},angular.element("#"+vm.containerId).on("mousedown",clearSelection)}]}}),angular.module("CarreEntrySystem").directive("carreGraphRisk",function(){return{templateUrl:"app/components/graph-network-vis/template.html",restrict:"E",scope:{limitNewConnections:"@",height:"@",riskid:"="},controller:["$scope","$timeout","toastr","$location","CONFIG","GRAPH","content","$q",function($scope,$timeout,toastr,$location,CONFIG,GRAPH,content,$q){var vm=$scope;vm.loading=null,vm.limitNewConnections=$scope.limitNewConnections||4,vm.minConnections=7,vm.height=vm.height||600,vm.customHeight=0,vm.alwaysOnDetails=!0,vm.showRiskEvidences="risk_evidences"===$location.search().elementstype,vm.onlyCore=!1;var network;vm.containerId="network";d3.scale.category20b();vm.addSize=function(){vm.customHeight+=100,network.setSize("100%",Number(vm.height)+vm.customHeight+"px"),network.redraw(),network.fit()},vm.removeSize=function(){return!(vm.customHeight<=0)&&(vm.customHeight-=100,network.setSize("100%",Number(vm.height)+vm.customHeight+"px"),network.redraw(),void network.fit())},vm.init=function(id){id=id||vm.riskid,$timeout(function(){vm.loading=$q.defer()},0),GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){vm.nodesArr=id?data.nodes.map(function(obj,index){var obj_pos=-1;return id instanceof Array?obj_pos=id[0].indexOf("RL_")>=0?id.indexOf(obj.id):index:id[0].indexOf("RL_")>=0?id.substring(id.lastIndexOf("/")+1)===obj.id.substring(obj.id.lastIndexOf("/")+1)?0:-1:obj_pos=index,obj_pos>=0&&(obj.color=CONFIG.COLORS[obj_pos]),obj}):data.nodes.filter(function(obj){return obj.connections>vm.minConnections}).map(function(obj,i){return obj.color=CONFIG.COLORS[i],obj}),vm.edgesArr=data.edges.filter(function(edge){for(var from=!1,to=!1,i=0,len=vm.nodesArr.length;i<len;i++)vm.nodesArr[i].id===edge.from&&(from=!0),vm.nodesArr[i].id===edge.to&&(to=!0);return from&&to}).map(function(edge){var pos=id instanceof Array?id.indexOf(edge.from):null;return edge.color=pos>=0?CONFIG.COLORS[pos]:"#aaaaaa",edge}),$timeout(function(){if(vm.onlyCore&&vm.riskid instanceof Array&&vm.riskid.length>1){var nodeIds=[];vm.startNetwork({nodes:vm.nodesArr.filter(function(node){return!!(network.getConnectedEdges(node.id).length>1||node.color)&&(nodeIds.indexOf(node.id)===-1&&nodeIds.push(node.id),!0)}),edges:vm.edgesArr.filter(function(edge){return nodeIds.indexOf(edge.from)>=0&&nodeIds.indexOf(edge.to)>=0})})}else vm.startNetwork()},0)})},vm.init(vm.riskid),vm.addNodeRelations=function(id){var id=id||vm.selectedId;vm.loading=GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){var limit=vm.limitNewConnections,nodes={};data.nodes.forEach(function(node){nodes[node.id]=node}),data.edges.forEach(function(edge){!vm.edges._data[edge.id]&&limit>0&&(vm.nodes._data[edge.from]||vm.nodes.add(nodes[edge.from]),vm.nodes._data[edge.to]||vm.nodes.add(nodes[edge.to]),vm.edges.add(edge),limit--)})})},vm.selectElement=function(id){id?(id.indexOf("/")!==-1&&(id=id.substr(id.lastIndexOf("/")+1)),$timeout(function(){vm.selectedId=id},0),vm.showDetails&&vm.alwaysOnDetails&&($timeout(function(){vm.showDetails=!1},0),$timeout(function(){vm.showDetails=!0},100))):$timeout(function(){vm.selectedId=!1},0)},vm.deleteSelected=function(id){var node=id||network.getSelectedNodes()[0];if(!node)return!1;var nodeData={nodes:[node],edges:network.getConnectedEdges(node)};vm.removeOrphan(nodeData)},vm.goToSelected=function(){var id,label,nodes=network.getSelectedNodes(),edges=network.getSelectedEdges();if(1===nodes.length)id=nodes[0].substring(nodes[0].lastIndexOf("/")+1),label=vm.nodes._data[nodes[0]].label;else{if(1!==edges.length)return!1;var edge=vm.edges._data[edges[0]];id=edges[0].substring(edges[0].lastIndexOf("/")+1),label=vm.nodes._data[edge.from].label+" "+edge.label+" "+vm.nodes._data[edge.to].label}content.goTo(id,label)},vm.removeOrphan=function(data){data.nodes.forEach(function(node){vm.nodes.remove(node)}),data.edges.forEach(function(edge){vm.edges.remove(edge)});var nodes=Object.keys(vm.nodes._data);nodes.forEach(function(node){var edges=network.getConnectedEdges(node);edges.length<=0&&vm.nodes.remove(node)})},vm.startNetwork=function(externalData){vm.loading&&vm.loading.promise&&1!==vm.loading.promise.$$state.status||$timeout(function(){vm.loading=$q.defer()},0),externalData=externalData||{},vm.customHeight=0,vm.edges=new vis.DataSet(externalData.edges||vm.edgesArr),vm.nodes=new vis.DataSet(externalData.nodes||vm.nodesArr);var container=document.getElementById(vm.containerId),data={nodes:vm.nodes,edges:vm.edges},options={autoResize:!0,height:vm.height+"px",width:"100%",manipulation:{enabled:!1},configure:{enabled:!1},edges:{smooth:{enabled:!0,type:"dynamic"},arrows:"to",color:"#aaaaaa",font:{color:"#343434",size:11,face:"arial",background:"none",strokeWidth:1,strokeColor:"#ffffff"}},nodes:{color:{border:"#aaaaaa",background:"#ffffff"}},physics:{enabled:!0,barnesHut:{gravitationalConstant:-1e3,centralGravity:.1,springLength:200,springConstant:.001,damping:.09,avoidOverlap:0},forceAtlas2Based:{gravitationalConstant:-70,centralGravity:.01,springConstant:.08,springLength:100,damping:.4,avoidOverlap:1},maxVelocity:50,minVelocity:.1,solver:"barnesHut",stabilization:{enabled:!0,iterations:300,updateInterval:100,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0}};network=new vis.Network(container,data,options),network.on("doubleClick",function(params){if(1===params.nodes.length)vm.addNodeRelations(params.nodes[0]);else if(1===params.edges.length){var edge=vm.edges._data[params.edges[0]],rf_id=params.edges[0].substring(params.edges[0].lastIndexOf("/")+1),rf_label=vm.nodes._data[edge.from].label+" "+edge.label+" "+vm.nodes._data[edge.to].label;content.goTo(rf_id,rf_label)}}),network.on("click",function(params){1===params.nodes.length?vm.selectElement(params.nodes[0]):1===params.edges.length?vm.selectElement(params.edges[0]):vm.selectElement()}),network.on("oncontext",function(params){var nodeId=network.getNodeAt(params.pointer.DOM);nodeId&&(params.event.preventDefault(),vm.deleteSelected(nodeId))}),network.on("afterDrawing",function(params){vm.loading&&vm.loading.promise&&0===vm.loading.promise.$$state.status&&$timeout(function(){vm.loading.resolve()},50)})}}]}}),angular.module("CarreEntrySystem").directive("carreGraphNetworkD3",function(){return{templateUrl:"app/components/graph-network-d3/template.html",restrict:"E",scope:{limitNewConnections:"@",height:"@",riskid:"="},controller:["$scope","$timeout","toastr","$location","CONFIG","GRAPH","$state","SweetAlert","$q",function($scope,$timeout,toastr,$location,CONFIG,GRAPH,$state,SweetAlert,$q){function visualize(id,w,h,data){var vis=(d3.scale.category20b(),d3.select("#"+id).append("svg").attr("id","graph").attr("width",w).attr("height",h).attr("style","pointer-events:fill;")),force=self.force=d3.layout.force().nodes(data.nodes).links(data.links).gravity(.2).distance(180).charge(-500).size([w,h]).start();vis.append("svg:defs").selectAll("marker").data(["end-marker"]).enter().append("svg:marker").attr("id",String).attr("viewBox","0 -5 10 10").attr("refX",30).attr("refY",0).attr("markerWidth",2).attr("markerHeight",2).attr("class","marker").attr("orient","auto").append("svg:path").attr("d","M0,-5L10,0L0,5").style("fill","#aaaaaa").style("stroke","#aaaaaa");var radius=20,node=vis.selectAll("g.node").data(data.nodes).enter().append("circle").attr("class","node").attr("r",radius).style("fill",function(d){return d.color||"#aaaaaa"}).style("stroke-width",function(d){return d.selected,2}).style("stroke",function(d){var sel=d.selected;return sel?"red":"white"}).call(force.drag),link=vis.selectAll("line.link").data(data.links).enter().append("svg:line").attr("class","link").attr("marker-end",function(d){return"url(#end-marker)"}).style("stroke",function(d){var sel=d.selected;return sel?"red":"#aaaaaa"}).style("stroke-width",function(d){return d.selected,5}).attr("x1",function(d){return d.source.x}).attr("y1",function(d){return d.source.y}).attr("x2",function(d){return d.target.x}).attr("y2",function(d){return d.target.y});node.append("title").text(function(d){
return d.label});var text=vis.append("svg:g").selectAll("g").data(force.nodes()).enter().append("svg:g");text.append("svg:text").attr("x",28).attr("y",0).attr("class","text shadow").text(function(d){return d.label}),text.append("svg:text").attr("x",28).attr("y",0).attr("class","text").text(function(d){return d.label});var path_text=vis.append("svg:g").selectAll("g").data(force.links()).enter().append("svg:g");path_text.append("svg:text").attr("class","path-text shadow").text(function(d){return d.label}),path_text.append("svg:text").attr("class","path-text").text(function(d){return d.label}),force.on("tick",function(){link.attr("x1",function(d){return d.source.x}).attr("y1",function(d){return d.source.y}).attr("x2",function(d){return d.target.x}).attr("y2",function(d){return d.target.y}),text.attr("transform",function(d){return"translate("+d.x+","+d.y+")"}),node.attr("transform",function(d){return"translate("+d.x+","+d.y+")"}),path_text.attr("transform",function(d){var dx=d.target.x-d.source.x,dy=d.target.y-d.source.y,dr=Math.sqrt(dx*dx+dy*dy);0==dr&&(dr=.1);var sinus=dy/dr,cosinus=dx/dr,l=6*d.label.length,offset=(1-l/dr)/2,x=d.source.x+dx*offset,y=d.source.y+dy*offset;return"translate("+x+","+y+") matrix("+cosinus+", "+sinus+", "+-sinus+", "+cosinus+", 0 , 0)"})})}var vm=$scope;vm.loading=!1,vm.limitNewConnections=$scope.limitNewConnections||4,vm.minConnections=10,vm.height=vm.height||600,vm.customHeight=0;var network;vm.options={showRiskEvidences:!1,onlyCore:!1},$timeout(function(){vm.selectedId="RL_2"},3e3),$scope.$watch("options",function(n,o){n.showRiskEvidences!==o.showRiskEvidences||n.onlyCore!==o.onlyCore,n.showRiskEvidences===o.showRiskEvidences&&n.onlyCore===o.onlyCore||(vm.loading=$q.defer()),$timeout(function(){vm.loading=vm.init(vm.riskid)},250)}),vm.addSize=function(){},vm.removeSize=function(){},vm.init=function(id){id||(id=vm.riskid),vm.loading=GRAPH.network(id,vm.options.showRiskEvidences?null:"risk_factor").then(function(data){vm.nodesArr=id?data.nodes.map(function(obj){var obj_pos=-1;return obj_pos=id instanceof Array?id.indexOf(obj.id):id.substring(id.lastIndexOf("/")+1)===obj.id.substring(obj.id.lastIndexOf("/")+1)?0:-1,obj_pos>=0&&(obj.color=CONFIG.COLORS[obj_pos]),obj}):data.nodes.filter(function(obj){return obj.connections>vm.minConnections}),vm.edgesArr=data.edges.filter(function(edge){for(var from=!1,to=!1,i=0,len=vm.nodesArr.length;i<len;i++)vm.nodesArr[i].id===edge.from&&(from=!0),vm.nodesArr[i].id===edge.to&&(to=!0);return from&&to}),$timeout(function(){if(vm.options.onlyCore&&vm.riskid instanceof Array&&vm.riskid.length>1){var nodeIds=[];vm.loading=vm.startNetwork({nodes:vm.nodesArr.filter(function(node){return!!(network.getConnectedEdges(node.id).length>1||node.color)&&(nodeIds.indexOf(node.id)===-1&&nodeIds.push(node.id),!0)}),edges:vm.edgesArr.filter(function(edge){return nodeIds.indexOf(edge.from)>=0&&nodeIds.indexOf(edge.to)>=0})})}else vm.startNetwork()},50)})},vm.init(vm.riskid),vm.showRiskFactor=function(id,label){SweetAlert.swal({title:"Show the Risk factor?",text:'This will redirect you to the "'+label+"\" risk factor's detail page.",type:"info",showCancelButton:!0,confirmButtonColor:"#2E8B57",confirmButtonText:"Yes, show me!",closeOnConfirm:!0,closeOnCancel:!0},function(isConfirm){isConfirm&&$state.go("main.risk_factors.view",{id:id})})},vm.showRiskElement=function(id,label){SweetAlert.swal({title:"Show the Risk element?",text:'This will redirect you to the "'+label+"\" risk element's detail page.",type:"info",showCancelButton:!0,confirmButtonColor:"#2E8B57",confirmButtonText:"Yes, show me!",closeOnConfirm:!0,closeOnCancel:!0},function(isConfirm){isConfirm&&$state.go("main.risk_elements.view",{id:id})})},vm.addNodeRelations=function(id){id=id||vm.selectedId,vm.loading=GRAPH.network(id,vm.options.showRiskEvidences?null:"risk_factor").then(function(data){var limit=vm.limitNewConnections,nodes={};data.nodes.forEach(function(node){nodes[node.id]=node}),data.edges.forEach(function(edge){!vm.edges._data[edge.id]&&limit>0&&(vm.nodes._data[edge.from]||vm.nodes.add(nodes[edge.from]),vm.nodes._data[edge.to]||vm.nodes.add(nodes[edge.to]),vm.edges.add(edge),limit--)})})},vm.selectElement=function(id){id?(id.indexOf("/")!==-1&&(id=id.substr(id.lastIndexOf("/")+1)),$timeout(function(){vm.selectedId=id},0),vm.showDetails&&($timeout(function(){vm.showDetails=!1},0),$timeout(function(){vm.showDetails=!0},100))):$timeout(function(){vm.showDetails=!1,vm.selectedId=!1},0)},vm.deleteSelected=function(id){var node=id||network.getSelectedNodes()[0];if(!node)return!1;var nodeData={nodes:[node],edges:network.getConnectedEdges(node)};vm.removeOrphan(nodeData)},vm.goToSelected=function(){var nodes=network.getSelectedNodes(),edges=network.getSelectedEdges();if(1===nodes.length){var rl_id=nodes[0].substring(nodes[0].lastIndexOf("/")+1),rl_label=vm.nodes._data[nodes[0]].label;vm.showRiskElement(rl_id,rl_label)}else{if(1!==edges.length)return!1;var edge=vm.edges._data[edges[0]],rf_id=edges[0].substring(edges[0].lastIndexOf("/")+1),rf_label=vm.nodes._data[edge.from].label+" "+edge.label+" "+vm.nodes._data[edge.to].label;vm.showRiskFactor(rf_id,rf_label)}},vm.removeOrphan=function(data){data.nodes.forEach(function(node){vm.nodes.remove(node)}),data.edges.forEach(function(edge){vm.edges.remove(edge)});var nodes=Object.keys(vm.nodes._data);nodes.forEach(function(node){var edges=network.getConnectedEdges(node);edges.length<=0&&vm.nodes.remove(node)})},vm.startNetwork=function(externalData){externalData=externalData||{},vm.customHeight=0;var nodes=externalData.nodes||vm.nodesArr,links=externalData.edges||vm.edgesArr;angular.element("#network svg").remove(),visualize("network",window.width-200,500,{nodes:nodes,links:links.map(function(l){return l.source=GRAPH.FindIndex(nodes,l.source,"id"),l.target=GRAPH.FindIndex(nodes,l.target,"id"),l.value=l.ratio,l})})}}]}}),angular.module("CarreEntrySystem").directive("carreGraphControls",function(){return{templateUrl:"app/components/graph-controls/template.html",restrict:"E",replace:!1,bindToController:{selectedId:"=",disableOptions:"=?",enableRotation:"@",rotation:"=?",onlyPath:"=?",showRiskEvidences:"=?",ratioFilter:"=?",refresh:"&",addSize:"&",removeSize:"&",navigate:"&",expand:"&",clear:"&"},controllerAs:"controls",scope:!0,controller:["$timeout","CONFIG","content","$scope",function($timeout,CONFIG,content,$scope){var vm=this;$scope.$watch("selectedId",function(n,o){n&&n!==o&&$scope.showDetails&&($scope.showDetails=!1,$timeout(function(){$scope.showDetails=!0}))}.bind(this)),$scope.applyRefresh=function(){$timeout(function(){vm.refresh({}),vm.showRiskEvidences?($scope.$broadcast("rzSliderForceRender"),vm.showSlider=!0):vm.showSlider=!1},0)},vm.user=CONFIG.currentUser.username,vm.getType=content.typeFromId,vm.showSlider=!!vm.showRiskEvidences;for(var maxLimit=50.5,step=.5,stepsArray=[],i=0;i<maxLimit;i+=step)stepsArray.push(Number(Math.round(i+"e2")+"e-2"));vm.slider_toggle={options:{stepsArray:stepsArray}}}]}}),angular.module("CarreEntrySystem").directive("carreGraphChordRisk",function(){return{templateUrl:"app/components/graph-chord/template.html",restrict:"E",scope:{limitNewConnections:"@",height:"@",riskid:"="},controller:["$scope","$timeout","toastr","CARRE","$location","CONFIG","GRAPH","$state","SweetAlert","content",function($scope,$timeout,toastr,CARRE,$location,CONFIG,GRAPH,$state,SweetAlert,content){function clickNode(obj,i){clearSelection(),d3.select(this).classed("selected",!d3.select(this).classed("selected")),selectElement(vm.nodesArr[i],"node"),"click"===d3.event.type&&d3.event.stopPropagation()}function clickLink(obj,i){clearSelection(),d3.select(this).classed("selected",!d3.select(this).classed("selected"));var link=vm.edgesArr.filter(function(link){return link.from===vm.nodesArr[obj.source.index].id&&link.to===vm.nodesArr[obj.target.index].id})[0];selectElement(link,"link"),d3.event.stopPropagation()}function clearSelection(){$timeout(function(){vm.selectedId=null},0),d3.select("#"+vm.containerId+" svg").selectAll(".chord path").classed("selected",!1),d3.select("#"+vm.containerId+" svg").selectAll(".group").classed("selected",!1)}function selectElement(obj,type){var id=obj?obj.id:null;id&&(id.indexOf("/")!==-1&&(id=id.substr(id.lastIndexOf("/")+1)),$timeout(function(){vm.selectedId=id,vm.selectedItem={type:type,obj:obj}},0),vm.showDetails&&vm.alwaysOnDetails&&($timeout(function(){vm.showDetails=!1},0),$timeout(function(){vm.showDetails=!0},100)))}function chartCss(attr){var elem=document.getElementById(vm.containerId);return elem?Number(getComputedStyle(elem,null).getPropertyValue(attr).replace("px","")):null}var vm=$scope;vm.loading=!1,vm.containerId="chord",vm.limitNewConnections=$scope.limitNewConnections||10,vm.minConnections=5,vm.height=vm.height||700,vm.customHeight=0,vm.rotation=0,vm.alwaysOnDetails=!0,vm.showRiskEvidences=!1,vm.onlyCore=!1,$(window).resize(function(){vm.renderChord()}),vm.addSize=function(){return!(vm.customHeight>=800)&&(vm.customHeight+=100,void $timeout(function(){vm.renderChord()}))},vm.removeSize=function(){return!(vm.customHeight<=-300)&&(vm.customHeight-=100,void $timeout(function(){vm.renderChord()}))},vm.init=function(id){id=id||vm.riskid,vm.loading=GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){vm.nodesArr=id?data.nodes.map(function(obj){var obj_pos=-1;return obj_pos=id instanceof Array?id.indexOf(obj.id):id.substring(id.lastIndexOf("/")+1)===obj.id.substring(obj.id.lastIndexOf("/")+1)?0:-1,obj_pos>=0&&(obj.color=CONFIG.COLORS[obj_pos]),obj}):data.nodes.filter(function(obj){return obj.connections>vm.minConnections}),vm.edgesArr=data.edges.filter(function(edge){for(var from=!1,to=!1,i=0,len=vm.nodesArr.length;i<len;i++)vm.nodesArr[i].id===edge.from&&(from=!0),vm.nodesArr[i].id===edge.to&&(to=!0);return from&&to}),$timeout(function(){vm.renderChord()},0)})},vm.init(vm.riskid),vm.goToSelected=function(){var label,elem=vm.selectedItem.obj||{},id=elem.id.substring(elem.id.lastIndexOf("/")+1),type=vm.selectedItem.type;if("node"===type)label=elem.label;else{if("link"!==type)return!1;label=vm.nodesArr[GRAPH.FindIndex(vm.nodesArr,elem.from)].label+" "+elem.label+" "+vm.nodesArr[GRAPH.FindIndex(vm.nodesArr,elem.to)].label}content.goTo(id,label)},vm.addNodeRelations=function(){var id=vm.selectedId;vm.loading=GRAPH.network(id,vm.showRiskEvidences?null:"risk_factor").then(function(data){var limit=vm.limitNewConnections,nodes={};data.nodes.forEach(function(node){nodes[node.id]=node}),data.edges.forEach(function(edge){GRAPH.FindIndex(vm.edgesArr,edge.id)===-1&&limit>0&&(GRAPH.FindIndex(vm.nodesArr,edge.from)===-1&&vm.nodesArr.push(nodes[edge.from]),GRAPH.FindIndex(vm.nodesArr,edge.to)===-1&&vm.nodesArr.push(nodes[edge.to]),vm.edgesArr.push(edge),limit--)}),$timeout(function(){vm.renderChord()},0)})},vm.deleteSelected=function(d){if(!vm.selectedItem||"node"!==vm.selectedItem.type)return!1;var elem=vm.selectedItem.obj||{};vm.edgesArr=vm.edgesArr.filter(function(link,i){return!(link.from===elem.id||link.to===elem.id)}),vm.nodesArr=vm.nodesArr.filter(function(node){return GRAPH.FindIndex(vm.edgesArr,node.id,"from")+GRAPH.FindIndex(vm.edgesArr,node.id,"to")>=-1}),d&&d3.event.preventDefault(),$timeout(function(){vm.renderChord()},0)},vm.renderChord=function(){function startAngle(d){return d.startAngle+offset}function endAngle(d){return d.endAngle+offset}function extend(a,b){for(var i in b)a[i]=b[i]}function fade(opacity){return function(g,i){svg.selectAll(".chord path").filter(function(d){return d.source.index!=i&&d.target.index!=i}).transition().style("opacity",opacity)}}vm.rotationWatch&&vm.rotationWatch();var options={rotation:vm.rotation},nodesIndex={},edgeMatrix=[],matrix=[];vm.nodesArr.forEach(function(n,i){nodesIndex[n.id]={i:i,obj:n},edgeMatrix[i]=edgeMatrix[i]||[],matrix[i]=matrix[i]||[],vm.nodesArr.forEach(function(m,j){edgeMatrix[i][j]=0,matrix[i][j]=0})}),vm.edgesArr.forEach(function(e,i){edgeMatrix[nodesIndex[e.from].i][nodesIndex[e.to].i]=e,matrix[nodesIndex[e.from].i][nodesIndex[e.to].i]=1});var config={width:chartCss("width"),height:700+vm.customHeight,rotation:0,textgap:10};options&&extend(config,options);var offset=Math.PI*vm.rotation,width=config.width,height=config.height,textgap=config.textgap,colors=d3.scale.category20b(),viewBoxDimensions="0 0 "+width+" "+height,chord=d3.layout.chord().padding(.05).sortSubgroups(d3.descending).matrix(matrix),innerRadius=.31*Math.min(width,height),outerRadius=1.1*innerRadius,fill=function(d,i){return i=i||d,vm.riskid?vm.nodesArr[i].color||"#aaaaaa":colors(i)},rotate=function(){d3.select("#"+vm.containerId+" svg g").transition().duration(1e3).attr("transform","translate("+width/2+","+height/2+")rotate("+vm.rotation+")")};vm.rotationWatch=$scope.$watch("rotation",function(){$timeout(function(){rotate()},0)}),angular.element("#"+vm.containerId+" svg").remove();var svg=d3.select("#"+vm.containerId).append("svg").attr("viewBox",viewBoxDimensions).attr("preserveAspectRatio","xMinYMid").attr("width",width).attr("height",height).append("g").attr("transform","translate("+width/2+","+height/2+")"),g=svg.selectAll("g.group").data(chord.groups).enter().append("svg:g").attr("class","group");g.append("svg:path").style("fill",function(d){return fill(d.index)}).style("stroke",function(d){return fill(d.index)}).attr("id",function(d,i){return"group"+d.index}).attr("d",d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius).startAngle(startAngle).endAngle(endAngle)),g.append("svg:text").each(function(d){d.angle=(d.startAngle+d.endAngle)/2+offset}).attr("dy",".35em").attr("text-anchor",function(d){return d.angle>Math.PI?"end":null}).attr("transform",function(d){return"rotate("+(180*d.angle/Math.PI-90)+")translate("+(outerRadius+textgap)+")"+(d.angle>Math.PI?"rotate(180)":"")}).text(function(d){return vm.nodesArr[d.index].label}).style("fill",function(d){return fill(d.index)});var link=svg.append("g").attr("class","chord").selectAll("path").data(chord.chords).enter().append("path").attr("d",d3.svg.chord().radius(innerRadius).startAngle(startAngle).endAngle(endAngle)).style("fill",function(d){return fill(d.source.index)}).style("opacity",1);link.append("svg:title").text(function(d){return vm.nodesArr[d.source.index].label+" "+edgeMatrix[d.source.index][d.target.index].label+" "+vm.nodesArr[d.target.index].label}),g.on("mouseover",fade(.1)).on("mouseout",fade(1)).on("click",clickNode).on("dblclick",vm.addNodeRelations),link.on("click",clickLink).on("dblclick",vm.goToSelected)},angular.element("#"+vm.containerId).on("click",clearSelection)}]}}),angular.module("CarreEntrySystem").directive("carreFooter",function(){return{templateUrl:"app/components/footer/footer.html",restrict:"E",replace:!0}}),angular.module("CarreEntrySystem").directive("carreElementControls",function(){return{templateUrl:"app/components/carre-element-controls/template.html",restrict:"E",replace:!0,bindToController:{carreId:"@"},controllerAs:"controls",scope:!0,controller:["CONFIG",function(CONFIG){this.dev=CONFIG.AllowDelete,this.user=CONFIG.currentUser.username}]}}),angular.module("CarreEntrySystem").directive("carreElement",["CONFIG",function(CONFIG){return{templateUrl:"app/components/carre-element/template.html",restrict:"E",replace:!0,scope:{type:"@",mode:"@",elemId:"@",elem:"=",notFields:"@",hidePubmed:"@"},controller:["$rootScope","$state","$scope","$timeout","content","CONFIG","VisibleFields","Observables","Risk_elements","Risk_factors","Measurement_types","Citations","Medical_experts","Risk_evidences",function($rootScope,$state,$scope,$timeout,content,CONFIG,VisibleFields,Observables,Risk_elements,Risk_factors,Measurement_types,Citations,Medical_experts,Risk_evidences){function renderElement(type,id){switch(type=type||content.typeFromId(id).raw,vm.type=type,type){case"risk_element":"RL"!==id.substring(0,2)?$state.go("404_error"):getRisk_element(id);break;case"risk_factor":"RF"!==id.substring(0,2)?$state.go("404_error"):getRisk_factor(id);break;case"risk_evidence":"RV"!==id.substring(0,2)?$state.go("404_error"):getRisk_evidence(id);break;case"observable":"OB"!==id.substring(0,2)?$state.go("404_error"):getObservable(id);break;case"citation":"CI"!==id.substring(0,2)?$state.go("404_error"):getCitation(id);break;case"measurement_type":"ME"!==id.substring(0,2)?$state.go("404_error"):getMeasurement_type(id);break;case"medical_expert":break;default:$state.go("404_error")}}function renderTempElement(type,data){var visibleFields=VisibleFields(type,"single",vm.notFields.split(","));vm.current=data,vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id)}function getRisk_element(id){var visibleFields=VisibleFields("risk_element","single",vm.notFields.split(","));vm.loading=Risk_elements.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function getRisk_factor(id){var visibleFields=VisibleFields("risk_factor","single",vm.notFields.split(","));vm.loading=Risk_factors.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function getRisk_evidence(id){var visibleFields=VisibleFields("risk_evidence","single",vm.notFields.split(","));vm.loading=Risk_evidences.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.current.pubmedId=!$scope.hidePubmed&&res.data[0].has_risk_evidence_source_label,vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function getCitation(id){var visibleFields=VisibleFields("citation","single",vm.notFields.split(","));vm.loading=Citations.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.current.pubmedId=!$scope.hidePubmed&&res.data[0].has_citation_pubmed_identifier_label,vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function getObservable(id){var visibleFields=VisibleFields("observable","single",vm.notFields.split(","));vm.loading=Observables.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function getMeasurement_type(id){var visibleFields=VisibleFields("measurement_type","single",vm.notFields.split(","));vm.loading=Measurement_types.get([id]).then(function(res){res.data&&(vm.current=res.data[0],vm.fields=visibleFields.map(function(field){return{value:field,label:content.labelOf(field)}}),vm.rdf_source=rdfSource(vm.current.id))})}function rdfSource(id){return"https://"+CONFIG.CARRE_API_URL.substring(CONFIG.CARRE_API_URL.indexOf("://")+3,CONFIG.CARRE_API_URL.indexOf("/ws"))+"/sparql?query=DESCRIBE%20%3C"+id+"%3E&format=text/plain"}var vm=$scope;vm.current=vm.elem||{},vm.notFields=vm.notFields||"",vm.elemId?(renderElement(vm.type,vm.elemId),$rootScope.elementViewerWatcher&&$rootScope.elementViewerWatcher(),$rootScope.elementViewerWatcher=$scope.$watch("elemId",function(newId,oldId){newId&&newId.length>=2&&newId!==oldId&&renderElement(vm.type,newId)})):vm.type&&vm.elem&&renderTempElement(vm.type,vm.elem)}]}}]),angular.module("CarreEntrySystem").service("VisibleFields",function(){var visibleFields={risk_element:{single:["has_risk_element_name","has_risk_element_identifier","has_risk_element_type","has_risk_element_modifiable_status","has_risk_element_observable","has_risk_element_observable_condition","includes_risk_element","has_author","has_reviewer"],list:["has_risk_element_name","has_risk_element_identifier","has_risk_element_type","has_risk_element_modifiable_status","has_risk_element_observable"]},risk_evidence:{single:["has_risk_factor","has_risk_evidence_observable","has_observable_condition","has_risk_evidence_ratio_type","has_risk_evidence_ratio_value","has_confidence_interval_min","has_confidence_interval_max","is_adjusted_for","has_risk_evidence_source","has_author","has_reviewer"],list:["has_risk_factor","has_observable_condition_text","has_risk_evidence_ratio_value"]},risk_factor:{single:["has_risk_factor_source","has_risk_factor_target","has_risk_factor_association_type","has_author","has_reviewer"],list:["has_risk_factor_source","has_risk_factor_target","has_risk_factor_association_type"]},risk_review:{single:["is_for_element","is_assigned_to","has_review_notes","has_review_json","review_date","assign_date","review_status"],list:["is_for_element","is_assigned_to","has_review_notes","review_status"]},observable:{single:["has_observable_name","has_observable_acronym","has_observable_type","has_observable_measurement_type","has_external_type","has_external_predicate","has_author","has_reviewer"],list:["has_observable_name","has_observable_type","has_observable_measurement_type"]},citation:{single:["has_citation_pubmed_identifier","has_citation_summary","has_citation_source_type","has_citation_source_level","has_author","has_reviewer"],list:["has_citation_pubmed_identifier","has_citation_summary","has_citation_source_type","has_citation_source_level"]},measurement_type:{single:["has_measurement_type_name","has_enumeration_values","has_label","has_datatype","has_external_unit"],list:["has_measurement_type_name","has_datatype","has_label","has_enumeration_values"]},medical_expert:{single:[],list:[]}};return function(type,view,removeFields){return type&&visibleFields[type]?(view=view||"list",removeFields=removeFields&&removeFields instanceof Array?removeFields:[],visibleFields[type][view].filter(function(field){return removeFields.indexOf(field)==-1})):""}}),angular.module("CarreEntrySystem").service("Auth",["$http","CONFIG","$cookies","$state","$q","$timeout","Email","$location","$window",function($http,CONFIG,$cookies,$state,$q,$timeout,Email,$location,$window){this.cookie=$cookies.get("CARRE_USER")||CONFIG.TEST_TOKEN||"",this.isLoggedIn=function(){var deferred=$q.defer();return CONFIG.currentUser.role?deferred.resolve(CONFIG.currentUser):CONFIG.currentUser.guest?deferred.reject("Guest users not allowed to do this!"):this.getUser().then(function(){$timeout(function(){CONFIG.currentUser.role?deferred.resolve(CONFIG.currentUser):CONFIG.currentUser.guest&&deferred.reject("Guest users not allowed to do this!")},200)}),deferred.promise},this.getUser=function(){var deferred=$q.defer();return CONFIG.currentUser.role||CONFIG.currentUser.guest?deferred.resolve(CONFIG.currentUser):this.cookie.length>0?$http.get(CONFIG.CARRE_API_URL+"userProfile?token="+this.cookie,{cache:!0,timeout:5e3}).then(function(res){res.data.error?(Email.bug({data:CONFIG.CARRE_DEVICES+"logout?next="+$location.absUrl(),title:"Invalid Token, Redirect url"}),$window.location.href=CONFIG.CARRE_DEVICES+"logout?next="+$location.absUrl(),CONFIG.currentUser={guest:!0}):0===res.data.username.indexOf("(")?(Email.bug({data:res.data,title:"RDF server is down"}),CONFIG.currentUser={guest:!0}):res.data.role?(CONFIG.currentUser=res.data,CONFIG.CARRE_DEFAULT_GRAPH=CONFIG.CARRE_ARCHIVE_GRAPH):(Email.bug({data:res.data,title:"User is not a doctor"}),CONFIG.currentUser={guest:!0}),deferred.resolve(CONFIG.currentUser)})["catch"](function(err){CONFIG.currentUser={},deferred.reject(err),Email.bug(err),$state.go("500_API_ERROR")}):(CONFIG.currentUser={guest:!0},deferred.resolve(CONFIG.currentUser)),deferred.promise}}]),angular.module("CarreEntrySystem").service("content",["CarreTranslate","SweetAlert","$state",function(CarreTranslate,SweetAlert,$state){function getModelFields(fieldsArray,visibleArray){var columnDefs=[];return visibleArray.forEach(function(field_name){columnDefs.push({field:field_name+"_label",displayName:labelFromKey(field_name)})}),fieldsArray.forEach(function(field_name){visibleArray.indexOf(field_name)===-1&&columnDefs.push({field:field_name+"_label",displayName:labelFromKey(field_name),visible:!1})}),columnDefs[0].sort={priority:0,direction:"asc"},columnDefs}function getDefaultGridProperties(){return{paginationPageSizes:[10,50,100],paginationPageSize:10,enableColumnResizing:!0,enableFiltering:!0,allowCellFocus:!0,enableGridMenu:!0,multiSelect:!0,enableRowSelection:!0,enableHighlighting:!0,enableColumnMenus:!0,showGridFooter:!0,showColumnFooter:!0,exporterMenuPdf:!1,exporterCsvFilename:window.location.href.substr(window.location.href.lastIndexOf("/")+1)+".csv"}}function labelFromKey(key){return CarreTranslate(key)}function getTypeFromId(id){if(!id)return"";if(id.indexOf("_")===-1)return"";var str=id.substr(id.lastIndexOf("_")-2,2).toUpperCase();return"OB"===str?{state:"observables",raw:"risk_element",label:"Risk element"}:"CI"===str?{state:"citations",raw:"citation",label:"Citation"}:"MD"===str?{state:"medical_experts",raw:"medical_expert",label:"Medical expert"}:"ME"===str?{state:"measurement_types",raw:"measurement_type",label:"Measurement types"}:"RL"===str?{state:"risk_elements",raw:"risk_element",label:"Risk element"}:"RF"===str?{state:"risk_factors",raw:"risk_factor",label:"Risk factor"}:"RV"===str?{state:"risk_evidences",raw:"risk_evidence",label:"Risk evidence"}:"RW"===str?{state:"risk_reviews",raw:"risk_review",label:"Review"}:void 0}function showElement(id,label){var type=getTypeFromId(id);SweetAlert.swal({title:"Show the "+type.label+"?",text:"This will redirect you to the `"+label+"` "+type.label+"'s detail page.",type:"info",showCancelButton:!0,confirmButtonColor:"#2E8B57",confirmButtonText:"Yes, show me!",closeOnConfirm:!0,closeOnCancel:!0},function(isConfirm){isConfirm&&$state.go("main."+type.state+".view",{id:id})})}return this.exports={"default":getDefaultGridProperties(),fields:getModelFields,labelOf:labelFromKey,typeFromId:getTypeFromId,goTo:showElement},this.exports}]),angular.module("CarreEntrySystem").service("Tutorial",["$http","CONFIG","toastr","$state",function($http,CONFIG,toastr,$state){function startGuest(fn){CONFIG.currentUser&&CONFIG.currentUser.username?CONFIG.currentUser.username:"guest";fn()}function startUser(data){var user=CONFIG.currentUser?CONFIG.currentUser.username:"guest";$http.post(CONFIG.CARRE_CACHE_URL+"sendemail",{action:"report_bug",user:user,reqdata:JSON.stringify(data)})}function defaultOptions(){return{steps:[{element:"#intro-risk-model",intro:"Here you can see the CARRE risk model overview",position:"right"},{element:"#intro-stats",intro:"This chart represents all the current CARRE elements in the database",position:"left"},{element:"#intro-box-risk-factors",intro:"This box is a counter for all the CARRE risk factors",position:"top"},{element:"#intro-box-risk-evidences",intro:"This box is a counter for all the CARRE risk evidences",position:"top"}],showStepNumbers:!1,showBullets:!1,exitOnOverlayClick:!0,exitOnEsc:!0,nextLabel:"<strong>Next</strong>",prevLabel:"<strong>Previous</strong>",skipLabel:"Exit",doneLabel:"OK that's enough!"}}return this.exports={startGuest:startGuest,startUser:startUser,options:defaultOptions},this.exports}]),angular.module("CarreEntrySystem").filter("translateMapping",["CarreTranslate",function(CarreTranslate){return function(input){return CarreTranslate(input)}}]).service("CarreTranslate",["CONFIG",function(CONFIG){var translations=window.CARRE_TRANSLATIONS;return function(str,showOnlyIfExists){return translations[CONFIG.LANG].hasOwnProperty(str)?translations[CONFIG.LANG][str]:showOnlyIfExists?"--Not-Available-Translation--":str}}]).filter("translate",["Translate",function(Translate){return function(input){return Translate(input)}}]),angular.module("CarreEntrySystem").service("RdfFormatter",["CONFIG","CarreTranslate","Email",function(CONFIG,CarreTranslate,Email){function groupByProp(data,triplesFormat,propIndex,valueProp){triplesFormat=triplesFormat||["subject","predicate","object"];var settingsObj={triplesFormat:triplesFormat,groupProp:triplesFormat[propIndex||0],valueProp:valueProp,keys:[],fields:[],mappings:{},data:[]};return data.reduce(tripleAccumulator,settingsObj)}function tripleAccumulator(settings,obj){var type,id,rel,val,val_label;if(id=obj[settings.groupProp][settings.valueProp],rel=makeLabel(obj[settings.triplesFormat[1]][settings.valueProp]),type=obj[settings.triplesFormat[2]].type,val=obj[settings.triplesFormat[2]][settings.valueProp],"has_educational_material"===rel)return settings;if("has_observable_condition_text"===rel&&(val=val.replace(new RegExp(">=","g"),"≥").replace(new RegExp("<=","g"),"≤")),obj[settings.triplesFormat[2]].hasOwnProperty("xml:lang")&&obj[settings.triplesFormat[2]]["xml:lang"]!==CONFIG.LANG)return settings;if(val_label="typed-literal"===type?val:makeLabel(val),["CI","OB","RF","RL","RV","ME"].indexOf(val_label.substr(0,2))>-1&&val_label.indexOf("observable_condition")===-1){settings.mappings[val_label]=settings.mappings[val_label]||{};for(var prop in obj)"subject"!==prop&&"predicate"!==prop&&"object"!==prop&&obj[prop].value.length>0&&(settings.mappings[val_label][prop]=obj[prop].value)}"has_external_type"!==rel&&"has_external_unit"!==rel&&"has_external_predicate"!==rel||(val_label=makeLabel(val)),settings.fields.indexOf(rel)===-1&&settings.fields.push(rel);var index=settings.keys.indexOf(id);return index===-1&&(settings.keys.push(id),settings.data.push({id:id,id_label:makeLabel(id)}),index=settings.keys.length-1),settings.data[index][rel]=settings.data[index][rel]||[],settings.data[index][rel].push(val),settings.data[index][rel+"_label"]=settings.data[index][rel+"_label"]||"",settings.data[index][rel+"_label"]+=(settings.data[index][rel+"_label"].length>0?",":"")+val_label,settings.data[index][rel+"_label_arr"]=settings.data[index][rel+"_label_arr"]||[],settings.data[index][rel+"_label_arr"].push(val_label),settings}function replaceMappings(settings){return settings.data=settings.data.map(function(obj){var cat="";for(var prop in obj)prop.indexOf("_label_arr")>0&&prop.indexOf("has_observable_condition")===-1&&(obj[prop]=obj[prop].map(function(term){if(!settings.mappings.hasOwnProperty(term))return translate(term);switch(cat=term.substr(0,2)){case"CI":return settings.mappings[term].has_citation_pubmed_identifier;case"OB":return settings.mappings[term].has_observable_name;case"ME":return settings.mappings[term].has_measurement_type_name;case"RF":return settings.mappings[term].has_source_risk_element_name+" ["+translate(settings.mappings[term].has_risk_factor_association_type)+"] "+settings.mappings[term].has_target_risk_element_name;case"RL":return settings.mappings[term].has_risk_element_name;case"RV":return term;default:return term}}),obj[prop.split("_arr")[0]]=obj[prop].join(", "));return obj}),settings}function translate(str){return str?CarreTranslate(str.indexOf("#")>=0?str.split("#")[1]:str):""}function makeLabel(str){return str.indexOf("#")>=0?str=str.split("#")[1]:str.indexOf("http")>=0?str.substring(str.lastIndexOf("/")+1):str}return this.exports={groupByProp:groupByProp,mappings:replaceMappings,translate:translate},this.exports}]),angular.module("CarreEntrySystem").service("QUERY",["CONFIG",function(CONFIG){function getPrefix(id){if(id.indexOf("http")>=0)return id;var type=id.split("_")[0];return PREFIXES.hasOwnProperty(type)?PREFIXES[type]+id:id}function addPrefix(prefix){if(prefix)PREFIXES.hasOwnProperty(prefix)&&PREFIXARR.indexOf(prefix)===-1&&(PREFIXARR.push(prefix),PREFIXSTR+="PREFIX "+prefix+": <"+PREFIXES[prefix]+"> \n");else for(var prop in PREFIXES)PREFIXARR.push(prop),PREFIXSTR+="PREFIX "+prop+": <"+PREFIXES[prop]+"> \n"}function keepDiffProps(oldObj,newObj){var obj={};for(var prop in newObj)if(newObj[prop].value instanceof Array)if(oldObj[prop]instanceof Array){if(newObj[prop].value.length!==oldObj[prop].length)obj[prop]=newObj[prop];else for(var i=0,arr=newObj[prop].value;i<arr.length;i++)if(oldObj[prop].indexOf(arr[i])===-1){obj[prop]=newObj[prop];break}}else obj[prop]=newObj[prop];else oldObj[prop]&&oldObj[prop][0]==newObj[prop].value||(obj[prop]=newObj[prop]);
return obj}function parse(node){return node instanceof Object?"node"!==node.type?"lang"===node.type?'"'+node.value+'"@'+CONFIG.LANG.trim():'"'+node.value+'"^^'+fillPrefix("xsd:"+node.type):0===node.value.indexOf("http://")||0===node.value.indexOf("https://")?"<"+node.value+">":fillPrefix(node.value):0===node.indexOf("http://")||0===node.indexOf("https://")?"<"+node+">":fillPrefix(node)}function fillPrefix(test,prefixes){test.indexOf(":")===-1&&(test="risk:"+test);var val=test.split(":");return CONFIG.OPTIONS.usePrefix?(addPrefix(val[0]),test):(prefixes=prefixes||PREFIXES,prefixes.hasOwnProperty(val[0])?"<"+prefixes[val[0]]+val[1]+">":"<node_"+Math.round(1e8*Math.random())+">")}function buildUpdateQuery(old,obj,id,graph){PREFIXARR=[],PREFIXSTR=[],graph=graph||CONFIG.CARRE_DEFAULT_GRAPH,obj=keepDiffProps(old,obj),id=id||parse(old.id);var deleteTriples="",insertTriples="",objEmpty=!0;for(var prop in obj){objEmpty=!1;var pre=obj[prop].pre;deleteTriples+=id+" "+parse(pre+":"+prop)+" ?"+prop+"_var . \n",obj[prop].value instanceof Array?obj[prop].value.forEach(function(elem){insertTriples+=id+" "+parse(pre+":"+prop)+" "+parse(elem)+" . \n"}):insertTriples+=id+" "+parse(pre+":"+prop)+" "+parse(obj[prop])+" . \n"}if(objEmpty)return"";var deleteQuery="WITH "+graph+" DELETE { \n"+deleteTriples+" } \n WHERE { \n"+deleteTriples+" } \n",insertQuery="INSERT DATA { GRAPH "+graph+" { \n"+insertTriples+" }} \n";return(CONFIG.OPTIONS.usePrefix?PREFIXSTR:"")+deleteQuery+insertQuery}function buildInsertQuery(obj,type,idlabel,usergraph,graph){PREFIXARR=[],PREFIXSTR=[],graph=graph||CONFIG.CARRE_DEFAULT_GRAPH,usergraph=usergraph||CONFIG.currentUser.graphName;var insertTriples="",objEmpty=!0;for(var prop in obj){objEmpty=!1;var pre=obj[prop].pre;obj[prop].value instanceof Array?obj[prop].value.forEach(function(elem){insertTriples+="?newid "+parse(pre+":"+prop)+" "+parse(elem)+" . \n"}):insertTriples+="?newid "+parse(pre+":"+prop)+" "+parse(obj[prop])+" . \n"}if(objEmpty)return"";insertTriples+="?newid "+parse("risk:has_author")+" "+parse(usergraph)+"; a "+parse("risk:"+type)+" .  \n";var insertQuery="INSERT { GRAPH "+graph+" { \n"+insertTriples+" }} WHERE \n          { GRAPH "+graph+" \n          { { \n              SELECT ?oldindex FROM "+graph+" \n              WHERE { \n               ?elem a "+parse("risk:"+type)+' . \n                BIND (xsd:integer(strafter(STR(?elem),"'+idlabel+'_")) AS ?oldindex) \n              } ORDER BY DESC(?oldindex) LIMIT 1 \n            } \n            BIND (IRI(CONCAT('+parse(idlabel+":")+', "'+idlabel+'_", ?oldindex+1)) AS ?newid) \n          } }';return(CONFIG.OPTIONS.usePrefix?PREFIXSTR:"")+insertQuery}this.exports={insert:buildInsertQuery,update:buildUpdateQuery,prefix:getPrefix};var PREFIXES={xsd:"http://www.w3.org/2001/XMLSchema#",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",carreUsers:"https://carre.kmi.open.ac.uk/users/",risk:"http://carre.kmi.open.ac.uk/ontology/risk.owl#",ME:"http://carre.kmi.open.ac.uk/measurement_types/",OB:"http://carre.kmi.open.ac.uk/observables/",RL:"http://carre.kmi.open.ac.uk/risk_elements/",RV:"http://carre.kmi.open.ac.uk/risk_evidences/",RF:"http://carre.kmi.open.ac.uk/risk_factors/",MD:"http://carre.kmi.open.ac.uk/medical_experts/",CI:"http://carre.kmi.open.ac.uk/citations/",RW:"http://carre.kmi.open.ac.uk/reviews/"},PREFIXSTR="",PREFIXARR=[];return this.exports}]),angular.module("CarreEntrySystem").service("Pubmed",["$http","CONFIG",function($http,CONFIG){var apiEfetch=CONFIG.PUBMED_API_URL,apiSearch=CONFIG.EUROPEPMC_API_URL,efetch=function(id){return $http.get(apiEfetch+"efetch.fcgi?db=pubmed&retmode=text&rettype=abstract&id="+id,{ignoreLoadingBar:!1,cache:!0}).then(function(res){return res},function(err){})},esearch=function(query){return $http.jsonp(apiSearch+"search?resulttype=lite&format=json&callback=JSON_CALLBACK&query="+query,{ignoreLoadingBar:!1,cache:!0}).then(function(res){return{count:res.data.hitCount,result:res.data.resultList.result}},function(err){})};return{fetch:efetch,search:esearch}}]),angular.module("CarreEntrySystem").service("Email",["$http","CONFIG","toastr",function($http,CONFIG,toastr){function recommendExample(data){var user=CONFIG.currentUser?CONFIG.currentUser.username:"guest";$http.post(CONFIG.CARRE_CACHE_URL+"sendemail",{action:"recommend_examples",user:user,reqdata:JSON.stringify(data)}).then(function(data){toastr.success("<b>Example sent!</b>","<h4>Thank you!</h4>")},function(err){toastr.error("<b>Example not sent</b>"+err,"<h4>Example error</h4>")})}function reportBug(data){var user=CONFIG.currentUser?CONFIG.currentUser.username:"guest";$http.post(CONFIG.CARRE_CACHE_URL+"sendemail",{action:"report_bug",user:user,reqdata:JSON.stringify(data)})}function sendEmail(data,action){var user=CONFIG.currentUser?CONFIG.currentUser.username:"guest";$http.post(CONFIG.CARRE_CACHE_URL+"sendemail",{action:action,user:user,reqdata:JSON.stringify(data)}).then(function(data){toastr.success("<b>Message sent!</b>","<h4>Thank you!</h4>")},function(err){toastr.error("<b>Message not sent</b>"+err,"<h4>Message error</h4>")})}return this.exports={example:recommendExample,bug:reportBug,send:sendEmail},this.exports}]),d3.sankey=function(){function computeNodeLinks(){nodes.forEach(function(node){node.sourceLinks=[],node.targetLinks=[]}),links.forEach(function(link){var source=link.source,target=link.target;"number"==typeof source&&(source=link.source=nodes[link.source]),"number"==typeof target&&(target=link.target=nodes[link.target]),source.sourceLinks.push(link),target.targetLinks.push(link)})}function computeNodeValues(){nodes.forEach(function(node){node.value=Math.max(d3.sum(node.sourceLinks,value),d3.sum(node.targetLinks,value))})}function computeNodeBreadths(){for(var nextNodes,remainingNodes=nodes,x=0;remainingNodes.length;)nextNodes=[],remainingNodes.forEach(function(node){node.x=x,node.dx=nodeWidth,node.sourceLinks.forEach(function(link){nextNodes.push(link.target)})}),remainingNodes=nextNodes,++x;moveSinksRight(x);var width=window.innerWidth||document.width;scaleNodeBreadths((width-nodeWidth)/(x-1))}function moveSinksRight(x){nodes.forEach(function(node){node.sourceLinks.length||(node.x=x-1)})}function scaleNodeBreadths(kx){nodes.forEach(function(node){node.x*=kx})}function computeNodeDepths(iterations){function initializeNodeDepth(){var ky=d3.min(nodesByBreadth,function(nodes){return(size[1]-(nodes.length-1)*nodePadding)/d3.sum(nodes,value)});nodesByBreadth.forEach(function(nodes){nodes.forEach(function(node,i){node.y=i,node.dy=node.value*ky})}),links.forEach(function(link){link.dy=link.value*ky})}function relaxLeftToRight(alpha){function weightedSource(link){return center(link.source)*link.value}nodesByBreadth.forEach(function(nodes,breadth){nodes.forEach(function(node){if(node.targetLinks.length){var y=d3.sum(node.targetLinks,weightedSource)/d3.sum(node.targetLinks,value);node.y+=(y-center(node))*alpha}})})}function relaxRightToLeft(alpha){function weightedTarget(link){return center(link.target)*link.value}nodesByBreadth.slice().reverse().forEach(function(nodes){nodes.forEach(function(node){if(node.sourceLinks.length){var y=d3.sum(node.sourceLinks,weightedTarget)/d3.sum(node.sourceLinks,value);node.y+=(y-center(node))*alpha}})})}function resolveCollisions(){nodesByBreadth.forEach(function(nodes){var node,dy,i,y0=0,n=nodes.length;for(nodes.sort(ascendingDepth),i=0;i<n;++i)node=nodes[i],dy=y0-node.y,dy>0&&(node.y+=dy),y0=node.y+node.dy+nodePadding;if(dy=y0-nodePadding-size[1],dy>0)for(y0=node.y-=dy,i=n-2;i>=0;--i)node=nodes[i],dy=node.y+node.dy+nodePadding-y0,dy>0&&(node.y-=dy),y0=node.y})}function ascendingDepth(a,b){return a.y-b.y}var nodesByBreadth=d3.nest().key(function(d){return d.x}).sortKeys(d3.ascending).entries(nodes).map(function(d){return d.values});initializeNodeDepth(),resolveCollisions();for(var alpha=1;iterations>0;--iterations)relaxRightToLeft(alpha*=.99),resolveCollisions(),relaxLeftToRight(alpha),resolveCollisions()}function computeLinkDepths(){function ascendingSourceDepth(a,b){return a.source.y-b.source.y}function ascendingTargetDepth(a,b){return a.target.y-b.target.y}nodes.forEach(function(node){node.sourceLinks.sort(ascendingTargetDepth),node.targetLinks.sort(ascendingSourceDepth)}),nodes.forEach(function(node){var sy=0,ty=0;node.sourceLinks.forEach(function(link){link.sy=sy,sy+=link.dy}),node.targetLinks.forEach(function(link){link.ty=ty,ty+=link.dy})})}function center(node){return node.y+node.dy/2}function value(link){return link.value}var sankey={},nodeWidth=24,nodePadding=8,size=[1,1],nodes=[],links=[];return sankey.nodeWidth=function(_){return arguments.length?(nodeWidth=+_,sankey):nodeWidth},sankey.nodePadding=function(_){return arguments.length?(nodePadding=+_,sankey):nodePadding},sankey.nodes=function(_){return arguments.length?(nodes=_,sankey):nodes},sankey.links=function(_){return arguments.length?(links=_,sankey):links},sankey.size=function(_){return arguments.length?(size=_,sankey):size},sankey.layout=function(iterations){return computeNodeLinks(),computeNodeValues(),computeNodeBreadths(),computeNodeDepths(iterations),computeLinkDepths(),sankey},sankey.relayout=function(){return computeLinkDepths(),sankey},sankey.link=function(){function link(d){var x0=d.source.x+d.source.dx,x1=d.target.x,xi=d3.interpolateNumber(x0,x1),x2=xi(curvature),x3=xi(1-curvature),y0=d.source.y+d.sy+d.dy/2,y1=d.target.y+d.ty+d.dy/2;return"M"+x0+","+y0+"C"+x2+","+y0+" "+x3+","+y1+" "+x1+","+y1}var curvature=.5;return link.curvature=function(_){return arguments.length?(curvature=+_,link):curvature},link},sankey},angular.module("CarreEntrySystem").service("CARRE",["$http","CONFIG","Auth","RdfFormatter","$q","toastr","$state","$cacheFactory","QUERY","Email","$rootScope",function($http,CONFIG,Auth,RdfFormatter,$q,toastr,$state,$cacheFactory,QUERY,Email,$rootScope){function deleteInstance(id){var query="WITH "+CONFIG.CARRE_ARCHIVE_GRAPH+" DELETE { <"+QUERY.prefix(id)+"> ?s ?p .  }  WHERE { <"+QUERY.prefix(id)+"> ?s ?p .}";return apiQuery(query)}function searchInstances(type,term){if(!type||!term)throw"CARRE Error: Cannot search without type and term!";var listQuery="SELECT * FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { \n             ?subject a risk:"+type+"; ?predicate ?object. \n              OPTIONAL {    \n               ?object a risk:citation. \n               ?object risk:has_citation_pubmed_identifier ?has_citation_pubmed_identifier  \n              } \n              OPTIONAL {    \n               ?object a risk:observable. \n               ?object risk:has_observable_name ?has_observable_name  \n              } \n              OPTIONAL {    \n               ?object a risk:risk_element. \n               ?object risk:has_risk_element_name ?has_risk_element_name  \n              } \n              OPTIONAL {    \n               ?object a risk:measurement_type. \n               ?object risk:has_measurement_type_name ?has_measurement_type_name  \n              } \n              OPTIONAL {    \n               ?object a risk:risk_factor.  \n               ?object risk:has_risk_factor_association_type ?has_risk_factor_association_type. \n               ?object risk:has_risk_factor_source ?has_risk_factor_source. \n               ?object risk:has_risk_factor_target ?has_risk_factor_target. \n               ?has_risk_factor_source risk:has_risk_element_name ?has_source_risk_element_name.  \n               ?has_risk_factor_target risk:has_risk_element_name ?has_target_risk_element_name.  \n              } \n";return listQuery+='FILTER (lcase(str(?object)) = "'+term+'") }',selectQuery(listQuery)}function langFilter(variable_predicate){var lang=CONFIG.LANG;return"FILTER(lang("+variable_predicate+")='"+lang+"') "}function queryInstances(type,ArrayOfIDs){var listQuery="SELECT * FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { \n             ?subject a risk:"+type+"; ?predicate ?object. \n              OPTIONAL {    \n               ?object a risk:citation. \n               ?object risk:has_citation_pubmed_identifier ?has_citation_pubmed_identifier  \n              } \n              OPTIONAL {    \n               ?object a risk:observable. \n               ?object risk:has_observable_name ?has_observable_name  \n              "+langFilter("?has_observable_name")+" \n              } \n              OPTIONAL {    \n               ?object a risk:risk_element. \n               ?object risk:has_risk_element_name ?has_risk_element_name  \n              "+langFilter("?has_risk_element_name")+" \n              } \n              OPTIONAL {    \n               ?object a risk:measurement_type. \n               ?object risk:has_measurement_type_name ?has_measurement_type_name  \n              "+langFilter("?has_measurement_type_name")+" \n              } \n              OPTIONAL {    \n               ?object a risk:risk_factor.  \n               ?object risk:has_risk_factor_association_type ?has_risk_factor_association_type. \n               ?object risk:has_risk_factor_source ?has_risk_factor_source. \n               ?object risk:has_risk_factor_target ?has_risk_factor_target. \n               ?has_risk_factor_source risk:has_risk_element_name ?has_source_risk_element_name.  \n               ?has_risk_factor_target risk:has_risk_element_name ?has_target_risk_element_name.  \n              "+langFilter("?has_source_risk_element_name")+" \n              "+langFilter("?has_target_risk_element_name")+" \n              } \n";return ArrayOfIDs?(listQuery+="FILTER ( "+ArrayOfIDs.map(function(id){return"?subject="+id.split("_")[0]+":"+id}).join("||")+"  )\n }",selectQuery(listQuery)):(listQuery+="}",selectQuery(listQuery,null,CONFIG.USECACHE?type+"_all":null))}function countAllInstances(){var query="SELECT \n    (COUNT(?rf) as ?risk_factors) \n    (COUNT(?rf_r) as ?risk_factors_unreviewed) \n    (COUNT(?rl) as ?risk_elements) \n    (COUNT(?rl_r) as ?risk_elements_unreviewed) \n    (COUNT(?ob) as ?observables) \n    (COUNT(?ob_r) as ?observables_unreviewed) \n    (COUNT(?rv) as ?risk_evidences) \n    (COUNT(?rv_r) as ?risk_evidences_unreviewed) \n    (COUNT(?ci) as ?citations) \n    (COUNT(?me) as ?measurement_types)  \n    FROM "+CONFIG.CARRE_DEFAULT_GRAPH+" WHERE { \n    {?rf a risk:risk_factor} \n    UNION { ?rf_r a risk:risk_factor FILTER NOT EXISTS {?rf_r risk:has_reviewer ?anything} } \n    UNION {?rl a risk:risk_element} \n    UNION { ?rl_r a risk:risk_element FILTER NOT EXISTS {?rl_r risk:has_reviewer ?anything} } \n    UNION {?ob a risk:observable} UNION { ?ob_r a risk:observable FILTER NOT EXISTS {?ob_r risk:has_reviewer ?anything} } \n    UNION {?rv a risk:risk_evidence} UNION { ?rv_r a risk:risk_evidence FILTER NOT EXISTS {?rv_r risk:has_reviewer ?anything} } \n    UNION {?ci a risk:citation} \n    UNION {?me a risk:measurement_type}  }";return CONFIG.USECACHE?cacheQuery(query,null,"count_all"):apiQuery(query)}function selectQuery(sparqlQuery,raw,cache_id){var props=["subject","predicate","object","has_observable_name","has_risk_element_name","has_measurement_type_name","has_risk_factor_association_type","has_risk_factor_source","has_risk_factor_target","has_source_risk_element_name","has_target_risk_element_name","has_citation_pubmed_identifier"];return cache_id?cacheQuery(sparqlQuery,null,cache_id).then(function(res){if(raw)return res;var results=RdfFormatter.groupByProp(res.data,props,null,"value");return results.data.length>0?RdfFormatter.mappings(results):[]}):apiQuery(sparqlQuery).then(function(res){if(raw)return res;var results=RdfFormatter.groupByProp(res.data,props,null,"value");if(results.data.length>0){var MappedResults=RdfFormatter.mappings(results);return MappedResults}return[]})}function apiQuery(sparqlQuery,noprefix){if($rootScope.isOffline)return $state.go("500_API_ERROR"),$q.reject({});var params={};return params.sparql=(noprefix?"":PREFIXSTR)+sparqlQuery,Auth.cookie&&(params.token=Auth.cookie),$http.post(CONFIG.CARRE_API_URL+"query",params).then(function(res){return"No JSON object could be decoded"===res.data||500===res.status||404===res.status||401===res.status?(toastr.error("<p>"+res.data+"</p>","<h4>Oh Error</h4>"),$q.reject(res)):res})["catch"](function(err){Email.bug(err),$state.go("500_API_ERROR")})}function cacheQuery(sparqlQuery,noprefix,req_url_id){var graphName=CONFIG.CARRE_DEFAULT_GRAPH.substring(CONFIG.CARRE_DEFAULT_GRAPH.lastIndexOf("/")+1,CONFIG.CARRE_DEFAULT_GRAPH.lastIndexOf(">")),url=CONFIG.CARRE_CACHE_URL+"carreapi/"+graphName+"_"+CONFIG.LANG+"_"+req_url_id+"/"+encodeURIComponent(CONFIG.CARRE_API_URL+"query")+"/"+encodeURIComponent((noprefix?"":PREFIXSTR)+sparqlQuery)+(Auth.cookie?"/"+Auth.cookie:"");return $http.get(url,{cache:!1}).then(function(res){return"No JSON object could be decoded"===res.data?(toastr.error("<p>"+res.data+"</p>","<h4>Oh Error</h4>"),$q.reject(res)):res})["catch"](function(err){$state.go("500_API_ERROR")})}function invalidateCache(req_url_id){if(CONFIG.USECACHE){var graphName=CONFIG.CARRE_DEFAULT_GRAPH.substring(CONFIG.CARRE_DEFAULT_GRAPH.lastIndexOf("/")+1,CONFIG.CARRE_DEFAULT_GRAPH.lastIndexOf(">")),url=CONFIG.CARRE_CACHE_URL+"refresh_cache/"+graphName+"_"+CONFIG.LANG+"_"+req_url_id;return $http.get(url).then(function(res){})["catch"](function(err){$state.go("500_API_ERROR")})}}this.exports={countAll:countAllInstances,query:apiQuery,cacheQuery:cacheQuery,invalidateCache:invalidateCache,selectQuery:selectQuery,instances:queryInstances,search:searchInstances,"delete":deleteInstance};var PREFIXSTR="PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \nPREFIX carreUsers: <https://carre.kmi.open.ac.uk/users/> \nPREFIX risk: <http://carre.kmi.open.ac.uk/ontology/risk.owl#> \nPREFIX ME: <http://carre.kmi.open.ac.uk/measurement_types/> \nPREFIX OB: <http://carre.kmi.open.ac.uk/observables/> \nPREFIX RL: <http://carre.kmi.open.ac.uk/risk_elements/> \nPREFIX RV: <http://carre.kmi.open.ac.uk/risk_evidences/> \nPREFIX RF: <http://carre.kmi.open.ac.uk/risk_factors/> \nPREFIX RW: <http://carre.kmi.open.ac.uk/risk_reviews/> \nPREFIX MD: <http://carre.kmi.open.ac.uk/medical_experts/> \nPREFIX CI: <http://carre.kmi.open.ac.uk/citations/> \n";return this.exports}]),angular.module("CarreEntrySystem").service("Bioportal",["$http","CONFIG",function($http,CONFIG){var apikey=CONFIG.BIOPORTAL_API_KEY,apiurl=CONFIG.BIOPORTAL_API_URL,fetch=function(term,options,nocui){return search(term,options).then(function(res){var cuis=[],results=[];return res.data.collection.forEach(function(obj){(nocui||!!obj.cui&&obj.cui.length>0&&cuis.indexOf(obj.cui[0])===-1)&&(nocui||cuis.push(obj.cui[0]),results.push({label:obj.prefLabel,value:nocui?obj["@id"]:obj.cui[0],link:obj.links.ui}))}),results})},search=function(input,options){options=options||{};var params={display_context:options.display_context||"false",require_exact_match:options.require_exact_match||"false",include:options.include||"prefLabel,definition,cui",display_links:options.display_links||"true",ontologies:options.ontologies||CONFIG.BIOPORTAL_ONTOLOGIES,require_definitions:options.require_definitions||"false"};return params.q=input,params.apikey=apikey,$http.get(apiurl+"search",{params:params,ignoreLoadingBar:!0,cache:!0})},annotator=function(input,options){var params=options||{};return params.text=input,params.apikey=apikey,$http.get(apiurl+"annotator",{params:params,ignoreLoadingBar:!0,cache:!0})},recommender=function(input,options){var params=options||{};return params.input=input,params.apikey=apikey,$http.get(apiurl+"recommender",{params:params,ignoreLoadingBar:!0,cache:!0})};return{fetch:fetch,search:search,annotator:annotator,recommender:recommender}}]),function(){"use strict";function trustResourceFilter($sce){return function(val){return $sce.trustAsResourceUrl(val)}}function hideSelected(){return function(item,selectedItems){return 0!==selectedItems.length&&(selectedItems.forEach(function(obj){if(item.value===obj)return!0}),!1)}}function sliceLast(){return function(item,char){return!item||item.length<=0||!char||char.length<=0?"":item.substring(item.lastIndexOf(char)+1)}}function prettySigns(){return function(val){return!val||val.length<=0?"":val.replace(new RegExp(">=","g"),"≥").replace(new RegExp("<=","g"),"≤")}}function excludeItems(){return function(items,selectedItems){var out=[];return 0===selectedItems.length?items:(items.forEach(function(item){selectedItems.indexOf(item.value)===-1&&out.push(item)}),out)}}function propsFilter(){return function(items,props){var out=[];return angular.isArray(items)?items.forEach(function(item){for(var itemMatches=!1,keys=Object.keys(props),i=0;i<keys.length;i++){var prop=keys[i],text=props[prop].toLowerCase();try{if(item[prop].toString().toLowerCase().indexOf(text)!==-1){itemMatches=!0;break}}catch(err){}}itemMatches&&out.push(item)}):out=items,out}}trustResourceFilter.$inject=["$sce"],angular.module("CarreEntrySystem").filter("trustAsResourceUrl",trustResourceFilter).filter("hideSelected",hideSelected).filter("sliceLast",sliceLast).filter("prettySigns",prettySigns).filter("propsFilter",propsFilter).filter("exclude",excludeItems)}(),function(){"use strict";function uiSrefActiveIfDirective($state){return{restrict:"A",controller:["$scope","$element","$attrs","CONFIG",function($scope,$element,$attrs,CONFIG){function update(){var state=$attrs.uiSrefActiveIf;$state.includes(state)||$state.is(state)?($element.css("border-right","5px solid "+menuColor(state)),$element.addClass("active")):($element.css("border-right","none"),$element.removeClass("active"))}var menuColor=function(state){var elem=state.substr(state.lastIndexOf(".")+1),color="";switch(elem){case"risk_factors":color=CONFIG.COLORS[0];break;case"risk_evidences":color=CONFIG.COLORS[1];break;case"risk_elements":color=CONFIG.COLORS[2];break;case"observables":color=CONFIG.COLORS[3];break;case"citations":color=CONFIG.COLORS[4];break;default:color="#EEEEEE"}return color};$scope.$on("$stateChangeSuccess",update),update()}]}}function countToDirective($timeout){return{replace:!1,scope:!0,link:function(scope,element,attrs){var num,refreshInterval,duration,steps,step,countTo,increment,e=element[0],calculate=function(){refreshInterval=30,step=0,scope.timoutId=null,countTo=parseInt(attrs.countTo)||0,scope.value=parseInt(attrs.value,10)||0,duration=1e3*parseFloat(attrs.duration)||0,steps=Math.ceil(duration/refreshInterval),increment=(countTo-scope.value)/steps,num=scope.value},tick=function(){scope.timoutId=$timeout(function(){num+=increment,step++,step>=steps?($timeout.cancel(scope.timoutId),num=countTo,e.textContent=countTo):(e.textContent=Math.round(num),tick())},refreshInterval)},start=function(){scope.timoutId&&$timeout.cancel(scope.timoutId),calculate(),tick()};return attrs.$observe("countTo",function(val){val&&start()}),attrs.$observe("value",function(val){start()}),!0}}}uiSrefActiveIfDirective.$inject=["$state"],countToDirective.$inject=["$timeout"],angular.module("CarreEntrySystem").directive("uiSrefActiveIf",uiSrefActiveIfDirective).directive("countTo",countToDirective)}(),function(){"use strict";function MainController($timeout,toastr,$location,CONFIG,CARRE,$state,SweetAlert,Tutorial,$scope,$rootScope){function rootUrl(){return"DEV"===CONFIG.ENV?window.location.host+"/#/":"PROD"===CONFIG.ENV?window.location.host+"/":void 0}var vm=this;CONFIG.ROOT_URL=rootUrl(),vm.config=CONFIG,vm.user=vm.config.currentUser||{},vm.loginUrl=CONFIG.CARRE_DEVICES+"login?next=",vm.logoutUrl=CONFIG.CARRE_DEVICES+"logout?next=",vm.settingsUrl=CONFIG.CARRE_DEVICES+"settings",vm.passwordUrl=CONFIG.CARRE_DEVICES+"recover?next=",$rootScope.isEmbedded||(vm.user.username?toastr.success("Have fun with the risk factors!","<h4>Hi "+vm.user.username+"!</h4>"):toastr.info("Please login if you want to add/edit data.","<h4>Hello Guest!</h4>")),vm.deleteCurrent=function(id){id&&SweetAlert.swal({title:"Are you sure?",text:"Your will not be able to recover this element!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!0,closeOnCancel:!0},function(isConfirm){isConfirm&&(CONFIG.AllowDelete?CARRE["delete"](id).then(function(){$state.go("^.list")}):(toastr.info(id+" deleted!","DEBUG"),$timeout(function(){$state.go("^.list")},500)))})},$scope.IntroOptions=Tutorial.options(),$timeout(function(){!CONFIG.currentUser.username&&"DEV"===CONFIG.ENV&&$state.includes("main.dashboard")&&Tutorial.startGuest($scope.startIntro)},1e3)}MainController.$inject=["$timeout","toastr","$location","CONFIG","CARRE","$state","SweetAlert","Tutorial","$scope","$rootScope"],angular.module("CarreEntrySystem").controller("MainController",MainController)}(),function(){"use strict";function setPermissionValidator(Permission,Auth,$q){Permission.defineRole("authenticated_user",function(stateParams){return Auth.isLoggedIn()})}function runBlock($rootScope,$state,$location,CONFIG,$http,$cookies){$location.search().embed&&($rootScope.isEmbedded=!0,$location.search().hidemenu&&($rootScope.hideMenu=!0),$location.search().showonlygraph&&($rootScope.showOnlyGraph=!0)),CONFIG.useOfflineMode&&$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams,options){"500_API_ERROR"===toState.name&&(event.preventDefault(),$rootScope.isOffline=!0)}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){event.preventDefault()});var lang_cookie=$cookies.get("CARRE_LANG");CONFIG.LANG=lang_cookie&&2===lang_cookie.length?lang_cookie:"en",$location.search().lang&&(CONFIG.LANG=$location.search().lang),window.CARRE_TRANSLATIONS={el:{},lt:{},en:{}},$http.get("/translation."+CONFIG.LANG+".json",{cache:!0}).then(function(res){window.CARRE_TRANSLATIONS[CONFIG.LANG]=res.data})}setPermissionValidator.$inject=["Permission","Auth","$q"],runBlock.$inject=["$rootScope","$state","$location","CONFIG","$http","$cookies"],angular.module("CarreEntrySystem").run(runBlock).run(setPermissionValidator)}(),$(function(){$("#side-menu").metisMenu()}),$(function(){$(window).bind("load resize",function(){topOffset=50,width=this.window.innerWidth>0?this.window.innerWidth:this.screen.width,width<768?($("div.navbar-collapse").addClass("collapse"),topOffset=100):$("div.navbar-collapse").removeClass("collapse"),height=(this.window.innerHeight>0?this.window.innerHeight:this.screen.height)-1,height-=topOffset,height<1&&(height=1),height>topOffset&&$("#page-wrapper").css("min-height",height+"px")});var url=window.location,element=$("ul.nav a").filter(function(){return this.href==url||0==url.href.indexOf(this.href)}).addClass("active").parent().parent().addClass("in").parent();element.is("li")&&element.addClass("active")}),function(){"use strict";function routerConfig($stateProvider){$stateProvider.state("main",{"abstract":!0,controller:"MainController",controllerAs:"main",templateUrl:"app/main.html",resolve:{currentUser:["Auth",function(Auth){return Auth.getUser()}]}}).state("404_error",{templateUrl:"404.html",url:"/404_error"}).state("500_API_ERROR",{templateUrl:"500_API.html",url:"/500_api_error"})}routerConfig.$inject=["$stateProvider"],angular.module("CarreEntrySystem").config(routerConfig)}(),function(){"use strict";angular.module("CarreEntrySystem").constant("CONFIG",{currentUser:{},USECACHE:!1,ENV:"PROD",useOfflineMode:!0,AllowDelete:!0}).config(["$locationProvider","$compileProvider","$urlRouterProvider",function($locationProvider,$compileProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector){var $state=$injector.get("$state");$state.go("404_error")}),$locationProvider.html5Mode(!0),$compileProvider.debugInfoEnabled(!1),function(i,s,o,g,r,a,m){i.GoogleAnalyticsObject=r,i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date,a=s.createElement(o),m=s.getElementsByTagName(o)[0],a.async=1,a.src=g,m.parentNode.insertBefore(a,m)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-60507179-2","auto"),ga("send","pageview")}])}(),function(){"use strict";function config(toastrConfig,$httpProvider,cfpLoadingBarProvider,CONFIG){var defaults={language:"en",api_url:"https://devices.duth.carre-project.eu/ws/",cache_url:"NO_CACHE",authentication_url:"https://devices.duth.carre-project.eu/devices/accounts/",graph_url:"carre.kmi.open.ac.uk"};window.CARRE_ENTRY_SYSTEM_CONFIGURATION=angular.isObject(window.CARRE_ENTRY_SYSTEM_CONFIGURATION)?angular.extend(defaults,window.CARRE_ENTRY_SYSTEM_CONFIGURATION):defaults,CONFIG.CARRE_DEFAULT_GRAPH="<http://"+window.CARRE_ENTRY_SYSTEM_CONFIGURATION.graph_url+"/public>",CONFIG.CARRE_ARCHIVE_GRAPH="<http://"+window.CARRE_ENTRY_SYSTEM_CONFIGURATION.graph_url+"/riskdata>",CONFIG.CARRE_DEVICES=window.CARRE_ENTRY_SYSTEM_CONFIGURATION.authentication_url,CONFIG.CARRE_API_URL=window.CARRE_ENTRY_SYSTEM_CONFIGURATION.api_url,CONFIG.CARRE_CACHE_URL=window.CARRE_ENTRY_SYSTEM_CONFIGURATION.cache_url,CONFIG.USECACHE=!1,CONFIG.AllowDelete=!0,CONFIG.BIOPORTAL_API_URL="https://data.bioontology.org/",CONFIG.BIOPORTAL_API_KEY="a15281a9-d87d-4c0f-b7aa-31debe0f6449",CONFIG.BIOPORTAL_ONTOLOGIES="ICD10,ICD10CM",CONFIG.PUBMED_API_URL="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/",CONFIG.EUROPEPMC_API_URL="https://www.ebi.ac.uk/europepmc/webservices/rest/",CONFIG.CACHED_QUERIES={},CONFIG.OPTIONS={usePrefix:!0},CONFIG.LANG=window.CARRE_ENTRY_SYSTEM_CONFIGURATION.language||"en",CONFIG.LANGPredicates=["risk:has_risk_element_name","risk:has_observable_name","risk:has_measurement_type_name","risk:has_enumeration_values","risk:has_label"],CONFIG.SENSOR_PREDICATES=["bmi","height","provenance","calories_metabolised","steps","o2saturation","light_activity_duration","sodium","sleep_time","sleep_efficiency","asleep_duration","deep_sleep_duration","weight","protein","calories_b_m_r","sedentary_activity_duration","date","body_fat","muscle_mass","water_mass","bone_mass","body_d_c_i","intense_activity_duration","intense_activity_distance","logged_activity_distance","sedentary_activity_distance","actuality","minutes_after_wakeup","fat","fibre","blood_pressure_systolic","blood_pressure_diastolic","who_b_p_level","pulse","elevation","floors","moderate_activity_duration","light_activity_distance","moderate_activity_distance","tracked_activity_distance","distance","times_restless","time_to_fall_asleep","awake_duration","restless_duration","calories","activity_calories","marginal_calories","times_awake","carbs","glucose","dinner_situation","drug_situation","start_date","sleep_status","note","latitude","longitude","end_date","light_sleep_duration","water","lean_mass","location","arrhythmia_type","activity_points","fat_mass","timezone","logged_activity_duration","logged_activity_name","http://carre.kmi.open.ac.uk/ontology/sensors.owl#date","diagnosis","left_ventricular_hypertrophy_diagnosis","acute_kidney_injury_diagnosis","egfr","blood_pressure","uric_acid_serum_concentration","smoking_status","blood_glucose_fasting","blood_glucose_2h_glucose_after_oral_glucose_tolerance_test","duration","heartrate","haemoglobin_hb","high-density_lipoprotein_cholesterol_hdl-c","ldl-c_low-density_lipoprotein_cholesterol","total_cholesterol_tc","triglycerides_serum_concentration_tg","hemoglobin_hb_level","diabetes_diagnosis","hypertension_diagnosis"];var jnnnColors=["#e08526","#a118fb","#2f739c","#2db315","#fb64b0","#27af8d","#4663db","#706f42","#ba4645","#b68bce","#ad36bc","#ac9c1f","#b3948f","#2b7d1a","#d32528","#ad4a80","#8f6521","#4ea8ad","#87a64a","#3d7860","#77687f","#ea7790","#fe4df0","#cb2964","#9d5962","#f57550","#d78670","#4858fb","#7499ee","#c37eef","#6f60bc","#9a3cdb","#7ca66d","#107d40","#3e6cbb","#6ba78d","#f067d0","#939f8e","#4f7741","#bd4525","#c52d81","#c3924d","#22a3ee","#54717e","#657061","#58771c","#d02747","#766f1e","#c589af","#7d43fb","#a696ae","#81a0ae","#8b6543","#0d797e","#69ad18","#4dae6c","#5fad49","#a14c9e","#8ea51c","#c79223","#a79d4b","#bd936f","#836661","#9f9e6e","#e26af0","#65a1ce","#63699d","#a75823","#935b7f","#dd854e","#9297ce","#914fbc","#d47bcf","#b54863","#d0878f","#f17671","#a08def","#7753db","#bb319e","#e179af","#f9742a","#a35844","#855d9d"],myColors=["#377eb8","#e41a1c","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"].concat(jnnnColors);
CONFIG.COLORS=myColors.concat(d3.scale.category20().range()),Chart.defaults.global.colours=CONFIG.COLORS.map(function(color){return{fillColor:color}}),angular.extend(toastrConfig,{allowHtml:!0,closeButton:!1,closeHtml:"<button>&times;</button>",extendedTimeOut:1e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},positionClass:"toast-top-right",messageClass:"toast-message",onHidden:null,onShown:null,onTap:null,preventDuplicates:!1,progressBar:!1,tapToDismiss:!0,timeOut:4e3,titleClass:"toast-title",toastClass:"toast"}),cfpLoadingBarProvider.spinnerTemplate='<div style="position:absolute; top:-80px; z-index:99999; left:49%"><div class="loader">Loading...</div></div>',cfpLoadingBarProvider.latencyThreshold=600,$httpProvider.interceptors.push(["$q","$injector",function($q,$injector){function retryRequest(httpConfig){var $timeout=$injector.get("$timeout");return incrementalTimeout*=2,$timeout(function(){var $http=$injector.get("$http");return $http(httpConfig)},incrementalTimeout)}var incrementalTimeout=1e3;return{request:function(config){return config},requestError:function(request){return request},responseError:function(response){return 500===response.status||response.status===-1?incrementalTimeout<4e3?retryRequest(response.config):$q.reject(response):(incrementalTimeout=1e3,$q.reject(response))}}}])}config.$inject=["toastrConfig","$httpProvider","cfpLoadingBarProvider","CONFIG"],angular.module("CarreEntrySystem").config(config)}(),angular.module("CarreEntrySystem").run(["$templateCache",function($templateCache){$templateCache.put("app/main.html",'<div id="wrapper" ng-intro-options="IntroOptions" ng-intro-method="startIntro" ng-intro-oncomplete="CompletedEvent" ng-intro-onexit="ExitEvent" ng-intro-onchange="ChangeEvent" ng-intro-onbeforechange="BeforeChangeEvent" ng-intro-autostart="false"><div style="width:100%; height:19px; background-color:#E41A1C; color:white" class="text-center" ng-if="isOffline">OFFLINE MODE</div><carre-header ng-hide="isEmbedded"></carre-header><sidebar ng-if="!hideMenu"></sidebar><div id="page-wrapper" style="min-height: 561px;" ng-style="hideMenu?{\'margin\':\'0 0 0 0\'}:{}"><div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-6"><labe>Configuration<pre>{{main.config | json}}</pre></labe></div><div class="col-xs-6"><labe>User<pre>{{main.user | json}}</pre></labe></div></div><div ui-view=""></div></div><carre-footer ng-hide="isEmbedded"></carre-footer></div>'),$templateCache.put("app/about/about.html",'<h2 class="header">More Information</h2><div><iframe src="//www.slideshare.net/slideshow/embed_code/key/rL6KQLdZuhK9Xu?startSlide=2" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""></iframe><p>The CARRE risk entry system enables the <a href="http://entry.carre-project.eu/medical_experts">medical experts</a> in the <a href="http://www.carre-project.eu/">CARRE project</a> to encode the risk factors between biological, demographic, lifestyle and environmental elements and clinical outcomes in accordance with evidence from the clinical literature. The presented system is based fundamentally on <a href="http://www.w3.org/DesignIssues/LinkedData.html"></a>Linked Data principles, and so in order to make the best use of these encoded factors, they are available as Linked Data through the <a href="http://carre.kmi.open.ac.uk:8890/sparql">CARRE SPARQL Endpoint</a>, making use of control vocabularies (<a href="https://www.nlm.nih.gov/research/umls/">UMLS</a> , <a href="https://www.nlm.nih.gov/snomed/"></a>SNOMED, etc.) and the <a href="http://bioportal.bioontology.org/ontologies/CARRE">CARRE risk factor ontology</a>; specifically, they are encoded in the (standard) Resource Description Framework (<a href="http://www.w3.org/RDF/">RDF</a>) format.</p><p>The system has been developed as a client side web application that follows the <a href="http://microservices.io/">Microservices</a> architectural style and provides native RDF support via the <a href="https://carre.kmi.open.ac.uk/ws/">CARRE API</a> and the <a href="http://carre.kmi.open.ac.uk:8890/sparql">CARRE SPARQL Endpoint</a>. Moreover custom form components have been developed to reflect the structure of the <a href="http://bioportal.bioontology.org/ontologies/CARRE">CARRE risk factor ontology</a>, so that citations, observables, risk elements, risk evidences and risk factors are automatically stored into the CARRE RDF triple store. The CARRE risk entry system is implemented in <a href="http://www.w3.org/TR/html5/">HTML5</a>, <a href="http://www.w3.org/Style/CSS/"></a>CSS and <a href="https://www.javascript.com/">JavaScript</a> using the <a href="https://angularjs.org/">AngularJS</a> framework. The system is open source and the source code is available at <a href="https://github.com/carre-project/carre-entry-system">GitHub</a>. The system maintains referential integrity, so that if “diabetes” is entered as a risk element entity, then a risk factor representing an observed link between diabetes and hypertension will refer to the existing diabetes risk element entity. Medical experts are supported in the reuse of data already entered into the system by the user interface, which allows existing relevant entities to be selected via appropriate searchable lists wherever possible.</p><p>Web development: <a href="http://nporto.com/">Nick Portokallidis</a></p><p>Data cleansing: <a href="http://drosatos.info/">George Drosatos</a></p><p>Scientific supervision: <a href="http://iris.med.duth.gr/kaldoudi/en/">Eleni Kaldoudi</a></p></div><br><br><footer class="footer" style="height:60px;"><div class="row"><div class="col-xs-6"><span><a href="//www.carre-project.eu" target="_blank"><img src="assets/images/CARRE-FooterLogo.png" width="36" height="40" alt="CARRE">&nbsp;CARRE Project © 2015</a></span></div><div class="col-xs-6"><span class="pull-right" style="">FP7-ICT-611140.&nbsp; <a href="//cordis.europa.eu/" target="_blank"><img src="assets/images/Picture1-150x150.png" width="40" height="40" alt="EU"></a></span></div></div></footer>'),$templateCache.put("app/components/carre-element/template.html",'<div class="carre-element"><div cg-busy="loading" style="position:relative;top:-15px;z-index:1"></div><div ng-if="mode===\'view\'" class="carre-element-view"><div ng-class="{\'col-sm-6\':current.pubmedId,\'col-sm-12\':!current.pubmedId }"><ul class="list-group"><li ng-repeat="field in fields" ng-if="current[field.value]" class="list-group-item">{{field.label}}:<carre-linker model="current" property="{{field.value}}"></carre-linker></li></ul><a ng-href="{{rdf_source | trustAsResourceUrl}}" target="_blank" class="btn btn-default btn-xs pull-right">View RDF source</a></div><div ng-if="current.pubmedId" class="col-sm-6"><carre-view-pubmed id="{{current.pubmedId}}"></carre-view-pubmed></div></div><div ng-if="mode!==\'view\'" class="carre-element-form"><risk-element-form ng-if="type===\'risk_element\'&&(current.id||mode===\'create\')" model="current"></risk-element-form><risk-factor-form ng-if="type===\'risk_factor\'&&(current.id||mode===\'create\')" model="current"></risk-factor-form><risk-evidence-form ng-if="type===\'risk_evidence\'&&(current.id||mode===\'create\')" model="current"></risk-evidence-form><citation-form ng-if="type===\'citation\'&&(current.id||mode===\'create\')" model="current"></citation-form><measurement-type-form ng-if="type===\'measurement_type\'&&(current.id||mode===\'create\')" model="current"></measurement-type-form><observable-form ng-if="type===\'observable\'&&(current.id||mode===\'create\')" model="current"></observable-form></div></div>'),$templateCache.put("app/components/carre-element-controls/template.html",'<div class="well-sm" ng-if="controls.user"><a ng-show="\'**.view\'|includedByState" class="btn btn-xs btn-primary" ui-sref="^.edit({id:controls.carreId})"><i class="fa fa-pencil"></i> Edit</a> <a ng-show="\'**.edit\'|includedByState" class="btn btn-xs btn-primary" ui-sref="^.view({id:controls.carreId})"><i class="fa fa-eye"></i> View</a> <span ng-if="controls.dev&&controls.carreId"><a class="btn btn-xs btn-danger" href="" ng-click="main.deleteCurrent(controls.carreId)"><i class="fa fa-trash-o"></i> Delete</a> <span class="badge">{{controls.carreId}}</span></span></div>'),$templateCache.put("app/components/footer/footer.html",'<footer class="footer" style="height:60px;padding:10px"><div class="col-xs-6"><span style="padding-left:10px"><a href="//www.carre-project.eu" target="_blank"><img src="assets/images/CARRE-FooterLogo.png" width="36" height="40" alt="CARRE">&nbsp;CARRE Project © 2015</a></span></div><div class="col-xs-6"><span class="pull-right" style="padding-right:10px">CARRE project is partly funded by the EC under the grant no. FP7-ICT-611140.&nbsp; <a href="//cordis.europa.eu/" target="_blank"><img src="assets/images/Picture1-150x150.png" width="40" height="40" alt="EU"></a></span></div></footer>'),$templateCache.put("app/components/graph-chord/template.html",'<div cg-busy="loading"><carre-graph-controls selected-id="selectedId" disable-options="{showRiskEvidences:true,onlyPath:true}" enable-rotation="true" rotation="rotation" refresh="init()" add-size="addSize()" remove-size="removeSize()" navigate="goToSelected()" expand="addNodeRelations()" clear="deleteSelected()"></carre-graph-controls><div id="chord" class="carre-graph"></div></div>'),$templateCache.put("app/components/graph-controls/template.html",'<div class="carre-graph-controls"><div class="col-xs-6 col-sm-7 col-md-5"><div ng-show="selectedId" class="panel panel-xs panel-default" style="margin:0;position:absolute;z-index:4"><div class="panel-heading" style="padding-top:0;padding-bottom:0;padding-left:0;"><button ng-show="!showDetails" style="background:none" ng-click="showDetails=!showDetails" class="btn btn-sm"><i class="fa fa-caret-square-o-down"></i> Show details</button> <button ng-show="showDetails" ng-click="showDetails=!showDetails" class="btn btn-sm"><i class="fa fa-caret-square-o-up"></i> Hide details</button> <span class="hidden-xs"><strong>{{controls.getType(controls.selectedId).label}}</strong></span> <button ng-click="controls.navigate({})" class="btn btn-xs btn-primary" title="Navigate"><i class="fa fa-link"></i></button> <button ng-show="controls.selectedId && controls.selectedId.indexOf(\'RL\')>=0" title="Expand" ng-click="controls.expand({id:controls.selectedId})" class="btn btn-xs btn-info"><i class="fa fa-share-alt"></i></button> <button ng-show="controls.selectedId && controls.selectedId.indexOf(\'RL\')>=0" title="Remove from graph" ng-click="controls.clear({})" class="btn btn-xs btn-danger"><i class="fa fa-remove"></i></button></div><div class="panel-body" ng-if="showDetails&&controls.selectedId"><carre-element elem-id="{{controls.selectedId}}" mode="view" not-fields="has_author,has_reviewer" hide-pubmed="true"></carre-element></div></div></div><div class="col-xs-6 col-sm-5 col-md-5 col-md-offset-2 text-right"><div ng-if="controls.enableRotation" class="btn-group"><button ng-click="controls.rotation=controls.rotation-40" class="btn btn-sm btn-default"><i class="fa fa-chevron-left"></i></button> <button class="btn btn-sm btn-default disabled">ROTATE</button> <button ng-click="controls.rotation=controls.rotation+40" class="btn btn-sm btn-default"><i class="fa fa-chevron-right"></i></button></div><div ng-hide="controls.disableOptions.showRiskEvidences&&controls.disableOptions.onlyPath" class="btn-group" uib-dropdown="" is-open="status.isopen"><button type="button" class="btn btn-sm btn-default" uib-dropdown-toggle="">Options <span class="caret"></span></button><ul uib-dropdown-menu="" role="menu"><li ng-hide="controls.disableOptions.showRiskEvidences" role="menuitem" style="width:180px"><label class="carre-dropdown-checkbox">Show Risk evidences <input type="checkbox" ng-change="applyRefresh()" ng-model="controls.showRiskEvidences"></label></li><li ng-show="controls.showSlider" role="menuitem" style="width:180px"><label style="width: 100%;" class="carre-dropdown-checkbox">Ratio filter<rzslider rz-slider-model="controls.ratioFilter.min" rz-slider-high="controls.ratioFilter.max" rz-slider-options="controls.slider_toggle.options"></rzslider></label></li><li ng-hide="controls.disableOptions.onlyPath" role="menuitem" style="width:180px"><label class="carre-dropdown-checkbox">Show only path <input type="checkbox" ng-change="applyRefresh()" ng-model="controls.onlyPath"></label></li></ul></div><button ng-click="controls.removeSize({})" class="btn btn-sm btn-default"><i class="fa fa-minus"></i></button> <button ng-click="controls.addSize({})" class="btn btn-sm btn-default"><i class="fa fa-plus"></i></button> <button ng-click="controls.refresh({})" class="btn btn-sm btn-default"><i class="fa fa-refresh"></i></button></div></div>'),$templateCache.put("app/components/graph-network-d3/template.html",'<div cg-busy="loading"><carre-graph-controls selected-id="selectedId" only-path="onlyCore" show-risk-evidences="showRiskEvidences" refresh="init()" add-size="addSize()" remove-size="removeSize()" navigate="goToSelected()" expand="addNodeRelations()" clear="deleteSelected()"></carre-graph-controls><div id="network" class="carre-graph"></div></div>'),$templateCache.put("app/components/graph-network-vis/template.html",'<div cg-busy="loading"><carre-graph-controls selected-id="selectedId" only-path="onlyCore" show-risk-evidences="showRiskEvidences" refresh="init()" add-size="addSize()" remove-size="removeSize()" navigate="goToSelected()" expand="addNodeRelations()" clear="deleteSelected()"></carre-graph-controls><div id="network" class="carre-graph"></div></div>'),$templateCache.put("app/components/graph-sankey/template.html",'<div cg-busy="loading"><carre-graph-controls selected-id="selectedId" only-path="onlyCore" disable-options="{onlyPath:true}" show-risk-evidences="showRiskEvidences" ratio-filter="ratioFilter" refresh="init()" add-size="addSize()" remove-size="removeSize()" navigate="goToSelected()" expand="addNodeRelations()" clear="deleteSelected()"></carre-graph-controls><div id="sankey" class="carre-graph"></div></div>'),$templateCache.put("app/components/header/header.html",'<nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0"><div class="navbar-header"><button type="button" class="navbar-toggle" ng-click="toggleNavbar()"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button> <a class="navbar-brand" href="/"><img src="assets/images/carre_logo.png" class="logo" alt="CARRE"> CARRE Risk entry system</a></div><header-notification></header-notification></nav>'),$templateCache.put("app/components/le_editor/le_editor.html",'<div class="alert alert-default alert-group"><div class="form-inline"><select ng-options="o.name as o.name for o in operators" ng-model="group.operator" class="form-control input-sm"></select><a style="margin-left: 5px" ng-click="addCondition()" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-plus-sign"></span> Add Condition</a> <a style="margin-left: 5px" ng-click="addGroup()" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-plus-sign"></span> Add Group</a> <a ng-show="$parent.group" style="margin-left: 5px" ng-click="removeGroup()" class="btn btn-sm btn-danger"><span class="glyphicon glyphicon-minus-sign"></span> Remove Group</a></div><div class="group-conditions"><div ng-repeat="rule in group.rules track by $index| orderBy:\'index\'" class="condition"><div ng-switch="rule.hasOwnProperty(\'group\')"><div ng-switch-when="true"><le-editor observables="observables" metypes="metypes" group="rule.group"></le-editor></div><div ng-switch-default="ng-switch-default"><div class="form-inline"><div class="row" uib-collapse="!rule.hiddenData"><div class="text-center">loading <img src="assets/images/ajax-loader.gif"></div></div><div class="row" uib-collapse="rule.hiddenData"><ui-select class="le-editor observables input-sm" ng-model="rule.field" theme="bootstrap" ng-init="getMeasurementType(null, rule.field, rule)" on-select="getMeasurementType($item, $model, rule)"><ui-select-match placeholder="Select observable">{{$select.selected.label||\'Select Observable\'}}</ui-select-match><ui-select-choices repeat="ob.value as ob in observables | propsFilter: {label: $select.search}"><div ng-bind-html="ob.label | highlight: $select.search"></div></ui-select-choices></ui-select><select ng-options="c.value as c.name for c in conditions | filter: {types:rule.datatype}" ng-model="rule.condition" class="form-control"></select><div class="input-group"><input ng-if="rule.datatype===\'integer\'" style="margin-left: 5px; width:100px" min="0" type="number" ng-model="rule.data" class="form-control"> <input ng-if="rule.datatype===\'float\'" style="margin-left: 5px; width:100px" type="number" step="0.01" min="0" ng-model="rule.data" class="form-control"><select ng-if="rule.datatype===\'enum\'||rule.datatype===\'boolean\'" style="margin-left: 5px" ng-options="c.value as c.name for c in rule.dataoptions" ng-model="rule.data" class="form-control"><option value="">Select</option></select><span popover-trigger="mouseenter" uib-popover="{{rule.unit_label}}" class="input-group-addon" ng-show="rule.unit">{{rule.unit}}</span></div><a style="margin-left: 10px" ng-click="removeCondition($index)" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-minus-sign"></span></a></div></div></div></div><span style="margin: 0 15%;" class="text-center label label-default">{{(($index+1)!==group.rules.length?group.operator:"")}}</span></div></div></div>'),$templateCache.put("app/components/linker/linker.html",'<span><span ng-if="show===\'links\'"><span ng-repeat="i in items">&nbsp;<a href="/{{i.link | trustAsResourceUrl}}">{{i.label}}</a><span ng-if="!$last">,</span></span></span> <span ng-if="show===\'external_link\'" ng-bind-html="external_link | trustAsResourceUrl"></span> <span ng-if="show===\'condition\'" ng-bind-html="label | trustAsResourceUrl"></span> <span ng-if="show===\'label\'">{{label}}</span></span>'),$templateCache.put("app/components/sidebar/sidebar.html",'<div class="navbar-default sidebar" role="navigation"><div class="sidebar-nav navbar-collapse collapse"><ul class="nav in" id="side-menu"><li><a href="" style="border:none; text-align:left;" class="btn btn-default" ng-click="showAbout=!showAbout"><i class="fa fa-question-circle"></i> Help</a></li><li><a ui-sref="main.dashboard" ui-sref-active-if="main.dashboard">Dashboard</a></li><li id="Explore" ng-class="{active: Explore}"><a href="" ng-click="Explore=!Explore">Explore<span class="fa arrow"></span></a><ul class="nav nav-second-level" uib-collapse="!Explore"><li><a ui-sref="main.explore" ui-sref-active-if="main.explore">Explore risks</a></li><li><a target="_blank" href="http://www.pubmed.gov">Search PubMed</a></li></ul></li><li id="carreElements" ng-class="{active: carreElements}"><a href="" ng-click="carreElements=!carreElements">CARRE elements<span class="fa arrow"></span></a><ul class="nav nav-second-level" uib-collapse="!carreElements"><li><a ui-sref="main.risk_factors.list" ui-sref-active-if="main.risk_factors">Risk Factors</a></li><li><a ui-sref="main.risk_evidences.list" ui-sref-active-if="main.risk_evidences">Risk Evidences</a></li><li><a ui-sref="main.risk_elements.list" ui-sref-active-if="main.risk_elements">Risk Elements</a></li><li><a ui-sref="main.observables.list" ui-sref-active-if="main.observables">Observables</a></li><li><a ui-sref="main.citations.list" ui-sref-active-if="main.citations">Citations</a></li><li><a ui-sref="main.measurement_types.list" ui-sref-active-if="main.measurement_types">Measurement Types</a></li></ul></li><li><a ui-sref="main.medical_experts.list" ui-sref-active-if="main.medical_experts">Medical experts</a></li></ul></div><div pageslide="" ps-size="{{slideWidth}}px" ps-open="showAbout" ps-side="right"><div class="row" style="padding:30px; padding-top:15px; padding-bottom:0; margin-bottom:0;"><a href="" ng-click="showAbout=!showAbout" class="btn btn-primary pull-left"><i class="fa fa-times fa-lg"></i></a></div><div class="row" style="padding:50px; margin-top:0; padding-top:0; overflow: auto; height: 90%;"><div autoscroll="" ng-include="" src="\'app/about/about.html\'"></div></div></div></div>'),$templateCache.put("app/components/stats/stats.html",'<div class="col-lg-3 col-md-6"><a ui-sref="{{goto}}"><div class="panel" ng-style="{\'background-color\':color}"><div class="panel-heading" style="color:white"><div class="row"><div class="col-xs-3"><i class="fa fa-{{type}} fa-5x"></i></div><div class="col-xs-9 text-right"><div class="huge"><span count-to="{{number}}" value="0" duration="1"></span></div><div>{{comments}}</div></div></div></div><div class="panel-footer" style="color:black"><span class="pull-left"><b>{{title}}</b></span> <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span><div class="clearfix"></div></div></div></a></div>'),$templateCache.put("app/components/view-pubmed/view-pubmed.html",'<div cg-busy="loading" class="panel panel-default"><div class="panel-heading">Article : {{id}} <a ng-href="http://www.ncbi.nlm.nih.gov/pubmed/{{id}}" target="_blank">link to PubMed</a></div><div class="panel-body"><div style="white-space: pre-line; overflow-y: auto;">{{pubmedArticle| trustAsResourceUrl}}</div></div></div>'),$templateCache.put("app/pages/citations/list.html",'<div class="col-xs-12"><div cg-busy="citations.gridLoading" id="grid1" ui-grid="citations.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>'),$templateCache.put("app/pages/citations/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Citations <a ng-hide="\'main.citations.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.citations.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.citations.create\' | isState) ||(\'main.citations.createWithId\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.citations.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/pages/dashboard/index.html",'<div><div class="row"><div class="col-lg-12"><h2 class="page-header">Dashboard</h2></div></div><div class="row"><div class="col-lg-6 col-md-6"><p id="intro-risk-model" class="text-center"><img style="width:100%; height:100%" src="assets/images/model.jpg"></p></div><div class="col-lg-6 col-md-6"><canvas id="intro-stats" height="210%" class="chart chart-bar chart-sm" chart-data="dashboard.counterchart_data" chart-labels="dashboard.counterchart_labels" chart-options="dashboard.counterchart_options"></canvas></div></div><div class="row"><hr></div><div class="row"><stats id="intro-box-risk-factors" goto="main.risk_factors.list" title="Risk Factors" number="{{dashboard.risk_factors.total||0}}" comments="{{dashboard.risk_factors.noreviews||0}} unreviewed!" color="{{dashboard.colors[0]}}" type="info"></stats><stats id="intro-box-risk-evidences" goto="main.risk_evidences.list" title="Risk Evidences" number="{{dashboard.risk_evidences.total||0}}" comments="{{dashboard.risk_evidences.noreviews||0}} unreviewed!" color="{{dashboard.colors[1]}}" type="info"></stats><stats goto="main.risk_elements.list" title="Risk Elements" number="{{dashboard.risk_elements.total||0}}" comments="{{dashboard.risk_elements.noreviews||0}} unreviewed!" color="{{dashboard.colors[2]}}" type="info"></stats><stats goto="main.observables.list" title="Observables" number="{{dashboard.observables.total||0}}" comments="{{dashboard.observables.noreviews||0}} unreviewed!" color="{{dashboard.colors[3]}}" type="info"></stats><stats goto="main.citations.list" title="Citations" number="{{dashboard.citations.total||0}}" comments="" color="{{dashboard.colors[4]}}" type="info"></stats></div></div>'),$templateCache.put("app/pages/explore/index.html",'<div><div class="row" ng-hide="showOnlyGraph"><div class="col-lg-12"><h2 class="page-header">Explore <small></small></h2></div></div><div class="row"><div class="col-xs-12"><div class="row" ng-hide="showOnlyGraph"><div class="col-sm-9"><div class="form-group"><label>Graph search by risk elements</label><ui-select multiple="" ng-model="explore.risk_elements_selected" theme="bootstrap" style="width:100%" on-select="refreshColors()" on-remove="refreshColors()"><ui-select-match placeholder="Select...">{{$item.label}}</ui-select-match><ui-select-choices repeat="el.value as el in explore.risk_elements | propsFilter: {label: $select.search}"><div ng-bind-html="el.label | highlight: $select.search"></div></ui-select-choices></ui-select><div style="margin-top:5px"><div class="btn-group"><button ng-click="explore.risk_elements_selected=[];" class="btn btn-sm btn-default">Reset</button> <button ng-click="explore.setNewId()" ng-disabled="explore.risk_elements_selected.length===0" class="btn btn-sm btn-primary">Search</button></div><div class="btn-group"><div class="btn-group" uib-dropdown=""><button id="single-button" type="button" class="btn btn-sm btn-default" uib-dropdown-toggle="" ng-disabled="disabled"><i class="fa fa-youtube-play"></i> Examples <span class="caret"></span></button><ul uib-dropdown-menu="" role="menu" aria-labelledby="single-button"><li role="menuitem" ng-repeat="ex in explore.examples"><a href="" ng-click="runExample(ex.data)">{{ex.label}}</a></li></ul></div><button popover-is-open="explore.popover_open" ng-disabled="explore.risk_elements_selected.length===0" popover-placement="bottom" uib-popover-template="explore.recommendPopoverUrl" popover-title="Recommend example" type="button" class="btn btn-sm btn-default"><i class="fa fa-bookmark"></i> Recommend</button></div></div></div></div><div class="col-sm-3"><label for="visualization_type">Visualization type</label><select id="visualization_type" class="form-control" ng-model="explore.graph_type"><option value="network">Network graph</option><option ng-if="main.config.ENV===\'DEV\'" value="network-d3">Network graph d3</option><option value="sankey">Sankey graph</option><option value="chord">Chord graph</option></select></div></div><div class="row"><div class="col-xs-12"><carre-graph-sankey-risk ng-if="explore.graph_type===\'sankey\' && explore.ready" riskid="explore.id"></carre-graph-sankey-risk><carre-graph-chord-risk ng-if="explore.graph_type===\'chord\' && explore.ready" riskid="explore.id"></carre-graph-chord-risk><carre-graph-risk ng-if="explore.graph_type===\'network\' && explore.ready" riskid="explore.id"></carre-graph-risk><carre-graph-network-d3 ng-if="explore.graph_type===\'network-d3\' && explore.ready" riskid="explore.id"></carre-graph-network-d3></div></div></div></div></div><script type="text/ng-template" id="recommendExampleTemplate.html"><div class="form-group"> <label>Add a description for your example</label> <textarea ng-model="exampleDesc" style="width:400px" class="form-control"></textarea> <hr> <div> <a href="" ng-click="explore.popover_open=false;" class="btn btn-default"> Cancel </a> <a href="" ng-click="explore.recommendExample(exampleDesc);explore.popover_open=false;" class="btn btn-primary"> Send </a> </div> </div></script>'),$templateCache.put("app/pages/explore/mine-literature.html",'<div><div class="row" ng-hide="showOnlyGraph"><div class="col-lg-12"><h2 class="page-header">Mine Literature</h2></div></div><div class="row"><div class="col-xs-12"><div class="row"><iframe style="border:0 none; width:100%;height:700px" id="mine-literature-iframe" src="https://visual.duth.carre-project.eu/static/academy/list.html" frameborder="0" hspace="0" vspace="0" marginheight="0" marginwidth="0"></iframe></div></div></div></div>'),$templateCache.put("app/pages/measurement_types/list.html",'<div class="col-xs-12"><div cg-busy="measurement_types.gridLoading" id="grid1" ui-grid="measurement_types.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>'),$templateCache.put("app/pages/measurement_types/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Measurement Types <a ng-hide="\'main.measurement_types.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.measurement_types.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.measurement_types.create\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.measurement_types.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/pages/medical_experts/list.html",'<div class="col-xs-12"><div class="row"><div class="col-sm-6 col-lg-4" ng-repeat="item in medical_experts.users track by $index| orderBy:\'$index\'"><div class="panel panel-default" style="height:300px"><div class="panel-heading"><a href="" ui-sref="main.medical_experts.view({id:item.id_label})">{{item.has_firstname_label}} {{item.has_lastname_label}}, {{item.has_educational_degree_label}}</a><div class="box-tools pull-right"><a href="" ui-sref="main.medical_experts.view({id:item.id_label})">View profile</a></div></div><div class="panel-body" style="height:220px"><ul style="padding-left:5px"><li style="list-style-type: none; margin-top:10px" ng-repeat="pos in item.has_medical_position"><i class="fa fa-angle-right fa-lg fa-x2"></i> {{ pos}}</li></ul></div><div class="panel-footer" style="padding-bottom:26px"><span style="float:left"><span ng-if="item.is_coordinator_of_team"><b>Coordinator</b></span></span> <span style="float:right">{{item.has_team_name[0]}} Team</span></div></div></div></div></div>'),$templateCache.put("app/pages/medical_experts/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Medical Experts <a ng-hide="\'main.medical_experts.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.medical_experts.list"><i class="fa fa-arrow-left"></i> Back</a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/pages/observables/list.html",'<div class="col-xs-12"><div cg-busy="observables.gridLoading" id="grid1" ui-grid="observables.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>'),$templateCache.put("app/pages/observables/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Observables <a ng-hide="\'main.observables.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.observables.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.observables.create\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.observables.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/pages/risk_elements/list.html",'<div class="col-xs-12"><div cg-busy="risk_elements.gridLoading" id="grid1" ui-grid="risk_elements.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>'),$templateCache.put("app/pages/risk_elements/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Risk elements <a ng-hide="\'main.risk_elements.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.risk_elements.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.risk_elements.create\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.risk_elements.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),
$templateCache.put("app/pages/risk_evidences/list.html",'<div class="col-xs-12"><div cg-busy="risk_evidences.gridLoading" id="grid1" ui-grid="risk_evidences.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div><div pageslide="" ps-size="640px" ps-open="risk_evidences.selectedRisk_evidence" ps-side="right"><div cg-busy="risk_evidences.loading" style="padding:10px;"><a ui-sref="main.risk_evidences.view({id:risk_evidences.selectedRisk_evidence})" class="btn btn-primary">Profile</a> <a href="" ng-click="risk_evidences.setPubmed()" class="btn btn-primary"><i class="fa fa-times fa-lg"></i></a><br><br><div ng-if="risk_evidences.selectedRisk_evidence"><div ng-if="risk_evidences.pubmedApi" style="white-space: pre-line; overflow-y: auto;height: 95%; width:620px; position: fixed;" ng-bind-html="risk_evidences.pubmedArticle"></div><iframe ng-if="!risk_evidences.pubmedApi" style="border:none; position: fixed; height:90%; width:620px" height="90%" width="620px" src="{{\'http://www.ncbi.nlm.nih.gov/pubmed/\'+risk_evidences.selectedRisk_evidence | trustAsResourceUrl}}"></iframe></div></div></div>'),$templateCache.put("app/pages/risk_evidences/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Risk evidences <a ng-hide="\'main.risk_evidences.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.risk_evidences.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.risk_evidences.create\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.risk_evidences.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/pages/risk_factors/list.html",'<div class="col-xs-12"><div cg-busy="risk_factors.gridLoading" id="grid1" ui-grid="risk_factors.mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>'),$templateCache.put("app/pages/risk_factors/main.html",'<div><div class="row"><div class="col-xs-12"><h2 class="page-header">Risk factors <a ng-hide="\'main.risk_factors.list\' | isState" class="btn btn-sm btn-default" ui-sref="main.risk_factors.list"><i class="fa fa-arrow-left"></i> Back</a> <a ng-hide="(\'main.risk_factors.create\' | isState) || !main.user.username" class="btn btn-sm btn-primary" ui-sref="main.risk_factors.create"><i class="fa fa-plus"></i> <b>Create new</b></a></h2></div></div><div class="row" ui-view=""></div></div>'),$templateCache.put("app/components/header/header-notification/header-notification.html",'<ul class="nav navbar-top-links navbar-right"><li style="position: relative;top: 10px;"><toggle-switch ng-show="main.config.ENV===\'DEV\'" ng-model="main.DEBUG" knob-label="Debug"><toggle-switch></toggle-switch></toggle-switch></li><li ng-show="main.user.username" class="dropdown" uib-dropdown=""><a href="" uib-dropdown-toggle="">Hi {{main.user.username}} <i class="fa fa-user fa-fw"></i> <i class="fa fa-caret-down"></i></a><ul class="uib-dropdown-menu"><li><a ng-href="{{main.settingsUrl}}" target="_blank"><i class="fa fa-gear fa-fw"></i> Settings</a></li><li><a ng-href="{{main.passwordUrl}}"><i class="fa fa-user fa-fw"></i> Change password</a></li><li class="divider"></li><li><a id="logoutUrl" ng-href="{{main.logoutUrl}}{{pathname}}"><i class="fa fa-sign-out fa-fw"></i> Logout</a></li></ul></li><li ng-hide="main.user.username"><a id="loginUrl" ng-href="{{main.loginUrl}}{{pathname}}">Hello Guest, Login<i class="fa fa-sign-in fa-fw"></i></a></li></ul>'),$templateCache.put("app/components/sidebar/sidebar-search/sidebar-search.html",'<li class="sidebar-search"><div class="input-group custom-search-form"><input type="text" class="form-control" placeholder="Search..."> <span class="input-group-btn"><button class="btn btn-default" type="button"><i class="fa fa-search"></i></button></span></div></li>'),$templateCache.put("app/pages/citations/form_component/form.html",'<div><div ng-class="{\'col-sm-6\':!noPubmed}"><form name="form" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><span ng-show="loadingElementIdentifier" class="loadingSelect"></span> <label>Evidence source (Pubmed ID)</label> <span class="badge badge-default">{{pubmedAutocompleteResultsCount}} Result(s)</span><ui-select on-select="selectPubmed($item,$model)" class="ui-select-big-text" ng-model="citation.pubmedId" theme="bootstrap"><ui-select-match placeholder="Enter Pubmed ID"><div>{{$select.selected.title}}</div><div>{{$select.selected.authorString}}</div><div>{{$select.selected.source}} - {{$select.selected.pubYear}}</div></ui-select-match><ui-select-choices style="max-height: 500px;" repeat="obj.pmid as obj in pubmedAutocompleteResults | propsFilter: { title: $select.search, authorString: $select.search, source: $select.search, pmid: $select.search, pubYear: $select.search }" refresh="searchPubmed($select.search)" refresh-delay="1000"><div class="ui-select-big-text"><div ng-bind-html="obj.title | highlight: $select.search"></div><div><small ng-bind-html="obj.authorString | highlight: $select.search"></small></div><div><small ng-bind-html="obj.source | highlight: $select.search"></small> / <small ng-bind-html="obj.pubYear | highlight: $select.search"></small> / <small ng-bind-html="obj.pmid | highlight: $select.search"></small></div></div></ui-select-choices></ui-select></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Citation summary</label> <textarea class="form-control" rows="6" ng-model="citation.summary"></textarea></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Study type</label><ui-select ng-model="citation.studyType" limit="1" multiple="" tagging="" tagging-label="(add new type)" theme="bootstrap"><ui-select-match placeholder="Select study type">{{$item}}</ui-select-match><ui-select-choices repeat="type in types | filter: $select.search"><div ng-bind-html="type | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Study Level</label> <input type="number" min="1" max="4" class="form-control" ng-model="citation.level"></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div><div ng-hide="noPubmed||!showPubmed" class="col-sm-6"><label>Pubmed Viewer</label><carre-view-pubmed ng-if="showPubmed" id="{{citation.pubmedId}}"></carre-view-pubmed></div></div>'),$templateCache.put("app/pages/citations/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current citation<pre>{{citation | json}}</pre></div></div><div class="col-xs-12"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element ng-if="mode" type="citation" elem-id="{{id}}" mode="{{mode}}" elem="current"></carre-element></div>'),$templateCache.put("app/pages/measurement_types/form_component/form.html",'<div><form name="form" novalidate="" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.name.$touched && form.name.$invalid }"><label>Name</label> <input type="text" name="name" placeholder="e.g filtration rate" class="form-control" ng-model="measurement_type.name" required=""><div class="help-block" ng-messages="form.name.$error" ng-if="form.name.$touched"><p ng-message="required">Name is required.</p></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Date type</label><ui-select ng-model="measurement_type.datatype" theme="bootstrap"><ui-select-match placeholder="Select datatype">{{$select.selected}}</ui-select-match><ui-select-choices repeat="type in datatypes"><div ng-bind-html="type | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-if="measurement_type.datatype===\'integer\' || measurement_type.datatype===\'float\'" ng-class="{ \'has-error\': form.unit.$touched && form.unit.$invalid }"><label>Unit</label> <input type="text" name="unit" placeholder="e.g ml/min/1.73 m^2" class="form-control" ng-model="measurement_type.unit" required=""><div class="help-block" ng-messages="form.unit.$error" ng-if="form.unit.$touched"><p ng-message="required">Unit is required.</p></div></div><div class="form-group" ng-if="measurement_type.datatype===\'enum\'" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Values</label><ui-select multiple="" tagging="" tagging-label="(custom \'new\' value)" ng-model="measurement_type.values" theme="bootstrap"><ui-select-match placeholder="Select values...">{{$item}}</ui-select-match><ui-select-choices repeat="val in []">{{val}}</ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-if="measurement_type.datatype===\'boolean\'" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Values</label><ui-select multiple="" limit="2" tagging="" tagging-label="(custom \'new\' value)" ng-model="measurement_type.values" theme="bootstrap"><ui-select-match placeholder="Select values...">{{$item}}</ui-select-match><ui-select-choices repeat="val in [\'yes\',\'no\']">{{val}}</ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Semantic annotation for "{{measurement_type.name||\'e.g age\'}}"</label><div class="alert alert-warning" style="margin-bottom: 0">{{measurement_type.identifier}}</div><uib-accordion close-others="true"><uib-accordion-group><uib-accordion-heading><span uib-popover="Units of Measurement Ontology by Bioportal" popover-trigger="mouseenter">UO ontology</span><div ng-show="loadingElementIdentifier" class="loadingSelect"></div></uib-accordion-heading><ui-select ng-model="measurement_type.identifier" theme="bootstrap"><ui-select-match allow-clear="true" placeholder="Search...">{{$select.selected.label}} - {{$select.selected.value | sliceLast:\'/\' }}</ui-select-match><ui-select-choices repeat="elem.value as elem in bioportalAutocompleteResults | propsFilter: {label: $select.search}" refresh="bioportalAutocomplete($select.search)" refresh-delay="500"><div ng-bind-html="elem.label | highlight: $select.search"></div><small>{{elem.value}}</small></ui-select-choices></ui-select></uib-accordion-group><uib-accordion-group heading="Custom"><input type="text" name="name" placeholder="e.g {{measurement_type.name}}" class="form-control" ng-change="transformItem(customIdentifier)" ng-model="customIdentifier"></uib-accordion-group></uib-accordion></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div>'),$templateCache.put("app/pages/measurement_types/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current measurement_type<pre>{{measurement_type | json}}</pre></div></div><div class="col-xs-12"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element type="measurement_type" elem-id="{{id}}" mode="{{mode}}"></carre-element></div>'),$templateCache.put("app/pages/medical_experts/single/view.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current medical_expert<pre>{{medical_expert | json}}</pre></div></div><div class="col-xs-12"><div class="col-sm-6"><div ng-show="main.user.username && main.config.ENV===\'DEV\'">ID: <b>{{medical_expert.id}}</b> <a class="btn btn-xs btn-danger" href="" ng-click="medical_expert.deleteCurrent()"><i class="fa fa-trash-o"></i> Delete</a></div><div class="thumbnail" style="display: inline-block;"><img class="avatar-img" ng-src="{{medical_expert.current.has_avatar[0]}}"></div><ul class="list-group"><li class="list-group-item">Name: <b>{{medical_expert.current.has_firstname_label}} {{medical_expert.current.has_lastname_label}}, {{medical_expert.current.has_educational_degree_label}}</b></li><li class="list-group-item">Medical specialty: <b><a target="_blank" ng-href="{{medical_expert.current.has_medical_specialty_link}}">{{medical_expert.current.has_medical_specialty_label}}</a></b></li><li class="list-group-item">Medical Positions:<ul style="padding-left:5px"><li style="list-style-type: none;" ng-repeat="pos in medical_expert.current.has_medical_position"><b><i class="fa fa-angle-right fa-lg fa-x2"></i> {{ pos}}</b></li></ul></li><li ng-if="medical_expert.current.has_short_cv.length>1" class="list-group-item">Short CV: <b>{{medical_expert.current.has_short_cv}}</b></li><li ng-if="medical_expert.current.has_personal_page_url" class="list-group-item">More details: <b><a target="_blank" ng-href="{{medical_expert.current.has_personal_page_url[0]}}">link</a></b></li><li ng-if="medical_expert.current.is_coordinator_of_team" class="list-group-item">Coordinator: <b>{{medical_expert.current.is_coordinator_of_team[0]}} team</b></li><li ng-if="!medical_expert.current.is_coordinator_of_team" class="list-group-item">Team: <b>{{medical_expert.current.has_team_name[0]}}</b></li><b></b><hr></ul></div><div class="col-sm-6"><canvas height="170%" class="chart chart-bar chart-sm" chart-legend="true" chart-data="medical_expert.counterchart_data" chart-series="medical_expert.counterchart_series" chart-labels="medical_expert.counterchart_labels" chart-options="medical_expert.counterchart_options"></canvas></div></div>'),$templateCache.put("app/pages/observables/form_component/form.html",'<div><form name="form" novalidate="" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.name.$touched && form.name.$invalid }"><label>Name</label> <input type="text" name="name" placeholder="e.g glucose tolerance test" class="form-control" ng-model="observable.name" required=""><div class="help-block" ng-messages="form.name.$error" ng-if="form.name.$touched"><p ng-message="required">Name is required.</p></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Type</label><ui-select ng-model="observable.type" theme="bootstrap"><ui-select-match placeholder="Select observable type">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="type.value as type in types | propsFilter: {label: $select.search}"><div ng-bind-html="type.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Measurement type</label><ui-select ng-model="observable.measurement_type" theme="bootstrap"><ui-select-match placeholder="Select measurement type">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="obj.value as obj in measurement_types | propsFilter: {label: $select.search}"><div ng-bind-html="obj.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group"><label>Semantic annotation for "{{observable.name||\'e.g age\'}}"</label><div class="alert alert-warning" style="margin-bottom: 0">{{observable.identifier}}</div><uib-accordion close-others="true"><uib-accordion-group><uib-accordion-heading><span uib-popover="Clinical Measurement Ontology by Bioportal" popover-trigger="mouseenter">CMO ontology</span><div ng-show="loadingElementIdentifier" class="loadingSelect"></div></uib-accordion-heading><ui-select ng-model="observable.identifier" theme="bootstrap"><ui-select-match allow-clear="true" placeholder="Search...">{{$select.selected.label}} - {{$select.selected.value | sliceLast:\'/\' }}</ui-select-match><ui-select-choices repeat="elem.value as elem in bioportalAutocompleteResults | propsFilter: {label: $select.search}" refresh="bioportalAutocomplete($select.search)" refresh-delay="500"><div ng-bind-html="elem.label | highlight: $select.search"></div><small>{{elem.value}}</small></ui-select-choices></ui-select></uib-accordion-group><uib-accordion-group heading="Custom"><input type="text" name="name" placeholder="e.g {{observable.name}}" class="form-control" ng-change="transformIdentifier(customIdentifier)" ng-model="customIdentifier"></uib-accordion-group></uib-accordion></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Sensor annotation for "{{observable.name||\'e.g age\'}}"</label><div class="alert alert-warning" style="margin-bottom: 0">{{observable.predicate}}</div><uib-accordion close-others="true"><uib-accordion-group><uib-accordion-heading><span uib-popover="CARRE Sensors ontology" popover-trigger="mouseenter">CARRE Sensors ontology</span><div ng-show="loadingElementIdentifier" class="loadingSelect"></div></uib-accordion-heading><ui-select on-select="transformPredicate(customPredicate)" ng-model="customPredicate" theme="bootstrap"><ui-select-match allow-clear="true" placeholder="Select from sensors ontology..">{{$select.selected }}</ui-select-match><ui-select-choices repeat="elem in SensorPredicates | filter : $select.search"><div ng-bind-html="elem | highlight: $select.search"></div></ui-select-choices></ui-select></uib-accordion-group><uib-accordion-group heading="Custom"><input type="text" name="name" placeholder="Or type a custom name" class="form-control" ng-change="transformPredicate(customPredicate)" ng-model="customPredicate"></uib-accordion-group></uib-accordion></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div>'),$templateCache.put("app/pages/observables/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current observable<pre>{{observable | json}}</pre></div></div><div class="col-xs-12"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element type="observable" elem-id="{{id}}" mode="{{mode}}"></carre-element></div>'),$templateCache.put("app/pages/risk_elements/form_component/form.html",'<div><form name="form" novalidate="" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.name.$touched && form.name.$invalid }"><label>Name</label> <input type="text" name="name" placeholder="Risk element name e.g acute kidney disease" class="form-control" ng-model="risk_element.name" required=""><div class="help-block" ng-messages="form.name.$error" ng-if="form.name.$touched"><p ng-message="required">Name is required.</p></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Modifiable status</label> <input type="checkbox" ng-true-value="\'yes\'" ng-false-value="\'no\'" ng-model="risk_element.modifiable_status"></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Type</label><ui-select ng-model="risk_element.type" theme="bootstrap"><ui-select-match placeholder="Select risk element type">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="type.value as type in types | propsFilter: {label: $select.search}"><div ng-bind-html="type.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Identifier</label><div ng-show="loadingElementIdentifier" class="loadingSelect"></div><ui-select ng-model="risk_element.identifier" theme="bootstrap"><ui-select-match style="min-width: 100px;" placeholder="Search for CUI...">{{$select.selected.label+\' - \'+$select.selected.value}}</ui-select-match><ui-select-choices repeat="elem.value as elem in bioportalAutocompleteResults | propsFilter: {label: $select.search}" refresh="bioportalAutocomplete($select.search)" refresh-delay="500"><div ng-bind-html="elem.label | highlight: $select.search"></div><small>{{elem.value}}</small></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Observables</label><ui-select multiple="" ng-model="risk_element.observables" theme="bootstrap"><pre>{{$model| json}}</pre><ui-select-match placeholder="Select observables">{{$item.label}}</ui-select-match><ui-select-choices repeat="ob.value as ob in observables | propsFilter: {label: $select.search}"><div ng-bind-html="ob.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Include other risk elements</label><ui-select multiple="" ng-model="risk_element.risk_elements" theme="bootstrap"><ui-select-match placeholder="Select risk elements">{{$item.label}}</ui-select-match><ui-select-choices repeat="el.value as el in risk_elements | propsFilter: {label: $select.search}"><div ng-bind-html="el.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div>'),$templateCache.put("app/pages/risk_elements/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current risk_element<pre>{{risk_element | json}}</pre></div></div><div class="col-xs-12"><div class="col-sm-4"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element ng-if="mode" type="risk_element" elem-id="{{id}}" mode="{{mode}}"></carre-element></div><div class="col-sm-8"><carre-graph-chord-risk ng-if="mode!==\'create\'" height="400" riskid="id"></carre-graph-chord-risk></div></div>'),$templateCache.put("app/pages/risk_evidences/form_component/form.html",'<div><div class="col-sm-6"><form name="form" novalidate="" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Risk factor</label><ui-select ng-model="risk_evidence.risk_factor" theme="bootstrap"><ui-select-match placeholder="Select risk factor">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="rl.value as rl in risk_factors | propsFilter: {label: $select.search}"><div ng-bind-html="rl.label | highlight: $select.search"></div></ui-select-choices></ui-select></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Observables</label><ui-select multiple="" ng-model="risk_evidence.observables" theme="bootstrap"><ui-select-match placeholder="Select observables">{{$item.label}}</ui-select-match><ui-select-choices repeat="ob.id as ob in observables | propsFilter: {label: $select.search}"><div ng-bind-html="ob.label | highlight: $select.search"></div></ui-select-choices></ui-select></div><div class="form-group"><label>Condition <a class="btn btn-xs btn-default" ng-click="leEditEnabled=!leEditEnabled"><span ng-if="!leEditEnabled">Show editor <i class="fa fa-plus-square"></i></span> <span ng-if="leEditEnabled">Hide editor <i class="fa fa-minus-square"></i></span></a></label><div><div class="alert alert-warning" ng-bind-html="output | prettySigns"></div></div><div uib-collapse="!leEditEnabled"><le-editor ng-if="showLeEditor" observables="observables" metypes="metypes" group="filter.group"></le-editor></div></div><div class="row"><div class="form-group col-sm-6" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Ratio value</label> <input type="number" min="{{risk_evidence.confidence_interval_min||0}}" max="{{risk_evidence.confidence_interval_max}}" step="0.01" class="form-control" ng-model="risk_evidence.ratio_value"></div><div class="form-group col-sm-6" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Confidence Interval Minimum</label> <input type="number" step="0.01" class="form-control" min="0" max="{{risk_evidence.confidence_interval_max}}" ng-model="risk_evidence.confidence_interval_min"></div><div class="form-group col-sm-6" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Ratio Type</label><ui-select ng-model="risk_evidence.ratio_type" theme="bootstrap"><ui-select-match placeholder="Select ratio type">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="type.value as type in ratiotypes"><div ng-bind-html="type.label | highlight: $select.search"></div></ui-select-choices></ui-select></div><div class="form-group col-sm-6" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Confidence Interval Maximum</label> <input type="number" step="0.01" class="form-control" min="{{risk_evidence.confidence_interval_min||0}}" max="" ng-model="risk_evidence.confidence_interval_max"></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Evidence source</label><ui-select on-select="viewPubmed($item,$model)" class="ui-select-big-text" ng-model="risk_evidence.evidence_source" theme="bootstrap"><ui-select-match placeholder="Select evidence source"><div>{{$select.selected.title}}</div><div>{{$select.selected.authors}}</div><div>{{$select.selected.date}}</div></ui-select-match><ui-select-choices repeat="obj.value as obj in citations | propsFilter: {title: $select.search,authors: $select.search,date: $select.search}"><div class="ui-select-big-text"><div ng-bind-html="obj.title | highlight: $select.search"></div><div><small ng-bind-html="obj.authors | highlight: $select.search"></small></div><div><small ng-bind-html="obj.date | highlight: $select.search"></small></div></div></ui-select-choices></ui-select></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Adjusted for</label><ui-select multiple="" tagging="" tagging-label="(custom \'new\' value)" ng-model="risk_evidence.adjusted_for" theme="bootstrap"><ui-select-match placeholder="Select values...">{{$item}}</ui-select-match><ui-select-choices repeat="val in adjusted_for | filter: $select.search"><div ng-bind-html="val| highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div><script type="text/ng-template" id="newCitationTemplate.html"><carre-element ng-if="showAddCitation" type="citation" mode="create" elem="{pubmedId:risk_evidence.pubmedId,noPubmed:true}"></carre-element></script><div class="col-sm-6"><label>Pubmed Id <a href="" ng-show="!risk_evidence.evidence_source" popover-is-open="showAddCitation" popover-placement="bottom" uib-popover-template="\'newCitationTemplate.html\'" popover-title="Create a new citation and add it to the collection" class="btn btn-xs btn-default" ng-click="">Add to Citations <i class="fa fa-plus"></i></a></label> <input type="text" name="name" placeholder="Enter pubmed Id" class="form-control" ng-change="loadPubmed()" ng-model="risk_evidence.pubmedId" required=""><carre-view-pubmed ng-if="showPubmed" id="{{risk_evidence.pubmedId}}"></carre-view-pubmed></div></div>'),$templateCache.put("app/pages/risk_evidences/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current risk_evidence<pre>{{risk_evidence | json}}</pre></div></div><div class="col-xs-12"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element ng-if="mode" type="risk_evidence" elem-id="{{id}}" mode="{{mode}}" elem="current"></carre-element></div>'),$templateCache.put("app/pages/risk_factors/form_component/form.html",'<div><form name="form" novalidate="" ng-submit="saveModel()"><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Source risk element</label><ui-select ng-model="risk_factor.source" theme="bootstrap"><ui-select-match placeholder="Select risk element">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="rl.value as rl in risk_elements | propsFilter: {label: $select.search}"><div ng-bind-html="rl.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Target risk element</label><ui-select ng-model="risk_factor.target" theme="bootstrap"><ui-select-match placeholder="Select risk element">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="rl.value as rl in risk_elements | propsFilter: {label: $select.search}"><div ng-bind-html="rl.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group" ng-class="{ \'has-error\': form.email.$touched && form.email.$invalid }"><label>Association Type</label><ui-select ng-model="risk_factor.type" theme="bootstrap"><ui-select-match placeholder="Select risk association type">{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="type.value as type in types | propsFilter: {label: $select.search}"><div ng-bind-html="type.label | highlight: $select.search"></div></ui-select-choices></ui-select><div class="help-block" ng-messages="form.email.$error" ng-if="form.email.$touched"><div ng-messages-include="messages.html"></div></div></div><div class="form-group"><button type="button" ng-click="cancelForm()" class="btn btn-danger">Cancel</button> <button type="submit" class="btn btn-primary">Submit</button></div></form></div>'),$templateCache.put("app/pages/risk_factors/single/single.html",'<div uib-collapse="!main.DEBUG" class="row"><div class="col-xs-12">Current risk_factor<pre>{{risk_factor | json}}</pre></div></div><div class="col-xs-12"><div class="col-sm-6"><carre-element-controls carre-id="{{id}}"></carre-element-controls><carre-element type="risk_factor" elem-id="{{id}}" mode="{{mode}}"></carre-element></div><div ng-if="mode===\'view\'" class="col-sm-6"><carre-graph-risk height="250" riskid="id"></carre-graph-risk></div></div><div ng-if="mode===\'view\'" class="col-xs-12"><h4 class="page-header">Related risk evidences</h4><div cg-busy="gridLoading" id="grid1" ui-grid="mygrid" ui-grid-pagination="" ui-grid-selection="" ui-grid-resize-columns="" ui-grid-move-columns="" ui-grid-exporter="" ui-grid-auto-resize="" class="grid"></div></div>');
}]);
//# sourceMappingURL=../maps/scripts/app-cb86e0f1d0.js.map
